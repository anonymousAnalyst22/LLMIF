///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.10.1.4655 for 8051              22/Nov/2023  15:42:44
// Copyright 2004-2017 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\Source\OSAL_SampleSw.c
//    Command line       =  
//        -f C:\Users\ADMINI~1\AppData\Local\Temp\EWAC11.tmp
//        (D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\Source\OSAL_SampleSw.c
//        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
//        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
//        ZCL_BASIC -D ZCL_IDENTIFY -D ISR_KEYINTERRUPT -D HAL_UART=TRUE -D
//        HAL_LCD=FALSE -D ZCL_ON_OFF -D INT_HEAP_LEN=2800 -D
//        HAL_UART_DMA_RX_MAX=256 -D HAL_UART_DMA_TX_MAX=256 -lC
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List
//        -lA
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List
//        --diag_suppress Pe001,Pa010 -o
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 8 -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x00, 0x01, 0x02, 0x03,
//        0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
//        0x0F}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\Source\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\Source\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\gp\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\Common\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\SPI\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\Font\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_LCD_SPI\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_OLED\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_TFT\
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_China.936
//    List file          =  
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List\OSAL_SampleSw.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME OSAL_SampleSw

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN __INIT_XDATA_Z

        PUBLIC `??osalInitTasks::?relay`
        FUNCTION `??osalInitTasks::?relay`,0203H
        PUBLIC osalInitTasks
        FUNCTION osalInitTasks,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC tasksArr
        PUBLIC tasksCnt
        PUBLIC tasksEvents
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
APSF_Init           SYMBOL "APSF_Init"
`??APSF_Init::?relay` SYMBOL "?relay", APSF_Init
`?<Name APSF_ProcessEvent 2>` SYMBOL "APSF_ProcessEvent"
`??APSF_ProcessEvent::?relay` SYMBOL "?relay", `?<Name APSF_ProcessEvent 2>`
APS_Init            SYMBOL "APS_Init"
`??APS_Init::?relay` SYMBOL "?relay", APS_Init
`?<Name APS_event_loop 6>` SYMBOL "APS_event_loop"
`??APS_event_loop::?relay` SYMBOL "?relay", `?<Name APS_event_loop 6>`
Hal_Init            SYMBOL "Hal_Init"
`??Hal_Init::?relay` SYMBOL "?relay", Hal_Init
`?<Name Hal_ProcessEvent 10>` SYMBOL "Hal_ProcessEvent"
`??Hal_ProcessEvent::?relay` SYMBOL "?relay", `?<Name Hal_ProcessEvent 10>`
ZDApp_Init          SYMBOL "ZDApp_Init"
`??ZDApp_Init::?relay` SYMBOL "?relay", ZDApp_Init
`?<Name ZDApp_event_loop 14>` SYMBOL "ZDApp_event_loop"
`??ZDApp_event_loop::?relay` SYMBOL "?relay", `?<Name ZDApp_event_loop 14>`
ZDNwkMgr_Init       SYMBOL "ZDNwkMgr_Init"
`??ZDNwkMgr_Init::?relay` SYMBOL "?relay", ZDNwkMgr_Init
`?<Name ZDNwkMgr_event_loop 18>` SYMBOL "ZDNwkMgr_event_loop"
`??ZDNwkMgr_event_loop::?relay` SYMBOL "?relay", `?<Name ZDNwkMgr_event_loop 18>`
bdb_Init            SYMBOL "bdb_Init"
`??bdb_Init::?relay` SYMBOL "?relay", bdb_Init
`?<Name bdb_event_loop 22>` SYMBOL "bdb_event_loop"
`??bdb_event_loop::?relay` SYMBOL "?relay", `?<Name bdb_event_loop 22>`
gp_Init             SYMBOL "gp_Init"
`??gp_Init::?relay` SYMBOL "?relay", gp_Init
`?<Name gp_event_loop 26>` SYMBOL "gp_event_loop"
`??gp_event_loop::?relay` SYMBOL "?relay", `?<Name gp_event_loop 26>`
`?<Name macEventLoop 28>` SYMBOL "macEventLoop"
`??macEventLoop::?relay` SYMBOL "?relay", `?<Name macEventLoop 28>`
macTaskInit         SYMBOL "macTaskInit"
`??macTaskInit::?relay` SYMBOL "?relay", macTaskInit
`?<Name nwk_event_loop 32>` SYMBOL "nwk_event_loop"
`??nwk_event_loop::?relay` SYMBOL "?relay", `?<Name nwk_event_loop 32>`
nwk_init            SYMBOL "nwk_init"
`??nwk_init::?relay` SYMBOL "?relay", nwk_init
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
zclSampleSw_Init    SYMBOL "zclSampleSw_Init"
`??zclSampleSw_Init::?relay` SYMBOL "?relay", zclSampleSw_Init
`?<Name zclSampleSw_event_lo 42>` SYMBOL "zclSampleSw_event_loop"
`??zclSampleSw_event_loop::?relay` SYMBOL "?relay", `?<Name zclSampleSw_event_lo 42>`
zcl_Init            SYMBOL "zcl_Init"
`??zcl_Init::?relay` SYMBOL "?relay", zcl_Init
`?<Name zcl_event_loop 46>` SYMBOL "zcl_event_loop"
`??zcl_event_loop::?relay` SYMBOL "?relay", `?<Name zcl_event_loop 46>`
osalInitTasks       SYMBOL "osalInitTasks"
`??osalInitTasks::?relay` SYMBOL "?relay", osalInitTasks

        EXTERN `??APSF_Init::?relay`
        FUNCTION `??APSF_Init::?relay`,00H
        EXTERN `??APSF_ProcessEvent::?relay`
        FUNCTION `??APSF_ProcessEvent::?relay`,00H
        EXTERN `??APS_Init::?relay`
        FUNCTION `??APS_Init::?relay`,00H
        EXTERN `??APS_event_loop::?relay`
        FUNCTION `??APS_event_loop::?relay`,00H
        EXTERN `??Hal_Init::?relay`
        FUNCTION `??Hal_Init::?relay`,00H
        EXTERN `??Hal_ProcessEvent::?relay`
        FUNCTION `??Hal_ProcessEvent::?relay`,00H
        EXTERN `??ZDApp_Init::?relay`
        FUNCTION `??ZDApp_Init::?relay`,00H
        EXTERN `??ZDApp_event_loop::?relay`
        FUNCTION `??ZDApp_event_loop::?relay`,00H
        EXTERN `??ZDNwkMgr_Init::?relay`
        FUNCTION `??ZDNwkMgr_Init::?relay`,00H
        EXTERN `??ZDNwkMgr_event_loop::?relay`
        FUNCTION `??ZDNwkMgr_event_loop::?relay`,00H
        EXTERN `??bdb_Init::?relay`
        FUNCTION `??bdb_Init::?relay`,00H
        EXTERN `??bdb_event_loop::?relay`
        FUNCTION `??bdb_event_loop::?relay`,00H
        EXTERN `??gp_Init::?relay`
        FUNCTION `??gp_Init::?relay`,00H
        EXTERN `??gp_event_loop::?relay`
        FUNCTION `??gp_event_loop::?relay`,00H
        EXTERN `??macEventLoop::?relay`
        FUNCTION `??macEventLoop::?relay`,00H
        EXTERN `??macTaskInit::?relay`
        FUNCTION `??macTaskInit::?relay`,00H
        EXTERN `??nwk_event_loop::?relay`
        FUNCTION `??nwk_event_loop::?relay`,00H
        EXTERN `??nwk_init::?relay`
        FUNCTION `??nwk_init::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??zclSampleSw_Init::?relay`
        FUNCTION `??zclSampleSw_Init::?relay`,00H
        EXTERN `??zclSampleSw_event_loop::?relay`
        FUNCTION `??zclSampleSw_event_loop::?relay`,00H
        EXTERN `??zcl_Init::?relay`
        FUNCTION `??zcl_Init::?relay`,00H
        EXTERN `??zcl_event_loop::?relay`
        FUNCTION `??zcl_event_loop::?relay`,00H
        EXTERN APSF_Init
        FUNCTION APSF_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_Init
        FUNCTION APS_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN Hal_Init
        FUNCTION Hal_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_Init
        FUNCTION ZDApp_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDNwkMgr_Init
        FUNCTION ZDNwkMgr_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bdb_Init
        FUNCTION bdb_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN gp_Init
        FUNCTION gp_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN macTaskInit
        FUNCTION macTaskInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwk_init
        FUNCTION nwk_init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zclSampleSw_Init
        FUNCTION zclSampleSw_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zcl_Init
        FUNCTION zcl_Init,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC

// D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\Source\OSAL_SampleSw.c
//    1 /**************************************************************************************************
//    2   Filename:       OSAL_SampleSw.c
//    3   Revised:        $Date: 2014-06-03 16:29:28 -0700 (Tue, 03 Jun 2014) $
//    4   Revision:       $Revision: 38778 $
//    5 
//    6   Description:    This file contains all the settings and other functions
//    7                   that the user should set and change.
//    8 
//    9 
//   10   Copyright 2006-2014 Texas Instruments Incorporated. All rights reserved.
//   11 
//   12   IMPORTANT: Your use of this Software is limited to those specific rights
//   13   granted under the terms of a software license agreement between the user
//   14   who downloaded the software, his/her employer (which must be your employer)
//   15   and Texas Instruments Incorporated (the "License").  You may not use this
//   16   Software unless you agree to abide by the terms of the License. The License
//   17   limits your use, and you acknowledge, that the Software may not be modified,
//   18   copied or distributed unless embedded on a Texas Instruments microcontroller
//   19   or used solely and exclusively in conjunction with a Texas Instruments radio
//   20   frequency transceiver, which is integrated into your product.  Other than for
//   21   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   22   works of, modify, distribute, perform, display or sell this Software and/or
//   23   its documentation for any purpose.
//   24 
//   25   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   26   PROVIDED �AS IS� WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   27   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   28   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   29   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   30   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   31   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   32   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   33   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   34   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   35   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   36 
//   37   Should you have any questions regarding your right to use this Software,
//   38   contact Texas Instruments Incorporated at www.TI.com.
//   39 **************************************************************************************************/
//   40 
//   41 /*********************************************************************
//   42  * INCLUDES
//   43  */
//   44 
//   45 #include "ZComDef.h"
//   46 #include "hal_drivers.h"
//   47 #include "OSAL.h"
//   48 #include "OSAL_Tasks.h"
//   49 
//   50 #if defined ( MT_TASK )
//   51   #include "MT.h"
//   52   #include "MT_TASK.h"
//   53 #endif
//   54 
//   55 #include "nwk.h"
//   56 #include "APS.h"
//   57 #include "ZDApp.h"
//   58 
//   59 #include "bdb_interface.h"
//   60 
//   61 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
//   62   #include "gp_common.h"
//   63 #endif   
//   64 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//   65   #include "ZDNwkMgr.h"
//   66 #endif
//   67 #if defined ( ZIGBEE_FRAGMENTATION )
//   68   #include "aps_frag.h"
//   69 #endif
//   70 
//   71 #if defined ( INTER_PAN )
//   72   #include "stub_aps.h"
//   73 #if defined ( BDB_TL_INITIATOR )
//   74   #include "bdb_touchlink_initiator.h"
//   75 #endif // BDB_TL_INITIATOR
//   76 #if defined ( BDB_TL_TARGET )
//   77   #include "bdb_touchlink_target.h"
//   78 #endif // BDB_TL_TARGET
//   79 #endif // INTER_PAN
//   80 
//   81 #include "zcl_samplesw.h"
//   82 
//   83 #if (defined OTA_CLIENT) && (OTA_CLIENT == TRUE)
//   84   #include "zcl_ota.h"
//   85 #endif
//   86 /*********************************************************************
//   87  * GLOBAL VARIABLES
//   88  */
//   89 
//   90 // The order in this table must be identical to the task initialization calls below in osalInitTask.

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//   91 const pTaskEventHandlerFn tasksArr[] = {
tasksArr:
        DATA16
        DW `??macEventLoop::?relay`
        DW `??nwk_event_loop::?relay`
        DW `??gp_event_loop::?relay`
        DW `??Hal_ProcessEvent::?relay`
        DW `??APS_event_loop::?relay`
        DW `??APSF_ProcessEvent::?relay`
        DW `??ZDApp_event_loop::?relay`
        DW `??ZDNwkMgr_event_loop::?relay`
        DW `??zcl_event_loop::?relay`
        DW `??bdb_event_loop::?relay`
        DW `??zclSampleSw_event_loop::?relay`
//   92   macEventLoop,
//   93   nwk_event_loop,
//   94 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
//   95   gp_event_loop,
//   96 #endif  
//   97   Hal_ProcessEvent,
//   98 #if defined( MT_TASK )
//   99   MT_ProcessEvent,
//  100 #endif
//  101   APS_event_loop,
//  102 #if defined ( ZIGBEE_FRAGMENTATION )
//  103   APSF_ProcessEvent,
//  104 #endif
//  105   ZDApp_event_loop,
//  106 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//  107   ZDNwkMgr_event_loop,
//  108 #endif
//  109   //Added to include TouchLink functionality
//  110   #if defined ( INTER_PAN )
//  111     StubAPS_ProcessEvent,
//  112   #endif
//  113   // Added to include TouchLink initiator functionality
//  114   #if defined ( BDB_TL_INITIATOR )
//  115     touchLinkInitiator_event_loop,
//  116   #endif
//  117   // Added to include TouchLink target functionality
//  118   #if defined ( BDB_TL_TARGET )
//  119     touchLinkTarget_event_loop,
//  120   #endif
//  121   zcl_event_loop,
//  122   bdb_event_loop,
//  123   zclSampleSw_event_loop,
//  124 #if (defined OTA_CLIENT) && (OTA_CLIENT == TRUE)
//  125   zclOTA_event_loop
//  126 #endif
//  127 };
//  128 

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
//  129 const uint8 tasksCnt = sizeof( tasksArr ) / sizeof( tasksArr[0] );
tasksCnt:
        DB 11

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  130 uint16 *tasksEvents;
tasksEvents:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  131 
//  132 /*********************************************************************
//  133  * FUNCTIONS
//  134  *********************************************************************/
//  135 
//  136 /*********************************************************************
//  137  * @fn      osalInitTasks
//  138  *
//  139  * @brief   This function invokes the initialization function for each task.
//  140  *
//  141  * @param   void
//  142  *
//  143  * @return  none
//  144  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  145 void osalInitTasks( void )
osalInitTasks:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function osalInitTasks
        CODE
//  146 {
        FUNCALL osalInitTasks, osal_mem_alloc
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, osal_memset
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, macTaskInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, nwk_init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, gp_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, Hal_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, APS_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, APSF_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, ZDApp_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, ZDNwkMgr_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, zcl_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, bdb_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL osalInitTasks, zclSampleSw_Init
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  147   uint8 taskID = 0;
//  148 
//  149   tasksEvents = (uint16 *)osal_mem_alloc( sizeof( uint16 ) * tasksCnt);
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x16
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       DPTR,#tasksEvents
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
//  150   osal_memset( tasksEvents, 0, (sizeof( uint16 ) * tasksCnt));
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x16
        MOV       R5,#0x0
        MOV       R1,#0x0
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
//  151 
//  152   macTaskInit( taskID++ );
        ; Setup parameters for call to function macTaskInit
        MOV       R1,#0x0
        LCALL     `??macTaskInit::?relay`; Banked call to: macTaskInit
//  153   nwk_init( taskID++ );
        ; Setup parameters for call to function nwk_init
        MOV       R1,#0x1
        LCALL     `??nwk_init::?relay`; Banked call to: nwk_init
//  154 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
//  155   gp_Init( taskID++ );
        ; Setup parameters for call to function gp_Init
        MOV       R1,#0x2
        LCALL     `??gp_Init::?relay`; Banked call to: gp_Init
//  156 #endif
//  157   Hal_Init( taskID++ );
        ; Setup parameters for call to function Hal_Init
        MOV       R1,#0x3
        LCALL     `??Hal_Init::?relay`; Banked call to: Hal_Init
//  158 #if defined( MT_TASK )
//  159   MT_TaskInit( taskID++ );
//  160 #endif
//  161   APS_Init( taskID++ );
        ; Setup parameters for call to function APS_Init
        MOV       R1,#0x4
        LCALL     `??APS_Init::?relay`; Banked call to: APS_Init
//  162 #if defined ( ZIGBEE_FRAGMENTATION )
//  163   APSF_Init( taskID++ );
        ; Setup parameters for call to function APSF_Init
        MOV       R1,#0x5
        LCALL     `??APSF_Init::?relay`; Banked call to: APSF_Init
//  164 #endif
//  165   ZDApp_Init( taskID++ );
        ; Setup parameters for call to function ZDApp_Init
        MOV       R1,#0x6
        LCALL     `??ZDApp_Init::?relay`; Banked call to: ZDApp_Init
//  166 #if defined ( ZIGBEE_FREQ_AGILITY ) || defined ( ZIGBEE_PANID_CONFLICT )
//  167   ZDNwkMgr_Init( taskID++ );
        ; Setup parameters for call to function ZDNwkMgr_Init
        MOV       R1,#0x7
        LCALL     `??ZDNwkMgr_Init::?relay`; Banked call to: ZDNwkMgr_Init
//  168 #endif
//  169   // Added to include TouchLink functionality 
//  170   #if defined ( INTER_PAN )
//  171     StubAPS_Init( taskID++ );
//  172   #endif
//  173   // Added to include TouchLink initiator functionality 
//  174   #if defined( BDB_TL_INITIATOR )
//  175     touchLinkInitiator_Init( taskID++ );
//  176   #endif
//  177   // Added to include TouchLink target functionality 
//  178   #if defined ( BDB_TL_TARGET )
//  179     touchLinkTarget_Init( taskID++ );
//  180   #endif
//  181   zcl_Init( taskID++ );
        ; Setup parameters for call to function zcl_Init
        MOV       R1,#0x8
        LCALL     `??zcl_Init::?relay`; Banked call to: zcl_Init
//  182   bdb_Init( taskID++ );
        ; Setup parameters for call to function bdb_Init
        MOV       R1,#0x9
        LCALL     `??bdb_Init::?relay`; Banked call to: bdb_Init
//  183   zclSampleSw_Init( taskID++ );
        ; Setup parameters for call to function zclSampleSw_Init
        MOV       R1,#0xa
        LCALL     `??zclSampleSw_Init::?relay`; Banked call to: zclSampleSw_Init
//  184 #if (defined OTA_CLIENT) && (OTA_CLIENT == TRUE)
//  185   zclOTA_Init( taskID );
//  186 #endif
//  187 }
        POP       DPH
          CFI DPH0 SameValue
          CFI CFA_SP SP+-4
        POP       DPL
          CFI DPL0 SameValue
          CFI CFA_SP SP+-3
        LJMP      ?BRET
          CFI EndBlock cfiBlock0

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??osalInitTasks::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    osalInitTasks

        END
//  188 
//  189 /*********************************************************************
//  190 *********************************************************************/
// 
// 90 bytes in segment BANKED_CODE
//  6 bytes in segment BANK_RELAYS
// 23 bytes in segment XDATA_ROM_C
//  2 bytes in segment XDATA_Z
// 
//  6 bytes of CODE     memory
// 23 bytes of CONST    memory
// 90 bytes of HUGECODE memory
//  2 bytes of XDATA    memory
//
//Errors: none
//Warnings: 2
