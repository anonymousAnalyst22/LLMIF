///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.10.1.4655 for 8051              22/Nov/2023  15:42:47
// Copyright 2004-2017 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\fuzzing-coordinator-response-collection\Components\stack\zdo\ZDObject.c
//    Command line       =  
//        -f C:\Users\ADMINI~1\AppData\Local\Temp\EWAFDA.tmp
//        (D:\fuzzing-coordinator-response-collection\Components\stack\zdo\ZDObject.c
//        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
//        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
//        ZCL_BASIC -D ZCL_IDENTIFY -D ISR_KEYINTERRUPT -D HAL_UART=TRUE -D
//        HAL_LCD=FALSE -D ZCL_ON_OFF -D INT_HEAP_LEN=2800 -D
//        HAL_UART_DMA_RX_MAX=256 -D HAL_UART_DMA_TX_MAX=256 -lC
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List
//        -lA
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List
//        --diag_suppress Pe001,Pa010 -o
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 8 -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x00, 0x01, 0x02, 0x03,
//        0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
//        0x0F}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\Source\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\Source\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\gp\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\Common\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\SPI\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\Font\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_LCD_SPI\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_OLED\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_TFT\
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_China.936
//    List file          =  
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List\ZDObject.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME ZDObject

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?V0
        EXTERN ?V1
        EXTERN ?V2
        EXTERN ?V3
        EXTERN ?V4
        EXTERN ?V6
        EXTERN ?V7
        EXTERN ?V5
        EXTERN ?ALLOC_XSTACK8
        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET
        EXTERN ?CALL_IND
        EXTERN ?DEALLOC_XSTACK8
        EXTERN ?L_MOV_TO_X
        EXTERN ?L_MOV_X
        EXTERN ?L_SUB_X
        EXTERN ?MOVE_LONG8_XDATA_XDATA
        EXTERN ?PUSH_XSTACK8_X_FOUR
        EXTERN ?PUSH_XSTACK8_X_TWO
        EXTERN ?PUSH_XSTACK_I_ONE
        EXTERN ?PUSH_XSTACK_I_THREE
        EXTERN ?PUSH_XSTACK_I_TWO
        EXTERN ?S_SHL
        EXTERN ?UL_GE_X
        EXTERN ?VB
        EXTERN ?XLOAD_R0123
        EXTERN ?XSP
        EXTERN ?XSTACK_DISP0_8
        EXTERN ?XSTACK_DISP100_8
        EXTERN ?XSTACK_DISP101_8
        EXTERN ?XSTACK_DISP102_8
        EXTERN ?XSTORE_R0123
        EXTERN __INIT_XDATA_I
        EXTERN __INIT_XDATA_Z

        PUBLIC `??NLME_PermitJoiningTimeout::?relay`
        FUNCTION `??NLME_PermitJoiningTimeout::?relay`,0203H
        PUBLIC `??ZDMatchSendState::?relay`
        FUNCTION `??ZDMatchSendState::?relay`,0203H
        PUBLIC `??ZDO_AnyClusterMatches::?relay`
        FUNCTION `??ZDO_AnyClusterMatches::?relay`,0203H
        PUBLIC `??ZDO_BuildSimpleDescBuf::?relay`
        FUNCTION `??ZDO_BuildSimpleDescBuf::?relay`,0203H
        FUNCTION `??ZDO_CompareClusterLists::?relay`,0203H
        PUBLIC `??ZDO_ConvertOTAClusters::?relay`
        FUNCTION `??ZDO_ConvertOTAClusters::?relay`,0203H
        FUNCTION `??ZDO_CopyMatchInfo::?relay`,0203H
        FUNCTION `??ZDO_EndDeviceBindMatchTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_EndDeviceTimeoutCB::?relay`
        FUNCTION `??ZDO_EndDeviceTimeoutCB::?relay`,0203H
        PUBLIC `??ZDO_Init::?relay`
        FUNCTION `??ZDO_Init::?relay`,0203H
        PUBLIC `??ZDO_MatchEndDeviceBind::?relay`
        FUNCTION `??ZDO_MatchEndDeviceBind::?relay`,0203H
        PUBLIC `??ZDO_ParseAddrRsp::?relay`
        FUNCTION `??ZDO_ParseAddrRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseBindUnbindReq::?relay`
        FUNCTION `??ZDO_ParseBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseDeviceAnnce::?relay`
        FUNCTION `??ZDO_ParseDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParseEPListRsp::?relay`
        FUNCTION `??ZDO_ParseEPListRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseEndDeviceBindReq::?relay`
        FUNCTION `??ZDO_ParseEndDeviceBindReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmNwkDiscRsp::?relay`
        FUNCTION `??ZDO_ParseMgmNwkDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtBindRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtBindRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtLqiRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtLqiRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateNotify::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateNotify::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtNwkUpdateReq::?relay`
        FUNCTION `??ZDO_ParseMgmtNwkUpdateReq::?relay`,0203H
        PUBLIC `??ZDO_ParseMgmtRtgRsp::?relay`
        FUNCTION `??ZDO_ParseMgmtRtgRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseNodeDescRsp::?relay`
        FUNCTION `??ZDO_ParseNodeDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseParentAnnce::?relay`
        FUNCTION `??ZDO_ParseParentAnnce::?relay`,0203H
        PUBLIC `??ZDO_ParsePowerDescRsp::?relay`
        FUNCTION `??ZDO_ParsePowerDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseServerDiscRsp::?relay`
        FUNCTION `??ZDO_ParseServerDiscRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescBuf::?relay`
        FUNCTION `??ZDO_ParseSimpleDescBuf::?relay`,0203H
        PUBLIC `??ZDO_ParseSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ParseSimpleDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ParseUserDescRsp::?relay`
        FUNCTION `??ZDO_ParseUserDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessActiveEPReq::?relay`
        FUNCTION `??ZDO_ProcessActiveEPReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessBindUnbindReq::?relay`
        FUNCTION `??ZDO_ProcessBindUnbindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessDeviceAnnce::?relay`
        FUNCTION `??ZDO_ProcessDeviceAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessMatchDescReq::?relay`
        FUNCTION `??ZDO_ProcessMatchDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtBindReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtBindReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtDirectJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtDirectJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLeaveReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLeaveReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtLqiReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtLqiReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtNwkDiscReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtNwkDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtPermitJoinReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtPermitJoinReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessMgmtRtgReq::?relay`
        FUNCTION `??ZDO_ProcessMgmtRtgReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessNodeDescReq::?relay`
        FUNCTION `??ZDO_ProcessNodeDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessNodeDescRsp::?relay`
        FUNCTION `??ZDO_ProcessNodeDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessParentAnnce::?relay`
        FUNCTION `??ZDO_ProcessParentAnnce::?relay`,0203H
        PUBLIC `??ZDO_ProcessParentAnnceRsp::?relay`
        FUNCTION `??ZDO_ProcessParentAnnceRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessPowerDescReq::?relay`
        FUNCTION `??ZDO_ProcessPowerDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessServerDiscReq::?relay`
        FUNCTION `??ZDO_ProcessServerDiscReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessSimpleDescReq::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessSimpleDescRsp::?relay`
        FUNCTION `??ZDO_ProcessSimpleDescRsp::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescReq::?relay`
        FUNCTION `??ZDO_ProcessUserDescReq::?relay`,0203H
        PUBLIC `??ZDO_ProcessUserDescSet::?relay`
        FUNCTION `??ZDO_ProcessUserDescSet::?relay`,0203H
        FUNCTION `??ZDO_RemoveMatchMemory::?relay`,0203H
        PUBLIC `??ZDO_StartDevice::?relay`
        FUNCTION `??ZDO_StartDevice::?relay`,0203H
        PUBLIC `??ZDO_UpdateAddrManager::?relay`
        FUNCTION `??ZDO_UpdateAddrManager::?relay`,0203H
        PUBLIC `??ZDO_UpdateNwkStatus::?relay`
        FUNCTION `??ZDO_UpdateNwkStatus::?relay`,0203H
        FUNCTION `??zdoSendStateChangeMsg::?relay`,0203H
        PUBLIC NLME_PermitJoiningTimeout
        FUNCTION NLME_PermitJoiningTimeout,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDMatchSendState
        FUNCTION ZDMatchSendState,0a1203H
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 45, STACK
        PUBLIC ZDO_AnyClusterMatches
        FUNCTION ZDO_AnyClusterMatches,080203H
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_BuildSimpleDescBuf
        FUNCTION ZDO_BuildSimpleDescBuf,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        FUNCTION ZDO_CompareClusterLists,080203H
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ConvertOTAClusters
        FUNCTION ZDO_ConvertOTAClusters,080203H
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 10, STACK
        FUNCTION ZDO_CopyMatchInfo,0a1203H
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME XSTACK, 19, STACK
        FUNCTION ZDO_EndDeviceBindMatchTimeoutCB,021603H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_EndDeviceTimeoutCB
        FUNCTION ZDO_EndDeviceTimeoutCB,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_Init
        FUNCTION ZDO_Init,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_MatchEndDeviceBind
        FUNCTION ZDO_MatchEndDeviceBind,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 31, STACK
        PUBLIC ZDO_ParseAddrRsp
        FUNCTION ZDO_ParseAddrRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseBindUnbindReq
        FUNCTION ZDO_ParseBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseDeviceAnnce
        FUNCTION ZDO_ParseDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseEPListRsp
        FUNCTION ZDO_ParseEPListRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDO_ParseEndDeviceBindReq
        FUNCTION ZDO_ParseEndDeviceBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmNwkDiscRsp
        FUNCTION ZDO_ParseMgmNwkDiscRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtBindRsp
        FUNCTION ZDO_ParseMgmtBindRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtLqiRsp
        FUNCTION ZDO_ParseMgmtLqiRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateNotify
        FUNCTION ZDO_ParseMgmtNwkUpdateNotify,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 25, STACK
        PUBLIC ZDO_ParseMgmtNwkUpdateReq
        FUNCTION ZDO_ParseMgmtNwkUpdateReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseMgmtRtgRsp
        FUNCTION ZDO_ParseMgmtRtgRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParseNodeDescRsp
        FUNCTION ZDO_ParseNodeDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC ZDO_ParseParentAnnce
        FUNCTION ZDO_ParseParentAnnce,0a1203H
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ParsePowerDescRsp
        FUNCTION ZDO_ParsePowerDescRsp,080203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ParseServerDiscRsp
        FUNCTION ZDO_ParseServerDiscRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseSimpleDescBuf
        FUNCTION ZDO_ParseSimpleDescBuf,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ParseSimpleDescRsp
        FUNCTION ZDO_ParseSimpleDescRsp,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC ZDO_ParseUserDescRsp
        FUNCTION ZDO_ParseUserDescRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 19, STACK
        PUBLIC ZDO_ProcessActiveEPReq
        FUNCTION ZDO_ProcessActiveEPReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        PUBLIC ZDO_ProcessBindUnbindReq
        FUNCTION ZDO_ProcessBindUnbindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        PUBLIC ZDO_ProcessDeviceAnnce
        FUNCTION ZDO_ProcessDeviceAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 54, STACK
        PUBLIC ZDO_ProcessMatchDescReq
        FUNCTION ZDO_ProcessMatchDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 41, STACK
        PUBLIC ZDO_ProcessMgmtBindReq
        FUNCTION ZDO_ProcessMgmtBindReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        PUBLIC ZDO_ProcessMgmtDirectJoinReq
        FUNCTION ZDO_ProcessMgmtDirectJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 16, STACK
        PUBLIC ZDO_ProcessMgmtLeaveReq
        FUNCTION ZDO_ProcessMgmtLeaveReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        PUBLIC ZDO_ProcessMgmtLqiReq
        FUNCTION ZDO_ProcessMgmtLqiReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 63, STACK
        PUBLIC ZDO_ProcessMgmtNwkDiscReq
        FUNCTION ZDO_ProcessMgmtNwkDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 17, STACK
        PUBLIC ZDO_ProcessMgmtPermitJoinReq
        FUNCTION ZDO_ProcessMgmtPermitJoinReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 18, STACK
        PUBLIC ZDO_ProcessMgmtRtgReq
        FUNCTION ZDO_ProcessMgmtRtgReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_ProcessNodeDescReq
        FUNCTION ZDO_ProcessNodeDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessNodeDescRsp
        FUNCTION ZDO_ProcessNodeDescRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDO_ProcessParentAnnce
        FUNCTION ZDO_ProcessParentAnnce,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        PUBLIC ZDO_ProcessParentAnnceRsp
        FUNCTION ZDO_ProcessParentAnnceRsp,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        PUBLIC ZDO_ProcessPowerDescReq
        FUNCTION ZDO_ProcessPowerDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessServerDiscReq
        FUNCTION ZDO_ProcessServerDiscReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        PUBLIC ZDO_ProcessSimpleDescReq
        FUNCTION ZDO_ProcessSimpleDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        PUBLIC ZDO_ProcessSimpleDescRsp
        FUNCTION ZDO_ProcessSimpleDescRsp,0203H
        ARGFRAME XSTACK, 0, STACK
        PUBLIC ZDO_ProcessUserDescReq
        FUNCTION ZDO_ProcessUserDescReq,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        PUBLIC ZDO_ProcessUserDescSet
        FUNCTION ZDO_ProcessUserDescSet,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 40, STACK
        FUNCTION ZDO_RemoveMatchMemory,021203H
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 2, STACK
        PUBLIC ZDO_StartDevice
        FUNCTION ZDO_StartDevice,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        PUBLIC ZDO_UpdateAddrManager
        FUNCTION ZDO_UpdateAddrManager,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME XSTACK, 13, STACK
        PUBLIC ZDO_UpdateNwkStatus
        FUNCTION ZDO_UpdateNwkStatus,0a1203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBWEAK __Constant_3e8
        PUBLIC apsChannelMask
        PUBLIC matchED
        FUNCTION zdoSendStateChangeMsg,0a1203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        LOCFRAME ISTACK, 1, STACK
        LOCFRAME XSTACK, 10, STACK
        PUBLIC zdpExternalStateTaskID
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-2
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B SameValue
          CFI A SameValue
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT SameValue
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon1
        
APSME_BindRequest   SYMBOL "APSME_BindRequest"
`??APSME_BindRequest::?relay` SYMBOL "?relay", APSME_BindRequest
APSME_GetRequest    SYMBOL "APSME_GetRequest"
`??APSME_GetRequest::?relay` SYMBOL "?relay", APSME_GetRequest
APSME_IsDistributedSecurity SYMBOL "APSME_IsDistributedSecurity"
`??APSME_IsDistributedSecurity::?relay` SYMBOL "?relay", APSME_IsDistributedSecurity
APSME_LookupNwkAddr SYMBOL "APSME_LookupNwkAddr"
`??APSME_LookupNwkAddr::?relay` SYMBOL "?relay", APSME_LookupNwkAddr
APSME_UnBindRequest SYMBOL "APSME_UnBindRequest"
`??APSME_UnBindRequest::?relay` SYMBOL "?relay", APSME_UnBindRequest
APS_ReflectorInit   SYMBOL "APS_ReflectorInit"
`??APS_ReflectorInit::?relay` SYMBOL "?relay", APS_ReflectorInit
APS_SetEndDeviceBindTimeout SYMBOL "APS_SetEndDeviceBindTimeout"
`??APS_SetEndDeviceBindTimeout::?relay` SYMBOL "?relay", APS_SetEndDeviceBindTimeout
AddrMgrEntryLookupExt SYMBOL "AddrMgrEntryLookupExt"
`??AddrMgrEntryLookupExt::?relay` SYMBOL "?relay", AddrMgrEntryLookupExt
AddrMgrEntryLookupNwk SYMBOL "AddrMgrEntryLookupNwk"
`??AddrMgrEntryLookupNwk::?relay` SYMBOL "?relay", AddrMgrEntryLookupNwk
AddrMgrEntryUpdate  SYMBOL "AddrMgrEntryUpdate"
`??AddrMgrEntryUpdate::?relay` SYMBOL "?relay", AddrMgrEntryUpdate
AddrMgrExtAddrSet   SYMBOL "AddrMgrExtAddrSet"
`??AddrMgrExtAddrSet::?relay` SYMBOL "?relay", AddrMgrExtAddrSet
AddrMgrExtAddrValid SYMBOL "AddrMgrExtAddrValid"
`??AddrMgrExtAddrValid::?relay` SYMBOL "?relay", AddrMgrExtAddrValid
AssocCount          SYMBOL "AssocCount"
`??AssocCount::?relay` SYMBOL "?relay", AssocCount
AssocFindDevice     SYMBOL "AssocFindDevice"
`??AssocFindDevice::?relay` SYMBOL "?relay", AssocFindDevice
AssocGetWithExt     SYMBOL "AssocGetWithExt"
`??AssocGetWithExt::?relay` SYMBOL "?relay", AssocGetWithExt
AssocIsChild        SYMBOL "AssocIsChild"
`??AssocIsChild::?relay` SYMBOL "?relay", AssocIsChild
AssocRemove         SYMBOL "AssocRemove"
`??AssocRemove::?relay` SYMBOL "?relay", AssocRemove
NLME_CheckNewAddrSet SYMBOL "NLME_CheckNewAddrSet"
`??NLME_CheckNewAddrSet::?relay` SYMBOL "?relay", NLME_CheckNewAddrSet
NLME_CoordinatorInit SYMBOL "NLME_CoordinatorInit"
`??NLME_CoordinatorInit::?relay` SYMBOL "?relay", NLME_CoordinatorInit
NLME_DirectJoinRequest SYMBOL "NLME_DirectJoinRequest"
`??NLME_DirectJoinRequest::?relay` SYMBOL "?relay", NLME_DirectJoinRequest
NLME_GetCoordExtAddr SYMBOL "NLME_GetCoordExtAddr"
`??NLME_GetCoordExtAddr::?relay` SYMBOL "?relay", NLME_GetCoordExtAddr
NLME_GetCoordShortAddr SYMBOL "NLME_GetCoordShortAddr"
`??NLME_GetCoordShortAddr::?relay` SYMBOL "?relay", NLME_GetCoordShortAddr
NLME_GetExtAddr     SYMBOL "NLME_GetExtAddr"
`??NLME_GetExtAddr::?relay` SYMBOL "?relay", NLME_GetExtAddr
NLME_GetRequest     SYMBOL "NLME_GetRequest"
`??NLME_GetRequest::?relay` SYMBOL "?relay", NLME_GetRequest
NLME_GetShortAddr   SYMBOL "NLME_GetShortAddr"
`??NLME_GetShortAddr::?relay` SYMBOL "?relay", NLME_GetShortAddr
NLME_IsAddressBroadcast SYMBOL "NLME_IsAddressBroadcast"
`??NLME_IsAddressBroadcast::?relay` SYMBOL "?relay", NLME_IsAddressBroadcast
NLME_LeaveReq       SYMBOL "NLME_LeaveReq"
`??NLME_LeaveReq::?relay` SYMBOL "?relay", NLME_LeaveReq
NLME_NetworkFormationRequest SYMBOL "NLME_NetworkFormationRequest"
`??NLME_NetworkFormationRequest::?relay` SYMBOL "?relay", NLME_NetworkFormationRequest
NLME_NwkDiscReq2    SYMBOL "NLME_NwkDiscReq2"
`??NLME_NwkDiscReq2::?relay` SYMBOL "?relay", NLME_NwkDiscReq2
NLME_NwkDiscTerm    SYMBOL "NLME_NwkDiscTerm"
`??NLME_NwkDiscTerm::?relay` SYMBOL "?relay", NLME_NwkDiscTerm
NLME_PermitJoiningRequest SYMBOL "NLME_PermitJoiningRequest"
`??NLME_PermitJoiningRequest::?relay` SYMBOL "?relay", NLME_PermitJoiningRequest
NLME_StartRouterRequest SYMBOL "NLME_StartRouterRequest"
`??NLME_StartRouterRequest::?relay` SYMBOL "?relay", NLME_StartRouterRequest
RTG_RemoveRtgEntry  SYMBOL "RTG_RemoveRtgEntry"
`??RTG_RemoveRtgEntry::?relay` SYMBOL "?relay", RTG_RemoveRtgEntry
ZDApp_ChangeState   SYMBOL "ZDApp_ChangeState"
`??ZDApp_ChangeState::?relay` SYMBOL "?relay", ZDApp_ChangeState
ZDApp_NVUpdate      SYMBOL "ZDApp_NVUpdate"
`??ZDApp_NVUpdate::?relay` SYMBOL "?relay", ZDApp_NVUpdate
ZDP_BindUnbindReq   SYMBOL "ZDP_BindUnbindReq"
`??ZDP_BindUnbindReq::?relay` SYMBOL "?relay", ZDP_BindUnbindReq
ZDP_EPRsp           SYMBOL "ZDP_EPRsp"
`??ZDP_EPRsp::?relay` SYMBOL "?relay", ZDP_EPRsp
ZDP_GenericRsp      SYMBOL "ZDP_GenericRsp"
`??ZDP_GenericRsp::?relay` SYMBOL "?relay", ZDP_GenericRsp
ZDP_MgmtBindRsp     SYMBOL "ZDP_MgmtBindRsp"
`??ZDP_MgmtBindRsp::?relay` SYMBOL "?relay", ZDP_MgmtBindRsp
ZDP_MgmtLqiRsp      SYMBOL "ZDP_MgmtLqiRsp"
`??ZDP_MgmtLqiRsp::?relay` SYMBOL "?relay", ZDP_MgmtLqiRsp
ZDP_MgmtRtgRsp      SYMBOL "ZDP_MgmtRtgRsp"
`??ZDP_MgmtRtgRsp::?relay` SYMBOL "?relay", ZDP_MgmtRtgRsp
ZDP_NodeDescMsg     SYMBOL "ZDP_NodeDescMsg"
`??ZDP_NodeDescMsg::?relay` SYMBOL "?relay", ZDP_NodeDescMsg
ZDP_NwkAddrReq      SYMBOL "ZDP_NwkAddrReq"
`??ZDP_NwkAddrReq::?relay` SYMBOL "?relay", ZDP_NwkAddrReq
ZDP_ParentAnnce     SYMBOL "ZDP_ParentAnnce"
`??ZDP_ParentAnnce::?relay` SYMBOL "?relay", ZDP_ParentAnnce
ZDP_PowerDescMsg    SYMBOL "ZDP_PowerDescMsg"
`??ZDP_PowerDescMsg::?relay` SYMBOL "?relay", ZDP_PowerDescMsg
ZDP_SendData        SYMBOL "ZDP_SendData"
`??ZDP_SendData::?relay` SYMBOL "?relay", ZDP_SendData
ZDP_ServerDiscRsp   SYMBOL "ZDP_ServerDiscRsp"
`??ZDP_ServerDiscRsp::?relay` SYMBOL "?relay", ZDP_ServerDiscRsp
ZDP_SimpleDescMsg   SYMBOL "ZDP_SimpleDescMsg"
`??ZDP_SimpleDescMsg::?relay` SYMBOL "?relay", ZDP_SimpleDescMsg
ZDP_UserDescRsp     SYMBOL "ZDP_UserDescRsp"
`??ZDP_UserDescRsp::?relay` SYMBOL "?relay", ZDP_UserDescRsp
ZDSecMgrPermitJoining SYMBOL "ZDSecMgrPermitJoining"
`??ZDSecMgrPermitJoining::?relay` SYMBOL "?relay", ZDSecMgrPermitJoining
ZDSecMgrPermitJoiningTimeout SYMBOL "ZDSecMgrPermitJoiningTimeout"
`??ZDSecMgrPermitJoiningTimeout::?relay` SYMBOL "?relay", ZDSecMgrPermitJoiningTimeout
ZMacSetReq          SYMBOL "ZMacSetReq"
`??ZMacSetReq::?relay` SYMBOL "?relay", ZMacSetReq
afEndPoints         SYMBOL "afEndPoints"
`??afEndPoints::?relay` SYMBOL "?relay", afEndPoints
afFindSimpleDesc    SYMBOL "afFindSimpleDesc"
`??afFindSimpleDesc::?relay` SYMBOL "?relay", afFindSimpleDesc
afNumEndPoints      SYMBOL "afNumEndPoints"
`??afNumEndPoints::?relay` SYMBOL "?relay", afNumEndPoints
bdb_setFN           SYMBOL "bdb_setFN"
`??bdb_setFN::?relay` SYMBOL "?relay", bdb_setFN
nwkNeighborRemove   SYMBOL "nwkNeighborRemove"
`??nwkNeighborRemove::?relay` SYMBOL "?relay", nwkNeighborRemove
nwkNeighborRemoveAllStranded SYMBOL "nwkNeighborRemoveAllStranded"
`??nwkNeighborRemoveAllStranded::?relay` SYMBOL "?relay", nwkNeighborRemoveAllStranded
osal_build_uint32   SYMBOL "osal_build_uint32"
`??osal_build_uint32::?relay` SYMBOL "?relay", osal_build_uint32
osal_get_timeoutEx  SYMBOL "osal_get_timeoutEx"
`??osal_get_timeoutEx::?relay` SYMBOL "?relay", osal_get_timeoutEx
osal_mem_alloc      SYMBOL "osal_mem_alloc"
`??osal_mem_alloc::?relay` SYMBOL "?relay", osal_mem_alloc
osal_mem_free       SYMBOL "osal_mem_free"
`??osal_mem_free::?relay` SYMBOL "?relay", osal_mem_free
osal_memcmp         SYMBOL "osal_memcmp"
`??osal_memcmp::?relay` SYMBOL "?relay", osal_memcmp
osal_memcpy         SYMBOL "osal_memcpy"
`??osal_memcpy::?relay` SYMBOL "?relay", osal_memcpy
osal_memset         SYMBOL "osal_memset"
`??osal_memset::?relay` SYMBOL "?relay", osal_memset
osal_msg_allocate   SYMBOL "osal_msg_allocate"
`??osal_msg_allocate::?relay` SYMBOL "?relay", osal_msg_allocate
osal_msg_find       SYMBOL "osal_msg_find"
`??osal_msg_find::?relay` SYMBOL "?relay", osal_msg_find
osal_msg_send       SYMBOL "osal_msg_send"
`??osal_msg_send::?relay` SYMBOL "?relay", osal_msg_send
osal_nv_read        SYMBOL "osal_nv_read"
`??osal_nv_read::?relay` SYMBOL "?relay", osal_nv_read
osal_nv_write       SYMBOL "osal_nv_write"
`??osal_nv_write::?relay` SYMBOL "?relay", osal_nv_write
osal_set_event      SYMBOL "osal_set_event"
`??osal_set_event::?relay` SYMBOL "?relay", osal_set_event
osal_start_timerEx  SYMBOL "osal_start_timerEx"
`??osal_start_timerEx::?relay` SYMBOL "?relay", osal_start_timerEx
osal_stop_timerEx   SYMBOL "osal_stop_timerEx"
`??osal_stop_timerEx::?relay` SYMBOL "?relay", osal_stop_timerEx
sAddrExtCmp         SYMBOL "sAddrExtCmp"
`??sAddrExtCmp::?relay` SYMBOL "?relay", sAddrExtCmp
sAddrExtCpy         SYMBOL "sAddrExtCpy"
`??sAddrExtCpy::?relay` SYMBOL "?relay", sAddrExtCpy
NLME_PermitJoiningTimeout SYMBOL "NLME_PermitJoiningTimeout"
`??NLME_PermitJoiningTimeout::?relay` SYMBOL "?relay", NLME_PermitJoiningTimeout
ZDMatchSendState    SYMBOL "ZDMatchSendState"
`??ZDMatchSendState::?relay` SYMBOL "?relay", ZDMatchSendState
ZDO_AnyClusterMatches SYMBOL "ZDO_AnyClusterMatches"
`??ZDO_AnyClusterMatches::?relay` SYMBOL "?relay", ZDO_AnyClusterMatches
ZDO_BuildSimpleDescBuf SYMBOL "ZDO_BuildSimpleDescBuf"
`??ZDO_BuildSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_BuildSimpleDescBuf
ZDO_ConvertOTAClusters SYMBOL "ZDO_ConvertOTAClusters"
`??ZDO_ConvertOTAClusters::?relay` SYMBOL "?relay", ZDO_ConvertOTAClusters
ZDO_EndDeviceTimeoutCB SYMBOL "ZDO_EndDeviceTimeoutCB"
`??ZDO_EndDeviceTimeoutCB::?relay` SYMBOL "?relay", ZDO_EndDeviceTimeoutCB
ZDO_Init            SYMBOL "ZDO_Init"
`??ZDO_Init::?relay` SYMBOL "?relay", ZDO_Init
ZDO_MatchEndDeviceBind SYMBOL "ZDO_MatchEndDeviceBind"
`??ZDO_MatchEndDeviceBind::?relay` SYMBOL "?relay", ZDO_MatchEndDeviceBind
ZDO_ParseAddrRsp    SYMBOL "ZDO_ParseAddrRsp"
`??ZDO_ParseAddrRsp::?relay` SYMBOL "?relay", ZDO_ParseAddrRsp
ZDO_ParseBindUnbindReq SYMBOL "ZDO_ParseBindUnbindReq"
`??ZDO_ParseBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ParseBindUnbindReq
ZDO_ParseDeviceAnnce SYMBOL "ZDO_ParseDeviceAnnce"
`??ZDO_ParseDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ParseDeviceAnnce
ZDO_ParseEPListRsp  SYMBOL "ZDO_ParseEPListRsp"
`??ZDO_ParseEPListRsp::?relay` SYMBOL "?relay", ZDO_ParseEPListRsp
ZDO_ParseEndDeviceBindReq SYMBOL "ZDO_ParseEndDeviceBindReq"
`??ZDO_ParseEndDeviceBindReq::?relay` SYMBOL "?relay", ZDO_ParseEndDeviceBindReq
ZDO_ParseMgmNwkDiscRsp SYMBOL "ZDO_ParseMgmNwkDiscRsp"
`??ZDO_ParseMgmNwkDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmNwkDiscRsp
ZDO_ParseMgmtBindRsp SYMBOL "ZDO_ParseMgmtBindRsp"
`??ZDO_ParseMgmtBindRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtBindRsp
ZDO_ParseMgmtLqiRsp SYMBOL "ZDO_ParseMgmtLqiRsp"
`??ZDO_ParseMgmtLqiRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtLqiRsp
ZDO_ParseMgmtNwkUpdateNotify SYMBOL "ZDO_ParseMgmtNwkUpdateNotify"
`??ZDO_ParseMgmtNwkUpdateNotify::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateNotify
ZDO_ParseMgmtNwkUpdateReq SYMBOL "ZDO_ParseMgmtNwkUpdateReq"
`??ZDO_ParseMgmtNwkUpdateReq::?relay` SYMBOL "?relay", ZDO_ParseMgmtNwkUpdateReq
ZDO_ParseMgmtRtgRsp SYMBOL "ZDO_ParseMgmtRtgRsp"
`??ZDO_ParseMgmtRtgRsp::?relay` SYMBOL "?relay", ZDO_ParseMgmtRtgRsp
ZDO_ParseNodeDescRsp SYMBOL "ZDO_ParseNodeDescRsp"
`??ZDO_ParseNodeDescRsp::?relay` SYMBOL "?relay", ZDO_ParseNodeDescRsp
ZDO_ParseParentAnnce SYMBOL "ZDO_ParseParentAnnce"
`??ZDO_ParseParentAnnce::?relay` SYMBOL "?relay", ZDO_ParseParentAnnce
ZDO_ParsePowerDescRsp SYMBOL "ZDO_ParsePowerDescRsp"
`??ZDO_ParsePowerDescRsp::?relay` SYMBOL "?relay", ZDO_ParsePowerDescRsp
ZDO_ParseServerDiscRsp SYMBOL "ZDO_ParseServerDiscRsp"
`??ZDO_ParseServerDiscRsp::?relay` SYMBOL "?relay", ZDO_ParseServerDiscRsp
ZDO_ParseSimpleDescBuf SYMBOL "ZDO_ParseSimpleDescBuf"
`??ZDO_ParseSimpleDescBuf::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescBuf
ZDO_ParseSimpleDescRsp SYMBOL "ZDO_ParseSimpleDescRsp"
`??ZDO_ParseSimpleDescRsp::?relay` SYMBOL "?relay", ZDO_ParseSimpleDescRsp
ZDO_ParseUserDescRsp SYMBOL "ZDO_ParseUserDescRsp"
`??ZDO_ParseUserDescRsp::?relay` SYMBOL "?relay", ZDO_ParseUserDescRsp
ZDO_ProcessActiveEPReq SYMBOL "ZDO_ProcessActiveEPReq"
`??ZDO_ProcessActiveEPReq::?relay` SYMBOL "?relay", ZDO_ProcessActiveEPReq
ZDO_ProcessBindUnbindReq SYMBOL "ZDO_ProcessBindUnbindReq"
`??ZDO_ProcessBindUnbindReq::?relay` SYMBOL "?relay", ZDO_ProcessBindUnbindReq
ZDO_ProcessDeviceAnnce SYMBOL "ZDO_ProcessDeviceAnnce"
`??ZDO_ProcessDeviceAnnce::?relay` SYMBOL "?relay", ZDO_ProcessDeviceAnnce
ZDO_ProcessMatchDescReq SYMBOL "ZDO_ProcessMatchDescReq"
`??ZDO_ProcessMatchDescReq::?relay` SYMBOL "?relay", ZDO_ProcessMatchDescReq
ZDO_ProcessMgmtBindReq SYMBOL "ZDO_ProcessMgmtBindReq"
`??ZDO_ProcessMgmtBindReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtBindReq
ZDO_ProcessMgmtDirectJoinReq SYMBOL "ZDO_ProcessMgmtDirectJoinReq"
`??ZDO_ProcessMgmtDirectJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtDirectJoinReq
ZDO_ProcessMgmtLeaveReq SYMBOL "ZDO_ProcessMgmtLeaveReq"
`??ZDO_ProcessMgmtLeaveReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLeaveReq
ZDO_ProcessMgmtLqiReq SYMBOL "ZDO_ProcessMgmtLqiReq"
`??ZDO_ProcessMgmtLqiReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtLqiReq
ZDO_ProcessMgmtNwkDiscReq SYMBOL "ZDO_ProcessMgmtNwkDiscReq"
`??ZDO_ProcessMgmtNwkDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtNwkDiscReq
ZDO_ProcessMgmtPermitJoinReq SYMBOL "ZDO_ProcessMgmtPermitJoinReq"
`??ZDO_ProcessMgmtPermitJoinReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtPermitJoinReq
ZDO_ProcessMgmtRtgReq SYMBOL "ZDO_ProcessMgmtRtgReq"
`??ZDO_ProcessMgmtRtgReq::?relay` SYMBOL "?relay", ZDO_ProcessMgmtRtgReq
ZDO_ProcessNodeDescReq SYMBOL "ZDO_ProcessNodeDescReq"
`??ZDO_ProcessNodeDescReq::?relay` SYMBOL "?relay", ZDO_ProcessNodeDescReq
ZDO_ProcessNodeDescRsp SYMBOL "ZDO_ProcessNodeDescRsp"
`??ZDO_ProcessNodeDescRsp::?relay` SYMBOL "?relay", ZDO_ProcessNodeDescRsp
ZDO_ProcessParentAnnce SYMBOL "ZDO_ProcessParentAnnce"
`??ZDO_ProcessParentAnnce::?relay` SYMBOL "?relay", ZDO_ProcessParentAnnce
ZDO_ProcessParentAnnceRsp SYMBOL "ZDO_ProcessParentAnnceRsp"
`??ZDO_ProcessParentAnnceRsp::?relay` SYMBOL "?relay", ZDO_ProcessParentAnnceRsp
ZDO_ProcessPowerDescReq SYMBOL "ZDO_ProcessPowerDescReq"
`??ZDO_ProcessPowerDescReq::?relay` SYMBOL "?relay", ZDO_ProcessPowerDescReq
ZDO_ProcessServerDiscReq SYMBOL "ZDO_ProcessServerDiscReq"
`??ZDO_ProcessServerDiscReq::?relay` SYMBOL "?relay", ZDO_ProcessServerDiscReq
ZDO_ProcessSimpleDescReq SYMBOL "ZDO_ProcessSimpleDescReq"
`??ZDO_ProcessSimpleDescReq::?relay` SYMBOL "?relay", ZDO_ProcessSimpleDescReq
ZDO_ProcessSimpleDescRsp SYMBOL "ZDO_ProcessSimpleDescRsp"
`??ZDO_ProcessSimpleDescRsp::?relay` SYMBOL "?relay", ZDO_ProcessSimpleDescRsp
ZDO_ProcessUserDescReq SYMBOL "ZDO_ProcessUserDescReq"
`??ZDO_ProcessUserDescReq::?relay` SYMBOL "?relay", ZDO_ProcessUserDescReq
ZDO_ProcessUserDescSet SYMBOL "ZDO_ProcessUserDescSet"
`??ZDO_ProcessUserDescSet::?relay` SYMBOL "?relay", ZDO_ProcessUserDescSet
ZDO_StartDevice     SYMBOL "ZDO_StartDevice"
`??ZDO_StartDevice::?relay` SYMBOL "?relay", ZDO_StartDevice
ZDO_UpdateAddrManager SYMBOL "ZDO_UpdateAddrManager"
`??ZDO_UpdateAddrManager::?relay` SYMBOL "?relay", ZDO_UpdateAddrManager
ZDO_UpdateNwkStatus SYMBOL "ZDO_UpdateNwkStatus"
`??ZDO_UpdateNwkStatus::?relay` SYMBOL "?relay", ZDO_UpdateNwkStatus

        EXTERN `??APSME_BindRequest::?relay`
        FUNCTION `??APSME_BindRequest::?relay`,00H
        EXTERN `??APSME_GetRequest::?relay`
        FUNCTION `??APSME_GetRequest::?relay`,00H
        EXTERN `??APSME_IsDistributedSecurity::?relay`
        FUNCTION `??APSME_IsDistributedSecurity::?relay`,00H
        EXTERN `??APSME_LookupNwkAddr::?relay`
        FUNCTION `??APSME_LookupNwkAddr::?relay`,00H
        EXTERN `??APSME_UnBindRequest::?relay`
        FUNCTION `??APSME_UnBindRequest::?relay`,00H
        EXTERN `??APS_ReflectorInit::?relay`
        FUNCTION `??APS_ReflectorInit::?relay`,00H
        EXTERN `??APS_SetEndDeviceBindTimeout::?relay`
        FUNCTION `??APS_SetEndDeviceBindTimeout::?relay`,00H
        EXTERN `??AddrMgrEntryLookupExt::?relay`
        FUNCTION `??AddrMgrEntryLookupExt::?relay`,00H
        EXTERN `??AddrMgrEntryLookupNwk::?relay`
        FUNCTION `??AddrMgrEntryLookupNwk::?relay`,00H
        EXTERN `??AddrMgrEntryUpdate::?relay`
        FUNCTION `??AddrMgrEntryUpdate::?relay`,00H
        EXTERN `??AddrMgrExtAddrSet::?relay`
        FUNCTION `??AddrMgrExtAddrSet::?relay`,00H
        EXTERN `??AddrMgrExtAddrValid::?relay`
        FUNCTION `??AddrMgrExtAddrValid::?relay`,00H
        EXTERN `??AssocCount::?relay`
        FUNCTION `??AssocCount::?relay`,00H
        EXTERN `??AssocFindDevice::?relay`
        FUNCTION `??AssocFindDevice::?relay`,00H
        EXTERN `??AssocGetWithExt::?relay`
        FUNCTION `??AssocGetWithExt::?relay`,00H
        EXTERN `??AssocIsChild::?relay`
        FUNCTION `??AssocIsChild::?relay`,00H
        EXTERN `??AssocRemove::?relay`
        FUNCTION `??AssocRemove::?relay`,00H
        EXTERN `??NLME_CheckNewAddrSet::?relay`
        FUNCTION `??NLME_CheckNewAddrSet::?relay`,00H
        EXTERN `??NLME_CoordinatorInit::?relay`
        FUNCTION `??NLME_CoordinatorInit::?relay`,00H
        EXTERN `??NLME_DirectJoinRequest::?relay`
        FUNCTION `??NLME_DirectJoinRequest::?relay`,00H
        EXTERN `??NLME_GetCoordExtAddr::?relay`
        FUNCTION `??NLME_GetCoordExtAddr::?relay`,00H
        EXTERN `??NLME_GetCoordShortAddr::?relay`
        FUNCTION `??NLME_GetCoordShortAddr::?relay`,00H
        EXTERN `??NLME_GetExtAddr::?relay`
        FUNCTION `??NLME_GetExtAddr::?relay`,00H
        EXTERN `??NLME_GetRequest::?relay`
        FUNCTION `??NLME_GetRequest::?relay`,00H
        EXTERN `??NLME_GetShortAddr::?relay`
        FUNCTION `??NLME_GetShortAddr::?relay`,00H
        EXTERN `??NLME_IsAddressBroadcast::?relay`
        FUNCTION `??NLME_IsAddressBroadcast::?relay`,00H
        EXTERN `??NLME_LeaveReq::?relay`
        FUNCTION `??NLME_LeaveReq::?relay`,00H
        EXTERN `??NLME_NetworkFormationRequest::?relay`
        FUNCTION `??NLME_NetworkFormationRequest::?relay`,00H
        EXTERN `??NLME_NwkDiscReq2::?relay`
        FUNCTION `??NLME_NwkDiscReq2::?relay`,00H
        EXTERN `??NLME_NwkDiscTerm::?relay`
        FUNCTION `??NLME_NwkDiscTerm::?relay`,00H
        EXTERN `??NLME_PermitJoiningRequest::?relay`
        FUNCTION `??NLME_PermitJoiningRequest::?relay`,00H
        EXTERN `??NLME_StartRouterRequest::?relay`
        FUNCTION `??NLME_StartRouterRequest::?relay`,00H
        EXTERN `??RTG_RemoveRtgEntry::?relay`
        FUNCTION `??RTG_RemoveRtgEntry::?relay`,00H
        EXTERN `??ZDApp_ChangeState::?relay`
        FUNCTION `??ZDApp_ChangeState::?relay`,00H
        EXTERN `??ZDApp_NVUpdate::?relay`
        FUNCTION `??ZDApp_NVUpdate::?relay`,00H
        EXTERN `??ZDP_BindUnbindReq::?relay`
        FUNCTION `??ZDP_BindUnbindReq::?relay`,00H
        EXTERN `??ZDP_EPRsp::?relay`
        FUNCTION `??ZDP_EPRsp::?relay`,00H
        EXTERN `??ZDP_GenericRsp::?relay`
        FUNCTION `??ZDP_GenericRsp::?relay`,00H
        EXTERN `??ZDP_MgmtBindRsp::?relay`
        FUNCTION `??ZDP_MgmtBindRsp::?relay`,00H
        EXTERN `??ZDP_MgmtLqiRsp::?relay`
        FUNCTION `??ZDP_MgmtLqiRsp::?relay`,00H
        EXTERN `??ZDP_MgmtRtgRsp::?relay`
        FUNCTION `??ZDP_MgmtRtgRsp::?relay`,00H
        EXTERN `??ZDP_NodeDescMsg::?relay`
        FUNCTION `??ZDP_NodeDescMsg::?relay`,00H
        EXTERN `??ZDP_NwkAddrReq::?relay`
        FUNCTION `??ZDP_NwkAddrReq::?relay`,00H
        EXTERN `??ZDP_ParentAnnce::?relay`
        FUNCTION `??ZDP_ParentAnnce::?relay`,00H
        EXTERN `??ZDP_PowerDescMsg::?relay`
        FUNCTION `??ZDP_PowerDescMsg::?relay`,00H
        EXTERN `??ZDP_SendData::?relay`
        FUNCTION `??ZDP_SendData::?relay`,00H
        EXTERN `??ZDP_ServerDiscRsp::?relay`
        FUNCTION `??ZDP_ServerDiscRsp::?relay`,00H
        EXTERN `??ZDP_SimpleDescMsg::?relay`
        FUNCTION `??ZDP_SimpleDescMsg::?relay`,00H
        EXTERN `??ZDP_UserDescRsp::?relay`
        FUNCTION `??ZDP_UserDescRsp::?relay`,00H
        EXTERN `??ZDSecMgrPermitJoining::?relay`
        FUNCTION `??ZDSecMgrPermitJoining::?relay`,00H
        EXTERN `??ZDSecMgrPermitJoiningTimeout::?relay`
        FUNCTION `??ZDSecMgrPermitJoiningTimeout::?relay`,00H
        EXTERN `??ZMacSetReq::?relay`
        FUNCTION `??ZMacSetReq::?relay`,00H
        EXTERN `??afEndPoints::?relay`
        FUNCTION `??afEndPoints::?relay`,00H
        EXTERN `??afFindSimpleDesc::?relay`
        FUNCTION `??afFindSimpleDesc::?relay`,00H
        EXTERN `??afNumEndPoints::?relay`
        FUNCTION `??afNumEndPoints::?relay`,00H
        EXTERN `??bdb_setFN::?relay`
        FUNCTION `??bdb_setFN::?relay`,00H
        EXTERN `??nwkNeighborRemove::?relay`
        FUNCTION `??nwkNeighborRemove::?relay`,00H
        EXTERN `??nwkNeighborRemoveAllStranded::?relay`
        FUNCTION `??nwkNeighborRemoveAllStranded::?relay`,00H
        EXTERN `??osal_build_uint32::?relay`
        FUNCTION `??osal_build_uint32::?relay`,00H
        EXTERN `??osal_get_timeoutEx::?relay`
        FUNCTION `??osal_get_timeoutEx::?relay`,00H
        EXTERN `??osal_mem_alloc::?relay`
        FUNCTION `??osal_mem_alloc::?relay`,00H
        EXTERN `??osal_mem_free::?relay`
        FUNCTION `??osal_mem_free::?relay`,00H
        EXTERN `??osal_memcmp::?relay`
        FUNCTION `??osal_memcmp::?relay`,00H
        EXTERN `??osal_memcpy::?relay`
        FUNCTION `??osal_memcpy::?relay`,00H
        EXTERN `??osal_memset::?relay`
        FUNCTION `??osal_memset::?relay`,00H
        EXTERN `??osal_msg_allocate::?relay`
        FUNCTION `??osal_msg_allocate::?relay`,00H
        EXTERN `??osal_msg_find::?relay`
        FUNCTION `??osal_msg_find::?relay`,00H
        EXTERN `??osal_msg_send::?relay`
        FUNCTION `??osal_msg_send::?relay`,00H
        EXTERN `??osal_nv_read::?relay`
        FUNCTION `??osal_nv_read::?relay`,00H
        EXTERN `??osal_nv_write::?relay`
        FUNCTION `??osal_nv_write::?relay`,00H
        EXTERN `??osal_set_event::?relay`
        FUNCTION `??osal_set_event::?relay`,00H
        EXTERN `??osal_start_timerEx::?relay`
        FUNCTION `??osal_start_timerEx::?relay`,00H
        EXTERN `??osal_stop_timerEx::?relay`
        FUNCTION `??osal_stop_timerEx::?relay`,00H
        EXTERN `??sAddrExtCmp::?relay`
        FUNCTION `??sAddrExtCmp::?relay`,00H
        EXTERN `??sAddrExtCpy::?relay`
        FUNCTION `??sAddrExtCpy::?relay`,00H
        EXTERN AIB_MaxBindingTime
        EXTERN AIB_apsUseExtendedPANID
        EXTERN APSME_BindRequest
        FUNCTION APSME_BindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_GetRequest
        FUNCTION APSME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_IsDistributedSecurity
        FUNCTION APSME_IsDistributedSecurity,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_LookupNwkAddr
        FUNCTION APSME_LookupNwkAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APSME_UnBindRequest
        FUNCTION APSME_UnBindRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_ReflectorInit
        FUNCTION APS_ReflectorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN APS_SetEndDeviceBindTimeout
        FUNCTION APS_SetEndDeviceBindTimeout,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupExt
        FUNCTION AddrMgrEntryLookupExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryLookupNwk
        FUNCTION AddrMgrEntryLookupNwk,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrEntryUpdate
        FUNCTION AddrMgrEntryUpdate,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrSet
        FUNCTION AddrMgrExtAddrSet,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AddrMgrExtAddrValid
        FUNCTION AddrMgrExtAddrValid,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocCount
        FUNCTION AssocCount,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocFindDevice
        FUNCTION AssocFindDevice,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocGetWithExt
        FUNCTION AssocGetWithExt,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocIsChild
        FUNCTION AssocIsChild,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN AssocRemove
        FUNCTION AssocRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN GP_CheckAnnouncedDeviceGCB
        EXTERN GP_aliasConflictAnnce
        EXTERN NLME_CheckNewAddrSet
        FUNCTION NLME_CheckNewAddrSet,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_CoordinatorInit
        FUNCTION NLME_CoordinatorInit,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_DirectJoinRequest
        FUNCTION NLME_DirectJoinRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordExtAddr
        FUNCTION NLME_GetCoordExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetCoordShortAddr
        FUNCTION NLME_GetCoordShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetExtAddr
        FUNCTION NLME_GetExtAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetRequest
        FUNCTION NLME_GetRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_GetShortAddr
        FUNCTION NLME_GetShortAddr,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_IsAddressBroadcast
        FUNCTION NLME_IsAddressBroadcast,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_LeaveReq
        FUNCTION NLME_LeaveReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NetworkFormationRequest
        FUNCTION NLME_NetworkFormationRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscReq2
        FUNCTION NLME_NwkDiscReq2,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_NwkDiscTerm
        FUNCTION NLME_NwkDiscTerm,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_PermitJoiningRequest
        FUNCTION NLME_PermitJoiningRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN NLME_StartRouterRequest
        FUNCTION NLME_StartRouterRequest,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN RTG_RemoveRtgEntry
        FUNCTION RTG_RemoveRtgEntry,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDAppNwkAddr
        EXTERN ZDAppTaskID
        EXTERN ZDApp_ChangeState
        FUNCTION ZDApp_ChangeState,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDApp_NVUpdate
        FUNCTION ZDApp_NVUpdate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDO_Config_Node_Descriptor
        EXTERN ZDO_Config_Power_Descriptor
        EXTERN ZDO_UseExtendedPANID
        EXTERN ZDP_BindUnbindReq
        FUNCTION ZDP_BindUnbindReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_EPRsp
        FUNCTION ZDP_EPRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_GenericRsp
        FUNCTION ZDP_GenericRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtBindRsp
        FUNCTION ZDP_MgmtBindRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtLqiRsp
        FUNCTION ZDP_MgmtLqiRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 63, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_MgmtRtgRsp
        FUNCTION ZDP_MgmtRtgRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NodeDescMsg
        FUNCTION ZDP_NodeDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_NwkAddrReq
        FUNCTION ZDP_NwkAddrReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ParentAnnce
        FUNCTION ZDP_ParentAnnce,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_PowerDescMsg
        FUNCTION ZDP_PowerDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SendData
        FUNCTION ZDP_SendData,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_ServerDiscRsp
        FUNCTION ZDP_ServerDiscRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_SimpleDescMsg
        FUNCTION ZDP_SimpleDescMsg,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDP_TransID
        EXTERN ZDP_UserDescRsp
        FUNCTION ZDP_UserDescRsp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDSecMgrPermitJoining
        FUNCTION ZDSecMgrPermitJoining,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZDSecMgrPermitJoiningTimeout
        FUNCTION ZDSecMgrPermitJoiningTimeout,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN ZMacSetReq
        FUNCTION ZMacSetReq,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN _NIB
        EXTERN afEndPoints
        FUNCTION afEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afFindSimpleDesc
        FUNCTION afFindSimpleDesc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN afNumEndPoints
        FUNCTION afNumEndPoints,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN bdbAttributes
        EXTERN bdb_setFN
        FUNCTION bdb_setFN,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN epList
        EXTERN gp_TaskID
        EXTERN nwkNeighborRemove
        FUNCTION nwkNeighborRemove,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN nwkNeighborRemoveAllStranded
        FUNCTION nwkNeighborRemoveAllStranded,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_build_uint32
        FUNCTION osal_build_uint32,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_get_timeoutEx
        FUNCTION osal_get_timeoutEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_alloc
        FUNCTION osal_mem_alloc,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_mem_free
        FUNCTION osal_mem_free,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcmp
        FUNCTION osal_memcmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 54, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memcpy
        FUNCTION osal_memcpy,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_memset
        FUNCTION osal_memset,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_allocate
        FUNCTION osal_msg_allocate,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_find
        FUNCTION osal_msg_find,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_msg_send
        FUNCTION osal_msg_send,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_read
        FUNCTION osal_nv_read,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_nv_write
        FUNCTION osal_nv_write,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_set_event
        FUNCTION osal_set_event,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_start_timerEx
        FUNCTION osal_start_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN osal_stop_timerEx
        FUNCTION osal_stop_timerEx,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN pNwkNotMyChildListDelete
        EXTERN runtimeChannel
        EXTERN sAddrExtCmp
        FUNCTION sAddrExtCmp,0202H
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN sAddrExtCpy
        FUNCTION sAddrExtCpy,0202H
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        EXTERN zdappMgmtNwkDiscReqInProgress
        EXTERN zdappMgmtNwkDiscRspAddr
        EXTERN zdappMgmtNwkDiscRspTransSeq
        EXTERN zdappMgmtNwkDiscStartIndex
        EXTERN zgAllowRemoteTCPolicyChange
        EXTERN zgApsUseExtendedPANID
        EXTERN zgChildAgingEnable
        EXTERN zgConfigPANID
        EXTERN zgDeviceLogicalType

// D:\fuzzing-coordinator-response-collection\Components\stack\zdo\ZDObject.c
//    1 /**************************************************************************************************
//    2   Filename:       ZDObject.c
//    3   Revised:        $Date: 2015-10-01 15:01:50 -0700 (Thu, 01 Oct 2015) $
//    4   Revision:       $Revision: 44513 $
//    5 
//    6   Description:    This is the Zigbee Device Object.
//    7 
//    8 
//    9   Copyright 2004-2015 Texas Instruments Incorporated. All rights reserved.
//   10 
//   11   IMPORTANT: Your use of this Software is limited to those specific rights
//   12   granted under the terms of a software license agreement between the user
//   13   who downloaded the software, his/her employer (which must be your employer)
//   14   and Texas Instruments Incorporated (the "License"). You may not use this
//   15   Software unless you agree to abide by the terms of the License. The License
//   16   limits your use, and you acknowledge, that the Software may not be modified,
//   17   copied or distributed unless embedded on a Texas Instruments microcontroller
//   18   or used solely and exclusively in conjunction with a Texas Instruments radio
//   19   frequency transceiver, which is integrated into your product. Other than for
//   20   the foregoing purpose, you may not use, reproduce, copy, prepare derivative
//   21   works of, modify, distribute, perform, display or sell this Software and/or
//   22   its documentation for any purpose.
//   23 
//   24   YOU FURTHER ACKNOWLEDGE AND AGREE THAT THE SOFTWARE AND DOCUMENTATION ARE
//   25   PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED,
//   26   INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF MERCHANTABILITY, TITLE,
//   27   NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE. IN NO EVENT SHALL
//   28   TEXAS INSTRUMENTS OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER CONTRACT,
//   29   NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR OTHER
//   30   LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
//   31   INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE
//   32   OR CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT
//   33   OF SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
//   34   (INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
//   35 
//   36   Should you have any questions regarding your right to use this Software,
//   37   contact Texas Instruments Incorporated at www.TI.com.
//   38 **************************************************************************************************/
//   39 
//   40 /*********************************************************************
//   41  * INCLUDES
//   42  */
//   43 #include "ZComDef.h"
//   44 #include "OSAL.h"
//   45 #include "OSAL_Nv.h"
//   46 #include "rtg.h"
//   47 #include "NLMEDE.h"
//   48 #include "nwk_globals.h"
//   49 #include "APS.h"
//   50 #include "APSMEDE.h"
//   51 #include "AssocList.h"
//   52 #include "BindingTable.h"
//   53 #include "AddrMgr.h"
//   54 #include "AF.h"
//   55 #include "ZDObject.h"
//   56 #include "ZDProfile.h"
//   57 #include "ZDConfig.h"
//   58 #include "ZDSecMgr.h"
//   59 #include "ZDApp.h"
//   60 #include "nwk_util.h"   // NLME_IsAddressBroadcast()
//   61 #include "ZGlobals.h"
//   62 #if defined MT_ZDO_CB_FUNC
//   63 #include "MT.h"
//   64 #endif
//   65 
//   66 #include "bdb.h"
//   67 
//   68 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
//   69 #include "gp_common.h"
//   70 #endif
//   71  
//   72 #if defined( LCD_SUPPORTED )
//   73   #include "OnBoard.h"
//   74 #endif
//   75 
//   76 /* HAL */
//   77 #include "hal_lcd.h"
//   78 
//   79 /*********************************************************************
//   80  * MACROS
//   81  */
//   82 
//   83 /*********************************************************************
//   84  * CONSTANTS
//   85  */
//   86 // NLME Stub Implementations
//   87 #define ZDO_ProcessMgmtPermitJoinTimeout NLME_PermitJoiningTimeout
//   88 
//   89 /*********************************************************************
//   90  * TYPEDEFS
//   91  */
//   92 #if defined ( REFLECTOR )
//   93 typedef struct
//   94 {
//   95   byte SrcTransSeq;
//   96   zAddrType_t SrcAddr;
//   97   uint16 LocalCoordinator;
//   98   byte epIntf;
//   99   uint16 ProfileID;
//  100   byte numInClusters;
//  101   uint16 *inClusters;
//  102   byte numOutClusters;
//  103   uint16 *outClusters;
//  104   byte SecurityUse;
//  105   byte status;
//  106 } ZDO_EDBind_t;
//  107 #endif // defined ( REFLECTOR )
//  108 
//  109 enum
//  110 {
//  111   ZDMATCH_INIT,           // Initialized
//  112   ZDMATCH_WAIT_REQ,       // Received first request, waiting for second
//  113   ZDMATCH_SENDING_BINDS   // Received both requests, sending unbind/binds
//  114 };
//  115 
//  116 enum
//  117 {
//  118   ZDMATCH_SENDING_NOT,
//  119   ZDMATCH_SENDING_UNBIND,
//  120   ZDMATCH_SENDING_BIND
//  121 };
//  122 
//  123 /*********************************************************************
//  124  * GLOBAL VARIABLES
//  125  */
//  126 
//  127 /*********************************************************************
//  128  * EXTERNAL VARIABLES
//  129  */
//  130 
//  131 extern bool  requestNewTrustCenterLinkKey;   
//  132    
//  133 /*********************************************************************
//  134  * EXTERNAL FUNCTIONS
//  135  */
//  136 
//  137 /*********************************************************************
//  138  * LOCAL VARIABLES
//  139  */

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA8
//  140 static uint16 ZDOBuildBuf[26];  // temp area to build data without allocation
ZDOBuildBuf:
        DS 52
        REQUIRE __INIT_XDATA_Z
//  141 
//  142 #if defined ( REFLECTOR )

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  143 static ZDO_EDBind_t *ZDO_EDBind;     // Null when not used
ZDO_EDBind:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  144 #endif
//  145 
//  146 #if defined ( MANAGED_SCAN )
//  147   uint32 managedScanNextChannel = 0;
//  148   uint32 managedScanChannelMask = 0;
//  149   uint8  managedScanTimesPerChannel = 0;
//  150 #endif
//  151 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA16
//  152 ZDMatchEndDeviceBind_t *matchED = (ZDMatchEndDeviceBind_t *)NULL;
matchED:
        DS 2
        REQUIRE __INIT_XDATA_Z
//  153 

        RSEG XDATA_Z:XDATA:NOROOT(0)
        DATA32
//  154 uint32 apsChannelMask = 0;
apsChannelMask:
        DS 4
        REQUIRE __INIT_XDATA_Z
//  155 

        RSEG XDATA_I:XDATA:NOROOT(0)
//  156 int16 zdpExternalStateTaskID = -1;
zdpExternalStateTaskID:
        DATA16
        DS 2
        REQUIRE `?<Initializer for zdpExternalStateTaskID>`
        REQUIRE __INIT_XDATA_I
//  157 
//  158 /*********************************************************************
//  159  * LOCAL FUNCTIONS
//  160  */
//  161 static void ZDODeviceSetup( void );
//  162 #if defined ( MANAGED_SCAN )
//  163   static void ZDOManagedScan_Next( void );
//  164 #endif
//  165 #if defined ( REFLECTOR )
//  166   static void ZDO_RemoveEndDeviceBind( void );
//  167   static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse );
//  168 #endif
//  169 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  170   static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
//  171                                        byte numList2, uint16 *list2, uint16 *pMatches );
//  172   static void ZDO_RemoveMatchMemory( void );
//  173   static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq );
//  174   static void ZDO_EndDeviceBindMatchTimeoutCB( void );
//  175 #endif
//  176 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList );
//  177 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId);
//  178 
//  179 /*********************************************************************
//  180  * @fn          ZDO_Init
//  181  *
//  182  * @brief       ZDObject and ZDProfile initialization.
//  183  *
//  184  * @param       none
//  185  *
//  186  * @return      none
//  187  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  188 void ZDO_Init( void )
ZDO_Init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ZDO_Init
        CODE
//  189 {
        FUNCALL ZDO_Init, sAddrExtCpy
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, NLME_CoordinatorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_Init, APS_ReflectorInit
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
//  190   // Initialize ZD items
//  191   #if defined ( REFLECTOR )
//  192   ZDO_EDBind = NULL;
        MOV       DPTR,#ZDO_EDBind
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  193   #endif
//  194 
//  195   // Initialize default ZDO_UseExtendedPANID to the APS one.
//  196   osal_cpyExtAddr( ZDO_UseExtendedPANID, AIB_apsUseExtendedPANID );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,#AIB_apsUseExtendedPANID & 0xff
        MOV       R5,#(AIB_apsUseExtendedPANID >> 8) & 0xff
        MOV       R2,#ZDO_UseExtendedPANID & 0xff
        MOV       R3,#(ZDO_UseExtendedPANID >> 8) & 0xff
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
//  197 
//  198   // Setup the device - type of device to create.
//  199   ZDODeviceSetup();
        ; Setup parameters for call to function NLME_CoordinatorInit
        LCALL     `??NLME_CoordinatorInit::?relay`; Banked call to: NLME_CoordinatorInit
        ; Setup parameters for call to function APS_ReflectorInit
        LCALL     `??APS_ReflectorInit::?relay`; Banked call to: APS_ReflectorInit
//  200 }
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock0
//  201 
//  202 #if defined ( MANAGED_SCAN )
//  203 /*********************************************************************
//  204  * @fn      ZDOManagedScan_Next()
//  205  *
//  206  * @brief   Setup a managed scan.
//  207  *
//  208  * @param   none
//  209  *
//  210  * @return  none
//  211  */
//  212 static void ZDOManagedScan_Next( void )
//  213 {
//  214   // Is it the first time
//  215   if ( managedScanNextChannel == 0 && managedScanTimesPerChannel == 0 )
//  216   {
//  217     // Setup the defaults
//  218     managedScanNextChannel  = 1;
//  219 
//  220     while( managedScanNextChannel && (runtimeChannel & managedScanNextChannel) == 0 )
//  221       managedScanNextChannel <<= 1;
//  222 
//  223     managedScanChannelMask = managedScanNextChannel;
//  224     managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  225   }
//  226   else
//  227   {
//  228     // Do we need to go to the next channel
//  229     if ( managedScanTimesPerChannel == 0 )
//  230     {
//  231       // Find next active channel
//  232       managedScanChannelMask  = managedScanNextChannel;
//  233       managedScanTimesPerChannel = MANAGEDSCAN_TIMES_PRE_CHANNEL;
//  234     }
//  235     else
//  236     {
//  237       managedScanTimesPerChannel--;
//  238 
//  239       if ( managedScanTimesPerChannel == 0 )
//  240       {
//  241         managedScanNextChannel  <<= 1;
//  242         while( managedScanNextChannel && (runtimeChannel & managedScanNextChannel) == 0 )
//  243           managedScanNextChannel <<= 1;
//  244 
//  245         if ( managedScanNextChannel == 0 )
//  246           zdoDiscCounter  = NUM_DISC_ATTEMPTS + 1; // Stop
//  247       }
//  248     }
//  249   }
//  250 }
//  251 #endif // MANAGED_SCAN
//  252 
//  253 /*********************************************************************
//  254  * @fn      ZDODeviceSetup()
//  255  *
//  256  * @brief   Call set functions depending on the type of device compiled.
//  257  *
//  258  * @param   none
//  259  *
//  260  * @return  none
//  261  */
//  262 static void ZDODeviceSetup( void )
//  263 {
//  264   if ( ZG_BUILD_COORDINATOR_TYPE )
//  265   {
//  266     NLME_CoordinatorInit();
//  267   }
//  268 
//  269 #if defined ( REFLECTOR )
//  270   APS_ReflectorInit();
//  271 #endif
//  272 
//  273   if ( ZG_BUILD_JOINING_TYPE )
//  274   {
//  275     NLME_DeviceJoiningInit();
//  276   }
//  277 }
//  278 
//  279 
//  280 
//  281 
//  282 /*********************************************************************
//  283  * @fn          ZDO_StartDevice
//  284  *
//  285  * @brief       This function starts a device in a network. Added distributed network for router devices
//  286  *
//  287  * @param       logicalType     - Device type to start
//  288  *              startMode       - indicates mode of device startup
//  289  *              beaconOrder     - indicates time betwen beacons
//  290  *              superframeOrder - indicates length of active superframe
//  291  *              distributed     - indicates if the network will be formed
//  292  *
//  293  * @return      none
//  294  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  295 void ZDO_StartDevice( byte logicalType, devStartModes_t startMode, byte beaconOrder, byte superframeOrder )
ZDO_StartDevice:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ZDO_StartDevice
        CODE
//  296 {
        FUNCALL ZDO_StartDevice, ZDApp_ChangeState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_NetworkFormationRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, ZDApp_ChangeState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, NLME_StartRouterRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_StartDevice, osal_start_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R2
        MOV       R7,A
        MOV       A,R3
        MOV       R6,A
        MOV       ?V0,R4
//  297   ZStatus_t ret;
//  298 #if defined ( ZIGBEE_FREQ_AGILITY )
//  299   static uint8 discRetries = 0;
//  300 #endif
//  301 #if defined ( ZIGBEE_COMMISSIONING )
//  302   static uint8 scanCnt = 0;
//  303 #endif
//  304 
//  305   ret = ZUnsupportedMode;
//  306 
//  307   if ( ZG_BUILD_COORDINATOR_TYPE && logicalType == NODETYPE_COORDINATOR )
        MOV       A,R1
        JNZ       ??ZDO_StartDevice_0
//  308   {
//  309     if ( startMode == MODE_HARD )
        MOV       A,#0x2
        XRL       A,R7
        JNZ       ??ZDO_StartDevice_1
//  310     {
//  311       ZDApp_ChangeState( DEV_COORD_STARTING );
        ; Setup parameters for call to function ZDApp_ChangeState
        MOV       R1,#0x8
        LCALL     `??ZDApp_ChangeState::?relay`; Banked call to: ZDApp_ChangeState
//  312       ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, runtimeChannel,
//  313                                           zgDefaultStartingScanDuration, beaconOrder,
//  314                                           superframeOrder, false, false, 0 );
        ; Setup parameters for call to function NLME_NetworkFormationRequest
        CLR       A
        MOV       ?V2,A
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,?V0
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       A,R6
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       DPTR,#runtimeChannel
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       DPTR,#bdbAttributes + 13
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       R4,#zgApsUseExtendedPANID & 0xff
        MOV       R5,#(zgApsUseExtendedPANID >> 8) & 0xff
        MOV       DPTR,#zgConfigPANID
        LCALL     ??Subroutine224_0 & 0xFFFF
//  315     }
??CrossCallReturnLabel_464:
        LCALL     `??NLME_NetworkFormationRequest::?relay`; Banked call to: NLME_NetworkFormationRequest
        MOV       A,#0xa
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        SJMP      ??ZDO_StartDevice_2
//  316     else if ( startMode == MODE_RESUME )
??ZDO_StartDevice_1:
        MOV       A,#0x1
        XRL       A,R7
        JNZ       ??ZDO_StartDevice_0
//  317     {
//  318       // Just start the coordinator
//  319       ZDApp_ChangeState( DEV_COORD_STARTING );
        ; Setup parameters for call to function ZDApp_ChangeState
        MOV       R1,#0x8
        LCALL     `??ZDApp_ChangeState::?relay`; Banked call to: ZDApp_ChangeState
//  320       ret = NLME_StartRouterRequest( beaconOrder, beaconOrder, false );
        ; Setup parameters for call to function NLME_StartRouterRequest
        MOV       R3,#0x0
        MOV       A,R6
        MOV       R2,A
        MOV       R1,A
        LCALL     `??NLME_StartRouterRequest::?relay`; Banked call to: NLME_StartRouterRequest
??ZDO_StartDevice_2:
        MOV       A,R1
//  321     }
//  322     else
//  323     {
//  324 #if defined( LCD_SUPPORTED )
//  325       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  326 #endif
//  327     }
//  328   }
//  329 
//  330   if ( ZG_BUILD_JOINING_TYPE && (logicalType == NODETYPE_ROUTER || logicalType == NODETYPE_DEVICE) )
//  331   {
//  332     if ( (startMode == MODE_JOIN) || (startMode == MODE_REJOIN) )
//  333     {
//  334       if(APSME_IsDistributedSecurity() && (startMode != MODE_REJOIN))
//  335       {
//  336               ret = NLME_NetworkFormationRequest( zgConfigPANID, zgApsUseExtendedPANID, runtimeChannel,
//  337                                           zgDefaultStartingScanDuration, beaconOrder,
//  338                                           superframeOrder, false, true, osal_rand() );
//  339         
//  340       }
//  341       else
//  342       {
//  343         ZDApp_ChangeState( DEV_NWK_DISC );
//  344 
//  345       #if defined( MANAGED_SCAN )
//  346         ZDOManagedScan_Next();
//  347         ret = NLME_NetworkDiscoveryRequest( managedScanChannelMask, BEACON_ORDER_15_MSEC );
//  348       #else
//  349         ret = NLME_NetworkDiscoveryRequest( runtimeChannel, zgDefaultStartingScanDuration );
//  350         #if defined ( ZIGBEE_FREQ_AGILITY )
//  351         if ( !( ZDO_Config_Node_Descriptor.CapabilityFlags & CAPINFO_RCVR_ON_IDLE ) &&
//  352             ( ret == ZSuccess ) && ( ++discRetries == 4 ) )
//  353         {
//  354           // For devices with RxOnWhenIdle equals to FALSE, any network channel
//  355           // change will not be recieved. On these devices or routers that have
//  356           // lost the network, an active scan shall be conducted on the Default
//  357           // Channel list using the extended PANID to find the network. If the
//  358           // extended PANID isn't found using the Default Channel list, an scan
//  359           // should be completed using all channels.
//  360           runtimeChannel = MAX_CHANNELS_24GHZ;
//  361         }
//  362         #endif // ZIGBEE_FREQ_AGILITY
//  363         #if defined ( ZIGBEE_COMMISSIONING )
//  364         if (startMode == MODE_REJOIN && scanCnt++ >= 5 )
//  365         {
//  366           // When ApsUseExtendedPanID is commissioned to a non zero value via
//  367           // application specific means, the device shall conduct an active scan
//  368           // on the Default Channel list and join the PAN with the same
//  369           // ExtendedPanID. If the PAN is not found, an scan should be completed
//  370           // on all channels.
//  371           // When devices rejoin the network and the PAN is not found from
//  372           runtimeChannel = MAX_CHANNELS_24GHZ;
//  373         }
//  374         #endif // ZIGBEE_COMMISSIONING
//  375       #endif
//  376       }
//  377     }
//  378     else if ( startMode == MODE_RESUME )
//  379     {
//  380       if ( logicalType == NODETYPE_ROUTER )
//  381       {
//  382         uint16 panID;
//  383         
//  384         ZDApp_ChangeState( DEV_NWK_ORPHAN );
//  385         
//  386         // Stop the rejoin timeout
//  387         osal_stop_timerEx( NWK_TaskID, NWK_REJOIN_TIMEOUT_EVT );
//  388         ZMacGetReq( ZMacPanId, (uint8 *)&( panID ) );
//  389         
//  390         _NIB.nwkPanId = panID;
//  391         NLME_JoinConfirm(  _NIB.nwkPanId, ZSuccess );
//  392 
//  393         ret = ZSuccess;
//  394       }
//  395       else
//  396       {
//  397         ZDApp_ChangeState( DEV_NWK_ORPHAN );
//  398         //set timer for scan and rejoin
//  399         osal_start_timerEx( ZDAppTaskID, ZDO_REJOIN_BACKOFF, zgDefaultRejoinScan );
//  400         ret = NLME_OrphanJoinRequest( runtimeChannel,
//  401                                       zgDefaultStartingScanDuration );
//  402       }
//  403     }
//  404     else
//  405     {
//  406 #if defined( LCD_SUPPORTED )
//  407       HalLcdWriteScreen( "StartDevice ERR", "MODE unknown" );
//  408 #endif
//  409     }
//  410   }
//  411 
//  412   if ( ret != ZSuccess )
        JZ        ??ZDO_StartDevice_3
//  413   {
//  414     osal_start_timerEx(ZDAppTaskID, ZDO_NETWORK_INIT, NWK_RETRY_DELAY );
??ZDO_StartDevice_0:
        ; Setup parameters for call to function osal_start_timerEx
        MOV       DPTR,#__Constant_3e8
        LCALL     ?PUSH_XSTACK8_X_FOUR
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       R2,#0x1
        MOV       R3,#0x0
        MOV       DPTR,#ZDAppTaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_start_timerEx::?relay`; Banked call to: osal_start_timerEx
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
//  415   }
//  416 }
??ZDO_StartDevice_3:
        SJMP      ??Subroutine197_0
          CFI EndBlock cfiBlock1

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine1:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 18)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock2
        REQUIRE ??Subroutine197_0
        ; // Fall through to label ??Subroutine197_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine197_0:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x4
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock3
//  417 
//  418 /**************************************************************************************************
//  419  * @fn          zdoSendStateChangeMsg
//  420  *
//  421  * @brief       Helper function for ZDO_UpdateNwkStatus.
//  422  *
//  423  * input parameters
//  424  *
//  425  * @param       taskId - The OSAL task identifier to which to send the ZDO_STATE_CHANGE_EVT.
//  426  * @param       state - The current device state.
//  427  *
//  428  * output parameters
//  429  *
//  430  * None.
//  431  *
//  432  * @return      None.
//  433  **************************************************************************************************
//  434  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  435 static void zdoSendStateChangeMsg(uint8 state, uint8 taskId)
zdoSendStateChangeMsg:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function zdoSendStateChangeMsg
        CODE
//  436 {
        FUNCALL zdoSendStateChangeMsg, osal_msg_find
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_set_event
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL zdoSendStateChangeMsg, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
        MOV       A,R2
        MOV       R6,A
//  437   osal_event_hdr_t *pMsg = (osal_event_hdr_t *)osal_msg_find(taskId, ZDO_STATE_CHANGE);
        ; Setup parameters for call to function osal_msg_find
        MOV       R2,#-0x2f
        MOV       R1,A
        LCALL     `??osal_msg_find::?relay`; Banked call to: osal_msg_find
        MOV       DPL,R2
        MOV       DPH,R3
//  438 
//  439   if (NULL == pMsg)
        MOV       A,DPL
        ORL       A,DPH
        JNZ       ??zdoSendStateChangeMsg_0
//  440   {
//  441     if (NULL == (pMsg = (osal_event_hdr_t *)osal_msg_allocate(sizeof(osal_event_hdr_t))))
        ; Setup parameters for call to function osal_msg_allocate
        MOV       R2,#0x2
        MOV       R3,#0x0
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       A,R2
        ORL       A,R3
        JNZ       ??zdoSendStateChangeMsg_1
//  442     {
//  443       // Upon failure to notify any EndPoint of the state change, re-set the ZDO event to
//  444       // try again later when more Heap may be available.
//  445       osal_set_event(ZDAppTaskID, ZDO_STATE_CHANGE_EVT);
        ; Setup parameters for call to function osal_set_event
        MOV       R2,#0x10
        MOV       R3,#0x0
        MOV       DPTR,#ZDAppTaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_set_event::?relay`; Banked call to: osal_set_event
        SJMP      ??zdoSendStateChangeMsg_2
//  446     }
//  447     else
//  448     {
//  449       pMsg->event = ZDO_STATE_CHANGE;
??zdoSendStateChangeMsg_1:
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x2f
        MOVX      @DPTR,A
//  450       pMsg->status = state;
        MOV       A,R7
        INC       DPTR
        MOVX      @DPTR,A
//  451 
//  452       (void)osal_msg_send(taskId, (uint8 *)pMsg);
        ; Setup parameters for call to function osal_msg_send
        MOV       A,R6
        MOV       R1,A
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
        SJMP      ??zdoSendStateChangeMsg_2
//  453     }
//  454   }
//  455   else
//  456   {
//  457     // Modify in place the status of an existing ZDO_STATE_CHANGE message to the EndPoint.
//  458     pMsg->status = state;
??zdoSendStateChangeMsg_0:
        MOV       A,R7
        INC       DPTR
        MOVX      @DPTR,A
//  459   }
//  460 }
??zdoSendStateChangeMsg_2:
        LJMP      ??Subroutine203_0 & 0xFFFF
          CFI EndBlock cfiBlock4
//  461 
//  462 /**************************************************************************************************
//  463  * @fn          ZDO_UpdateNwkStatus
//  464  *
//  465  * @brief       This function sends a ZDO_STATE_CHANGE message to the task of every EndPoint
//  466  *              registered with AF (except, of course, the ZDO_EP). Even if a single task has more
//  467  *              than one registered EndPoint, it will only receive one notification per state
//  468  *              change. Although the device may go through a sequence of state changes, the
//  469  *              Application task may only receive notification of the final, steady-state state
//  470  *              because it has the lowest priority and never even runs to receive the intermediate
//  471  *              state change notifications.
//  472  *
//  473  * input parameters
//  474  *
//  475  * @param       state - The current device state.
//  476  *
//  477  * output parameters
//  478  *
//  479  * None.
//  480  *
//  481  * @return      None.
//  482  **************************************************************************************************
//  483  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  484 void ZDO_UpdateNwkStatus(devStates_t state)
ZDO_UpdateNwkStatus:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
        CODE
//  485 {
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, zdoSendStateChangeMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateNwkStatus, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
        MOV       ?V0,R1
//  486   epList_t *pItem = epList;
        MOV       DPTR,#epList
        SJMP      ??ZDO_UpdateNwkStatus_0
//  487 
//  488 #if defined MT_ZDO_CB_FUNC
//  489   if ( zdpExternalStateTaskID == -1 )
//  490   {
//  491     zdpExternalStateTaskID = MT_TaskID;
//  492   }
//  493 #endif
//  494 
//  495   while (pItem != NULL)
//  496   {
//  497     if (pItem->epDesc->endPoint != ZDO_EP)
??ZDO_UpdateNwkStatus_1:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_326:
        MOVX      A,@DPTR
        JZ        ??ZDO_UpdateNwkStatus_2
//  498     {
//  499       zdoSendStateChangeMsg(state, *(pItem->epDesc->task_id));
        ; Setup parameters for call to function zdoSendStateChangeMsg
        LCALL     ?Subroutine79 & 0xFFFF
//  500     }
??CrossCallReturnLabel_374:
        MOV       R2,A
        MOV       R1,?V0
        LCALL     `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  501 
//  502     pItem = pItem->nextDesc;
??ZDO_UpdateNwkStatus_2:
        MOV       DPL,R6
        MOV       DPH,R7
//  503   }
??ZDO_UpdateNwkStatus_0:
        LCALL     ??Subroutine210_0 & 0xFFFF
??CrossCallReturnLabel_367:
        ORL       A,R7
        JNZ       ??ZDO_UpdateNwkStatus_1
//  504 
//  505   if ( zdpExternalStateTaskID != -1 )
        MOV       DPTR,#zdpExternalStateTaskID
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDO_UpdateNwkStatus_3
        INC       DPTR
        MOVX      A,@DPTR
        CPL       A
??ZDO_UpdateNwkStatus_3:
        JZ        ??ZDO_UpdateNwkStatus_4
//  506   {
//  507     zdoSendStateChangeMsg( state, zdpExternalStateTaskID );
        ; Setup parameters for call to function zdoSendStateChangeMsg
        MOV       DPTR,#zdpExternalStateTaskID
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       R1,?V0
        LCALL     `??zdoSendStateChangeMsg::?relay`; Banked call to: zdoSendStateChangeMsg
//  508   }
//  509 
//  510   ZDAppNwkAddr.addr.shortAddr = NLME_GetShortAddr();
??ZDO_UpdateNwkStatus_4:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?Subroutine40 & 0xFFFF
//  511   (void)NLME_GetExtAddr();  // Load the saveExtAddr pointer.
??CrossCallReturnLabel_356:
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
//  512 }
          CFI EndBlock cfiBlock5
        REQUIRE ?Subroutine3
        ; // Fall through to label ?Subroutine3

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine3:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock6

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine85:
          CFI Block cfiCond7 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_326
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond8 Using cfiCommon0
          CFI (cfiCond8) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond8) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond8) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond8) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond8) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond8) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond8) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond8) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond8) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond8) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond8) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond8) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond8) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond8) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond8) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond8) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond8) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond8) CFA_SP SP+-2
          CFI (cfiCond8) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond7
          CFI EndBlock cfiCond8
          CFI EndBlock cfiPicker9
        REQUIRE ??Subroutine198_0
        ; // Fall through to label ??Subroutine198_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine198_0:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_325
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function ZDO_UpdateNwkStatus
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond11) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond11) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond11) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond11) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond11) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond11) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond11) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond11) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond11) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond11) CFA_SP SP+-2
          CFI (cfiCond11) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond12) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond12) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond12) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond12) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond12) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond12) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond12) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond12) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond12) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond12) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond12) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond12) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond12) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond12) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond12) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond12) CFA_SP SP+-2
          CFI (cfiCond12) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker13 Using cfiCommon1
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
        MOVX      A,@DPTR
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiPicker13
        REQUIRE ??Subroutine199_0
        ; // Fall through to label ??Subroutine199_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine199_0:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_324
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond15) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond15) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond15) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond15) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond15) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond15) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond15) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond15) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond15) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond15) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond15) CFA_SP SP+-2
          CFI (cfiCond15) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ZDO_UpdateNwkStatus
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond16) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond16) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond16) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond16) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond16) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond16) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond16) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond16) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond16) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond16) CFA_SP SP+-2
          CFI (cfiCond16) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond17 Using cfiCommon0
          CFI (cfiCond17) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond17) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond17) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond17) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond17) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond17) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond17) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond17) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond17) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond17) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond17) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond17) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond17) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond17) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond17) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond17) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond17) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond17) CFA_SP SP+-2
          CFI (cfiCond17) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker18 Using cfiCommon1
          CFI (cfiPicker18) NoFunction
          CFI (cfiPicker18) Picker
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiCond17
          CFI EndBlock cfiPicker18
//  513 
//  514 #if defined ( REFLECTOR )
//  515 /*********************************************************************
//  516  * @fn          ZDO_RemoveEndDeviceBind
//  517  *
//  518  * @brief       Remove the end device bind
//  519  *
//  520  * @param  none
//  521  *
//  522  * @return      none
//  523  */
//  524 static void ZDO_RemoveEndDeviceBind( void )
//  525 {
//  526   if ( ZDO_EDBind != NULL )
//  527   {
//  528     // Free the RAM
//  529     if ( ZDO_EDBind->inClusters != NULL )
//  530     {
//  531       osal_mem_free( ZDO_EDBind->inClusters );
//  532     }
//  533     if ( ZDO_EDBind->outClusters != NULL )
//  534     {
//  535       osal_mem_free( ZDO_EDBind->outClusters );
//  536     }
//  537     osal_mem_free( ZDO_EDBind );
//  538     ZDO_EDBind = NULL;
//  539   }
//  540 }
//  541 #endif // REFLECTOR
//  542 
//  543 #if defined ( REFLECTOR )
//  544 /*********************************************************************
//  545  * @fn          ZDO_SendEDBindRsp
//  546  *
//  547  * @brief       Send the end device bind response
//  548  *
//  549  * @param  none
//  550  *
//  551  * @return      none
//  552  */
//  553 static void ZDO_SendEDBindRsp( byte TransSeq, zAddrType_t *dstAddr, byte Status, byte secUse )
//  554 {
//  555   ZDP_EndDeviceBindRsp( TransSeq, dstAddr, Status, secUse );
//  556 
//  557 #if defined( LCD_SUPPORTED )
//  558   HalLcdWriteString( "End Device Bind", HAL_LCD_LINE_1 );
//  559   if ( Status == ZDP_SUCCESS )
//  560   {
//  561     HalLcdWriteString( "Success Sent", HAL_LCD_LINE_2 );
//  562   }
//  563   else
//  564   {
//  565     HalLcdWriteString( "Timeout", HAL_LCD_LINE_2 );
//  566   }
//  567 #endif
//  568 
//  569 }
//  570 #endif // REFLECTOR
//  571 
//  572 #if ( ZG_BUILD_COORDINATOR_TYPE )
//  573 /*********************************************************************
//  574  * @fn          ZDO_CompareClusterLists
//  575  *
//  576  * @brief       Compare one list to another list
//  577  *
//  578  * @param       numList1 - number of items in list 1
//  579  * @param       list1 - first list of cluster IDs
//  580  * @param       numList2 - number of items in list 2
//  581  * @param       list2 - second list of cluster IDs
//  582  * @param       pMatches - buffer to put matches
//  583  *
//  584  * @return      number of matches
//  585  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  586 static byte ZDO_CompareClusterLists( byte numList1, uint16 *list1,
ZDO_CompareClusterLists:
          CFI Block cfiBlock19 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
        CODE
//  587                           byte numList2, uint16 *list2, uint16 *pMatches )
//  588 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       ?V0,R1
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V4,R4
//  589   byte x, y;
//  590   uint16 z;
//  591   byte numMatches = 0;
        MOV       R2,#0x0
//  592 
//  593   // Check the first in against the seconds out
//  594   for ( x = 0; x < numList1; x++ )
        MOV       R3,#0x0
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_428:
        MOV       A,#0x12
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_180:
        SJMP      ??ZDO_CompareClusterLists_0
//  595   {
//  596     for ( y = 0; y < numList2; y++ )
//  597     {
//  598       z = list2[y];
??ZDO_CompareClusterLists_1:
        MOV       R0,?V1
        LCALL     ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_293:
        MOV       A,R4
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R5
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
//  599       if ( list1[x] == z )
        MOV       A,R3
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_198:
        MOV       A,?V6
        ADD       A,R0
        MOV       DPL,A
        MOV       A,?V7
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??ZDO_CompareClusterLists_2
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V3
??ZDO_CompareClusterLists_2:
        JNZ       ??ZDO_CompareClusterLists_3
//  600       {
//  601         pMatches[numMatches++] = z;
        MOV       A,R2
        LCALL     ?Subroutine120 & 0xFFFF
//  602       }
//  603     }
??CrossCallReturnLabel_199:
        MOV       A,R6
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R7
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        INC       R2
??ZDO_CompareClusterLists_3:
        INC       ?V1
??ZDO_CompareClusterLists_4:
        MOV       A,?V1
        CLR       C
        SUBB      A,?V4
        JC        ??ZDO_CompareClusterLists_1
        INC       R3
??ZDO_CompareClusterLists_0:
        MOV       A,R3
        CLR       C
        SUBB      A,?V0
        JNC       ??ZDO_CompareClusterLists_5
        MOV       ?V1,#0x0
        SJMP      ??ZDO_CompareClusterLists_4
//  604   }
//  605 
//  606   return ( numMatches );
??ZDO_CompareClusterLists_5:
        MOV       A,R2
        MOV       R1,A
        SJMP      ??Subroutine201_0
//  607 }
          CFI EndBlock cfiBlock19

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine4:
          CFI Block cfiBlock20 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 37)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x15
          CFI EndBlock cfiBlock20
        REQUIRE ??Subroutine200_0
        ; // Fall through to label ??Subroutine200_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine200_0:
          CFI Block cfiBlock21 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 28)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock21
        REQUIRE ??Subroutine201_0
        ; // Fall through to label ??Subroutine201_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine201_0:
          CFI Block cfiBlock22 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x8
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock22
//  608 #endif // ZG_BUILD_COORDINATOR_TYPE
//  609 
//  610 /*********************************************************************
//  611  * Utility functions
//  612  */
//  613 
//  614 /*********************************************************************
//  615  * @fn          ZDO_CompareByteLists
//  616  *
//  617  * @brief       Compares two lists for matches.
//  618  *
//  619  * @param       ACnt  - number of entries in list A
//  620  * @param       AList  - List A
//  621  * @param       BCnt  - number of entries in list B
//  622  * @param       BList  - List B
//  623  *
//  624  * @return      true if a match is found
//  625  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  626 byte ZDO_AnyClusterMatches( byte ACnt, uint16 *AList, byte BCnt, uint16 *BList )
ZDO_AnyClusterMatches:
          CFI Block cfiBlock23 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
        CODE
//  627 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
        MOV       A,R1
        MOV       R6,A
        MOV       ?V2,R4
//  628   byte x, y;
//  629 
//  630   for ( x = 0; x < ACnt; x++ )
        MOV       R7,#0x0
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_433:
        SJMP      ??ZDO_AnyClusterMatches_0
??ZDO_AnyClusterMatches_1:
        INC       R7
??ZDO_AnyClusterMatches_0:
        MOV       A,R7
        CLR       C
        SUBB      A,R6
        JNC       ??ZDO_AnyClusterMatches_2
//  631   {
//  632     for ( y = 0; y < BCnt; y++ )
        MOV       ?V3,#0x0
        SJMP      ??ZDO_AnyClusterMatches_3
??ZDO_AnyClusterMatches_4:
        INC       ?V3
??ZDO_AnyClusterMatches_3:
        MOV       A,?V3
        CLR       C
        SUBB      A,?V2
        JNC       ??ZDO_AnyClusterMatches_1
//  633     {
//  634       if ( AList[x] == BList[y] )
        MOV       A,R7
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_459:
        MOV       A,R2
        ADD       A,R4
        MOV       DPL,A
        MOV       A,R3
        ADDC      A,R5
        LCALL     ?Subroutine93 & 0xFFFF
??CrossCallReturnLabel_623:
        MOV       ?V1,A
        MOV       R4,?V3
        MOV       A,R4
        ADD       A,R4
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        MOV       A,R0
        ADD       A,R4
        MOV       DPL,A
        MOV       A,R1
        ADDC      A,R5
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,?V0
        JNZ       ??ZDO_AnyClusterMatches_5
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V1
??ZDO_AnyClusterMatches_5:
        JNZ       ??ZDO_AnyClusterMatches_4
//  635       {
//  636         return true;
        MOV       R1,#0x1
        SJMP      ??ZDO_AnyClusterMatches_6
//  637       }
//  638     }
//  639   }
//  640 
//  641   return false;
??ZDO_AnyClusterMatches_2:
        MOV       R1,#0x0
??ZDO_AnyClusterMatches_6:
        LJMP      ??Subroutine197_0 & 0xFFFF
//  642 }
          CFI EndBlock cfiBlock23
//  643 
//  644 /*********************************************************************
//  645  * Callback functions from ZDProfile
//  646  */
//  647 
//  648 
//  649 /*********************************************************************
//  650  * @fn          ZDO_ProcessNodeDescRsp
//  651  *
//  652  * @brief       This function processes the Node_Desc_rsp and request
//  653  *              Update the TC Link key if the TC supports it.
//  654  *
//  655  * @param       inMsg - incoming message
//  656  *
//  657  * @return      none
//  658  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  659 void ZDO_ProcessNodeDescRsp ( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescRsp:
          CFI Block cfiBlock24 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescRsp
        CODE
//  660 {
        ; Saved register size: 0
        ; Auto size: 0
//  661 }
        LJMP      ?BRET
          CFI EndBlock cfiBlock24
//  662 
//  663 
//  664 /*********************************************************************
//  665  * @fn          ZDO_ProcessNodeDescReq
//  666  *
//  667  * @brief       This function processes and responds to the
//  668  *              Node_Desc_req message.
//  669  *
//  670  * @param       inMsg - incoming message
//  671  *
//  672  * @return      none
//  673  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  674 void ZDO_ProcessNodeDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessNodeDescReq:
          CFI Block cfiBlock25 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
        CODE
//  675 {
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_NodeDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessNodeDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine52 & 0xFFFF
//  676   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  677   NodeDescriptorFormat_t *desc = NULL;
//  678 
//  679   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_87:
        JNZ       ??ZDO_ProcessNodeDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_ProcessNodeDescReq_0:
        JNZ       ??ZDO_ProcessNodeDescReq_1
//  680   {
//  681     desc = &ZDO_Config_Node_Descriptor;
//  682   }
//  683 
//  684   if ( desc != NULL )
//  685   {
//  686     ZDP_NodeDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_NodeDescMsg
        MOV       ?V0,#ZDO_Config_Node_Descriptor & 0xff
        MOV       ?V1,#(ZDO_Config_Node_Descriptor >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R6
        MOV       R2,A
        LCALL     `??ZDP_NodeDescMsg::?relay`; Banked call to: ZDP_NodeDescMsg
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP      ??ZDO_ProcessNodeDescReq_2
//  687   }
//  688   else
//  689   {
//  690     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  691               ZDP_INVALID_REQTYPE, aoi, Node_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessNodeDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V0,#0x2
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL     ?Subroutine60 & 0xFFFF
//  692   }
??CrossCallReturnLabel_101:
        LCALL     `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  693 }
??ZDO_ProcessNodeDescReq_2:
        SJMP      ??Subroutine203_0
          CFI EndBlock cfiBlock25
//  694 
//  695 /*********************************************************************
//  696  * @fn          ZDO_ProcessPowerDescReq
//  697  *
//  698  * @brief       This function processes and responds to the
//  699  *              Node_Power_req message.
//  700  *
//  701  * @param       inMsg  - incoming request
//  702  *
//  703  * @return      none
//  704  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  705 void ZDO_ProcessPowerDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessPowerDescReq:
          CFI Block cfiBlock26 Using cfiCommon0
          CFI Function ZDO_ProcessPowerDescReq
        CODE
//  706 {
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_PowerDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessPowerDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine52 & 0xFFFF
//  707   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
//  708   NodePowerDescriptorFormat_t *desc = NULL;
//  709 
//  710   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??CrossCallReturnLabel_88:
        JNZ       ??ZDO_ProcessPowerDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R5
??ZDO_ProcessPowerDescReq_0:
        JNZ       ??ZDO_ProcessPowerDescReq_1
//  711   {
//  712     desc = &ZDO_Config_Power_Descriptor;
//  713   }
//  714 
//  715   if ( desc != NULL )
//  716   {
//  717     ZDP_PowerDescMsg( inMsg, aoi, desc );
        ; Setup parameters for call to function ZDP_PowerDescMsg
        MOV       ?V0,#ZDO_Config_Power_Descriptor & 0xff
        MOV       ?V1,#(ZDO_Config_Power_Descriptor >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R6
        MOV       R2,A
        LCALL     `??ZDP_PowerDescMsg::?relay`; Banked call to: ZDP_PowerDescMsg
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
        SJMP      ??ZDO_ProcessPowerDescReq_2
//  718   }
//  719   else
//  720   {
//  721     ZDP_GenericRsp( inMsg->TransSeq, &(inMsg->srcAddr),
//  722               ZDP_INVALID_REQTYPE, aoi, Power_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessPowerDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V0,#0x3
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        LCALL     ?Subroutine60 & 0xFFFF
//  723   }
??CrossCallReturnLabel_102:
        LCALL     `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
//  724 }
??ZDO_ProcessPowerDescReq_2:
        SJMP      ??Subroutine203_0
          CFI EndBlock cfiBlock26

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine60:
          CFI Block cfiCond27 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond28) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond28) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond28) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond28) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond28) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond28) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond28) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond28) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond28) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond28) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond28) CFA_SP SP+-2
          CFI (cfiCond28) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker29 Using cfiCommon1
          CFI (cfiPicker29) NoFunction
          CFI (cfiPicker29) Picker
        MOV       A,R6
        ADD       A,#0xe
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_600:
        MOV       R5,A
        MOV       R4,#-0x80
        LCALL     ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_301:
        MOV       A,R6
        LCALL     ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_351:
        LCALL     ??Subroutine242_0 & 0xFFFF
??CrossCallReturnLabel_598:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiPicker29

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine52:
          CFI Block cfiCond30 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond31 Using cfiCommon0
          CFI (cfiCond31) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond31) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond31) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond31) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond31) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond31) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond31) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond31) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond31) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond31) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond31) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond31) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond31) CFA_SP SP+-2
          CFI (cfiCond31) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker32 Using cfiCommon1
          CFI (cfiPicker32) NoFunction
          CFI (cfiPicker32) Picker
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       A,R6
        LCALL     ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_641:
        ADDC      A,R7
        LCALL     ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_281:
        MOV       R4,A
        CLR       A
        ADDC      A,R1
        MOV       R5,A
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R4
        RET
          CFI EndBlock cfiCond30
          CFI EndBlock cfiCond31
          CFI EndBlock cfiPicker32
//  725 
//  726 /*********************************************************************
//  727  * @fn          ZDO_ProcessSimpleDescReq
//  728  *
//  729  * @brief       This function processes and responds to the
//  730  *              Simple_Desc_req message.
//  731  *
//  732  * @param       inMsg - incoming message (request)
//  733  *
//  734  * @return      none
//  735  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine2:
          CFI Block cfiBlock33 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       A,#0x2
          CFI EndBlock cfiBlock33
        REQUIRE ??Subroutine202_0
        ; // Fall through to label ??Subroutine202_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine202_0:
          CFI Block cfiBlock34 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 17)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock34
        REQUIRE ??Subroutine203_0
        ; // Fall through to label ??Subroutine203_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine203_0:
          CFI Block cfiBlock35 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x2
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock35

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  736 void ZDO_ProcessSimpleDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescReq:
          CFI Block cfiBlock36 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
        CODE
//  737 {
        FUNCALL ZDO_ProcessSimpleDescReq, afFindSimpleDesc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, AssocIsChild
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, ZDP_SimpleDescMsg
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessSimpleDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
//  738   SimpleDescriptionFormat_t *sDesc = NULL;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  739   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        MOV       A,R6
        LCALL     ??Subroutine204_0 & 0xFFFF
??CrossCallReturnLabel_328:
        ADDC      A,R7
        LCALL     ?Subroutine77 & 0xFFFF
??CrossCallReturnLabel_131:
        MOV       R3,A
        MOV       A,R4
        MOV       R2,A
//  740   byte endPoint = inMsg->asdu[2];
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
//  741   byte free = false;
        MOV       ?V1,#0x0
//  742   byte stat = ZDP_SUCCESS;
        MOV       ?V0,#0x0
//  743 
//  744   if ( (endPoint == ZDO_EP) || (endPoint > MAX_ENDPOINTS) )
        JZ        ??ZDO_ProcessSimpleDescReq_0
        MOV       A,#-0x1
        XRL       A,R1
        JNZ       ??ZDO_ProcessSimpleDescReq_1
//  745   {
//  746     stat = ZDP_INVALID_EP;
??ZDO_ProcessSimpleDescReq_0:
        MOV       ?V0,#-0x7e
        SJMP      ??ZDO_ProcessSimpleDescReq_2
//  747   }
//  748   else if ( aoi == ZDAppNwkAddr.addr.shortAddr )
??ZDO_ProcessSimpleDescReq_1:
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R2
        JNZ       ??ZDO_ProcessSimpleDescReq_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R3
??ZDO_ProcessSimpleDescReq_3:
        JNZ       ??ZDO_ProcessSimpleDescReq_4
//  749   {
//  750     free = afFindSimpleDesc( &sDesc, endPoint );
        ; Setup parameters for call to function afFindSimpleDesc
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??afFindSimpleDesc::?relay`; Banked call to: afFindSimpleDesc
        MOV       A,R1
        MOV       R2,A
//  751     if ( sDesc == NULL )
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_398:
        JNZ       ??ZDO_ProcessSimpleDescReq_5
//  752     {
//  753       stat = ZDP_NOT_ACTIVE;
        MOV       ?V0,#-0x7d
??ZDO_ProcessSimpleDescReq_5:
        MOV       ?V1,R2
        SJMP      ??ZDO_ProcessSimpleDescReq_2
//  754     }
//  755   }
//  756   else
//  757   {
//  758     if ( ZSTACK_ROUTER_BUILD )
//  759     {
//  760       //If child found, then no descriptor
//  761       if(AssocIsChild(aoi))
??ZDO_ProcessSimpleDescReq_4:
        ; Setup parameters for call to function AssocIsChild
        LCALL     `??AssocIsChild::?relay`; Banked call to: AssocIsChild
        MOV       A,R1
        JZ        ??ZDO_ProcessSimpleDescReq_6
//  762       {
//  763         stat = ZDP_NO_DESCRIPTOR;
        MOV       ?V0,#-0x77
        SJMP      ??ZDO_ProcessSimpleDescReq_2
//  764       }
//  765       //Otherwise no device found
//  766       else
//  767       {
//  768         stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessSimpleDescReq_6:
        MOV       ?V0,#-0x7f
//  769       }
//  770     }
//  771     else if ( ZSTACK_END_DEVICE_BUILD )
//  772     {
//  773       stat = ZDP_INVALID_REQTYPE;
//  774     }
//  775   }
//  776 
//  777   ZDP_SimpleDescMsg( inMsg, stat, sDesc );
??ZDO_ProcessSimpleDescReq_2:
        ; Setup parameters for call to function ZDP_SimpleDescMsg
        LCALL     ?Subroutine103 & 0xFFFF
??CrossCallReturnLabel_431:
        MOV       R1,?V0
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??ZDP_SimpleDescMsg::?relay`; Banked call to: ZDP_SimpleDescMsg
//  778 
//  779   if ( free && sDesc )
        MOV       A,?V1
        JZ        ??ZDO_ProcessSimpleDescReq_7
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_399:
        JZ        ??ZDO_ProcessSimpleDescReq_7
//  780   {
//  781     osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine99 & 0xFFFF
//  782   }
??CrossCallReturnLabel_488:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
//  783 }
??ZDO_ProcessSimpleDescReq_7:
        LJMP      ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock36
//  784 
//  785 /*********************************************************************
//  786  * @fn          ZDO_ProcessSimpleDescRsp
//  787  *
//  788  * @brief       This function processes and responds to the
//  789  *              Simple_Desc_rsp message.
//  790  *
//  791  * @param       inMsg - incoming message (request)
//  792  *
//  793  * @return      none
//  794  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  795 void ZDO_ProcessSimpleDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ProcessSimpleDescRsp:
          CFI Block cfiBlock37 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescRsp
        CODE
//  796 {
        ; Saved register size: 0
        ; Auto size: 0
//  797 
//  798 }
        LJMP      ?BRET
          CFI EndBlock cfiBlock37
//  799 
//  800 /*********************************************************************
//  801  * @fn          ZDO_ProcessActiveEPReq
//  802  *
//  803  * @brief       This function processes and responds to the
//  804  *              Active_EP_req message.
//  805  *
//  806  * @param       inMsg  - incoming message (request)
//  807  *
//  808  * @return      none
//  809  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  810 void ZDO_ProcessActiveEPReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessActiveEPReq:
          CFI Block cfiBlock38 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
        CODE
//  811 {
        FUNCALL ZDO_ProcessActiveEPReq, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afNumEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, afEndPoints
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessActiveEPReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 21, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 21, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
        MOV       ?V4,R2
        MOV       ?V5,R3
//  812   byte cnt = 0;
        MOV       ?V0,#0x0
//  813   uint16 aoi;
//  814   byte stat = ZDP_SUCCESS;
        MOV       ?V1,#0x0
//  815 
//  816   aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
        LCALL     ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_331:
        ADDC      A,?V5
        LCALL     ?Subroutine58 & 0xFFFF
//  817 
//  818   if ( aoi == NLME_GetShortAddr() )
??CrossCallReturnLabel_97:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       A,R2
        XRL       A,R6
        JNZ       ??ZDO_ProcessActiveEPReq_0
        MOV       A,R3
        XRL       A,R7
??ZDO_ProcessActiveEPReq_0:
        JNZ       ??ZDO_ProcessActiveEPReq_1
//  819   {
//  820     cnt = afNumEndPoints() - 1;  // -1 for ZDO endpoint descriptor
        ; Setup parameters for call to function afNumEndPoints
        LCALL     `??afNumEndPoints::?relay`; Banked call to: afNumEndPoints
        MOV       A,R1
        DEC       A
        MOV       ?V0,A
//  821     afEndPoints( (uint8 *)ZDOBuildBuf, true );
        ; Setup parameters for call to function afEndPoints
        MOV       R1,#0x1
        MOV       R2,#ZDOBuildBuf & 0xff
        MOV       R3,#(ZDOBuildBuf >> 8) & 0xff
        LCALL     `??afEndPoints::?relay`; Banked call to: afEndPoints
        SJMP      ??ZDO_ProcessActiveEPReq_2
//  822   }
//  823   else
//  824   {
//  825     if(ZG_BUILD_ENDDEVICE_TYPE)
//  826     {
//  827       stat = ZDP_INVALID_REQTYPE;
//  828     }
//  829     else
//  830     {
//  831       stat = ZDP_DEVICE_NOT_FOUND;
??ZDO_ProcessActiveEPReq_1:
        MOV       ?V1,#-0x7f
//  832     }
//  833   }
//  834 
//  835   ZDP_ActiveEPRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat,
//  836                   aoi, cnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
??ZDO_ProcessActiveEPReq_2:
        ; Setup parameters for call to function ZDP_EPRsp
        LCALL     ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_573:
        LCALL     ??Subroutine232_0 & 0xFFFF
??CrossCallReturnLabel_522:
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V2,#ZDOBuildBuf & 0xff
        MOV       ?V3,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       ?V2,R6
        MOV       ?V3,R7
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,?V1
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_212:
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_523:
        MOV       R1,A
        MOV       R2,#0x5
        MOV       R3,#-0x80
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        LJMP      ?Subroutine5 & 0xFFFF
//  837 }
          CFI EndBlock cfiBlock38

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine126:
          CFI Block cfiCond39 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_331
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond40) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond40) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond40) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond40) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond40) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond40) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond40) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond40) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond40) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond40) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond40) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond40) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond40) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond40) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond40) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond40) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond40) CFA_SP SP+-2
          CFI (cfiCond40) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond41 Using cfiCommon0
          CFI (cfiCond41) Function ZDO_ProcessUserDescSet
          CFI (cfiCond41) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond41) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond41) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond41) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond41) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond41) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond41) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond41) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond41) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond41) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond41) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond41) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond41) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond41) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond41) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond41) CFA_SP SP+-2
          CFI (cfiCond41) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker42 Using cfiCommon1
          CFI (cfiPicker42) NoFunction
          CFI (cfiPicker42) Picker
        MOV       A,R2
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiCond41
          CFI EndBlock cfiPicker42
        REQUIRE ??Subroutine204_0
        ; // Fall through to label ??Subroutine204_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine204_0:
          CFI Block cfiCond43 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_328
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond44 Using cfiCommon0
          CFI (cfiCond44) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond44) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond44) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond44) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond44) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond44) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond44) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond44) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond44) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond44) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond44) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond44) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond44) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond44) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond44) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond44) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond44) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond44) CFA_SP SP+-2
          CFI (cfiCond44) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond45 Using cfiCommon0
          CFI (cfiCond45) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond45) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond45) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond45) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond45) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond45) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond45) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond45) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond45) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond45) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond45) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond45) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond45) CFA_SP SP+-2
          CFI (cfiCond45) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond46) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond46) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond46) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond46) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond46) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond46) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond46) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond46) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond46) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond46) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond46) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond46) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond46) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond46) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond46) CFA_SP SP+-2
          CFI (cfiCond46) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond47) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond47) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond47) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond47) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond47) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond47) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond47) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond47) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond47) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond47) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond47) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond47) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond47) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond47) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond47) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond47) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond47) CFA_SP SP+-2
          CFI (cfiCond47) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond48 Using cfiCommon0
          CFI (cfiCond48) Function ZDO_ProcessUserDescSet
          CFI (cfiCond48) Conditional ??CrossCallReturnLabel_333
          CFI (cfiCond48) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond48) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond48) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond48) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond48) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond48) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond48) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond48) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond48) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond48) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond48) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond48) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond48) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond48) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond48) CFA_SP SP+-2
          CFI (cfiCond48) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker49 Using cfiCommon1
          CFI (cfiPicker49) NoFunction
          CFI (cfiPicker49) Picker
        LCALL     ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_644:
        RET
          CFI EndBlock cfiCond43
          CFI EndBlock cfiCond44
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiCond48
          CFI EndBlock cfiPicker49
//  838 
//  839 /*********************************************************************
//  840  * @fn          ZDO_ConvertOTAClusters
//  841  *
//  842  * @brief       This function will convert the over-the-air cluster list
//  843  *              format to an internal format.
//  844  *
//  845  * @param       inMsg  - incoming message (request)
//  846  *
//  847  * @return      pointer to incremented inBuf
//  848  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  849 uint8 *ZDO_ConvertOTAClusters( uint8 cnt, uint8 *inBuf, uint16 *outList )
ZDO_ConvertOTAClusters:
          CFI Block cfiBlock50 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
        CODE
//  850 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R1
        MOV       R7,A
//  851   uint8 x;
//  852 
//  853   for ( x = 0; x < cnt; x++ )
        MOV       R6,#0x0
        SJMP      ??ZDO_ConvertOTAClusters_0
//  854   {
//  855     // convert ota format to internal
//  856     outList[x] = BUILD_UINT16( inBuf[0], inBuf[1] );
??ZDO_ConvertOTAClusters_1:
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine248_0 & 0xFFFF
??CrossCallReturnLabel_621:
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,?V0
        ADD       A,R0
        CLR       A
        ADDC      A,R1
        MOV       ?V1,A
        MOV       A,R6
        LCALL     ?Subroutine120 & 0xFFFF
??CrossCallReturnLabel_200:
        MOV       A,R4
        ADD       A,R0
        MOV       DPL,A
        MOV       A,R5
        ADDC      A,R1
        MOV       DPH,A
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        MOVX      @DPTR,A
//  857     inBuf += sizeof( uint16 );
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        JNC       ??ZDO_ConvertOTAClusters_2
        INC       R3
//  858   }
??ZDO_ConvertOTAClusters_2:
        INC       R6
??ZDO_ConvertOTAClusters_0:
        MOV       A,R6
        CLR       C
        SUBB      A,R7
        JC        ??ZDO_ConvertOTAClusters_1
//  859   return ( inBuf );
        LJMP      ??Subroutine203_0 & 0xFFFF
//  860 }
          CFI EndBlock cfiBlock50

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine120:
          CFI Block cfiCond51 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_198
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ZDO_CompareClusterLists
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond52) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond52) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond52) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond52) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond52) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond52) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond52) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond52) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond52) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond52) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond52) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond52) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond52) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond52) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond52) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond52) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond52) CFA_SP SP+-2
          CFI (cfiCond52) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function ZDO_ConvertOTAClusters
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond53) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond53) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond53) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond53) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond53) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond53) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond53) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond53) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond53) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond53) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond53) CFA_SP SP+-2
          CFI (cfiCond53) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker54 Using cfiCommon1
          CFI (cfiPicker54) NoFunction
          CFI (cfiPicker54) Picker
        ADD       A,0xE0 /* A   */
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        RET
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiPicker54
//  861 
//  862 /*********************************************************************
//  863  * @fn          ZDO_ProcessMatchDescReq
//  864  *
//  865  * @brief       This function processes and responds to the
//  866  *              Match_Desc_req message.
//  867  *
//  868  * @param       inMsg  - incoming message (request)
//  869  *
//  870  * @return      none
//  871  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//  872 void ZDO_ProcessMatchDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMatchDescReq:
          CFI Block cfiBlock55 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
        CODE
//  873 {
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, NLME_IsAddressBroadcast
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_send
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDO_AnyClusterMatches
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_msg_allocate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, ZDP_EPRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 41, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 41, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMatchDescReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 34, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 34, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 19
        MOV       A,#-0x13
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
//  874   uint8 epCnt = 0;
??CrossCallReturnLabel_65:
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
//  875   uint8 numInClusters;
//  876   uint16 *inClusters = NULL;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  877   uint8 numOutClusters;
//  878   uint16 *outClusters = NULL;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  879   epList_t *epDesc;
//  880   SimpleDescriptionFormat_t *sDesc = NULL;
//  881   uint8 allocated;
//  882   uint8 *msg;
//  883   uint16 aoi;
//  884   uint16 profileID;
//  885 
//  886   // Parse the incoming message
//  887   msg = inMsg->asdu;
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_660:
        LCALL     ??Subroutine204_0 & 0xFFFF
??CrossCallReturnLabel_329:
        ADDC      A,R0
        LCALL     ?Subroutine83 & 0xFFFF
//  888   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_138:
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_335:
        ADD       A,R0
        MOV       ?V2,A
        CLR       A
        ADDC      A,R1
        MOV       ?V3,A
//  889   profileID = BUILD_UINT16( msg[2], msg[3] );
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_154:
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        MOV       R6,A
        CLR       A
        ADDC      A,R1
        MOV       R7,A
//  890   msg += 4;
//  891 
//  892   if ( ADDR_BCAST_NOT_ME == NLME_IsAddressBroadcast(aoi) )
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0xf
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       A,#0xf
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_44:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_168:
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_45:
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0xe
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_407:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV       A,R1
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMatchDescReq_0
//  893   {
//  894     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  895                           aoi, 0, NULL, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
??CrossCallReturnLabel_83:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 41)
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_148:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_91:
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
//  896     return;
        LJMP      ??ZDO_ProcessMatchDescReq_1 & 0xFFFF
//  897   }
//  898   else if ( (ADDR_NOT_BCAST == NLME_IsAddressBroadcast(aoi)) && (aoi != ZDAppNwkAddr.addr.shortAddr) )
??ZDO_ProcessMatchDescReq_0:
        ; Setup parameters for call to function NLME_IsAddressBroadcast
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??NLME_IsAddressBroadcast::?relay`; Banked call to: NLME_IsAddressBroadcast
        MOV       A,R1
        JNZ       ??ZDO_ProcessMatchDescReq_2
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,?V2
        JNZ       ??ZDO_ProcessMatchDescReq_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,?V3
??ZDO_ProcessMatchDescReq_3:
        JZ        ??ZDO_ProcessMatchDescReq_2
//  899   {
//  900 #if (ZG_BUILD_ENDDEVICE_TYPE)
//  901     if(ZG_DEVICE_ENDDEVICE_TYPE)
//  902     {    
//  903     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_INVALID_REQTYPE,
//  904                              aoi, 0, NULL, inMsg->SecurityUse );
//  905     }
//  906 #else 
//  907     if (ZG_DEVICE_RTR_TYPE)
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessMatchDescReq_4
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMatchDescReq_5
//  908     {
//  909     ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_DEVICE_NOT_FOUND,
//  910                              aoi, 0, NULL, inMsg->SecurityUse );
??ZDO_ProcessMatchDescReq_4:
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
//  911     }
??CrossCallReturnLabel_84:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        CLR       A
        MOV       ?V0,A
        MOV       ?V1,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#-0x7f
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 41)
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_149:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_92:
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
//  912 #endif
//  913     return;
??ZDO_ProcessMatchDescReq_5:
        LJMP      ??ZDO_ProcessMatchDescReq_1 & 0xFFFF
//  914   }
//  915 
//  916   if ((numInClusters = *msg++) &&
//  917       (inClusters = (uint16*)osal_mem_alloc( numInClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_2:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V6,A
        MOV       A,?V0
        ADD       A,#0x5
        MOV       ?V0,A
        JNC       ??ZDO_ProcessMatchDescReq_6
        INC       ?V1
??ZDO_ProcessMatchDescReq_6:
        MOV       A,?V6
        JZ        ??ZDO_ProcessMatchDescReq_7
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_188:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_357:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_379:
        JZ        ??ZDO_ProcessMatchDescReq_7
//  918   {
//  919     msg = ZDO_ConvertOTAClusters( numInClusters, msg, inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine102 & 0xFFFF
//  920   }
??CrossCallReturnLabel_162:
        MOV       R1,?V6
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV       ?V0,R2
        MOV       ?V1,R3
        SJMP      ??ZDO_ProcessMatchDescReq_8
//  921   else
//  922   {
//  923     numInClusters = 0;
??ZDO_ProcessMatchDescReq_7:
        MOV       ?V6,#0x0
//  924   }
//  925 
//  926   if ((numOutClusters = *msg++) &&
//  927       (outClusters = (uint16 *)osal_mem_alloc( numOutClusters * sizeof( uint16 ) )))
??ZDO_ProcessMatchDescReq_8:
        MOV       DPL,?V0
        MOV       DPH,?V1
        MOVX      A,@DPTR
        MOV       ?V3,A
        INC       DPTR
        MOV       ?V0,DPL
        MOV       ?V1,DPH
        JZ        ??ZDO_ProcessMatchDescReq_9
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_189:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_24:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_380:
        JZ        ??ZDO_ProcessMatchDescReq_9
//  928   {
//  929     msg = ZDO_ConvertOTAClusters( numOutClusters, msg, outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine102 & 0xFFFF
//  930   }
??CrossCallReturnLabel_163:
        MOV       R1,?V3
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP      ??ZDO_ProcessMatchDescReq_10
//  931   else
//  932   {
//  933     numOutClusters = 0;
??ZDO_ProcessMatchDescReq_9:
        MOV       ?V3,#0x0
//  934   }
//  935 
//  936   // First count the number of endpoints that match.
//  937   epDesc = epList;
??ZDO_ProcessMatchDescReq_10:
        MOV       DPTR,#epList
        SJMP      ??CrossCallReturnLabel_652
//  938   while ( epDesc )
//  939   {
//  940     // Don't search endpoint 0 and check if response is allowed
//  941     if ( epDesc->epDesc->endPoint != ZDO_EP && (epDesc->flags&eEP_AllowMatch) )
//  942     {
//  943       if ( epDesc->pfnDescCB )
//  944       {
//  945         sDesc = (SimpleDescriptionFormat_t *)epDesc->pfnDescCB( AF_DESCRIPTOR_SIMPLE, epDesc->epDesc->endPoint );
//  946         allocated = TRUE;
//  947       }
//  948       else
//  949       {
//  950         sDesc = epDesc->epDesc->simpleDesc;
//  951         allocated = FALSE;
//  952       }
//  953 
//  954       // Allow specific ProfileId or Wildcard ProfileID
//  955       if ( sDesc && ( ( sDesc->AppProfId == profileID ) || ( profileID == ZDO_WILDCARD_PROFILE_ID ) ) )
//  956       {
//  957         uint8 *uint8Buf = (uint8 *)ZDOBuildBuf;
//  958 
//  959         // Are there matching input clusters?
//  960         if ((ZDO_AnyClusterMatches( numInClusters, inClusters,
//  961                    sDesc->AppNumInClusters, sDesc->pAppInClusterList )) ||
//  962             // Are there matching output clusters?
//  963             (ZDO_AnyClusterMatches( numOutClusters, outClusters,
//  964                    sDesc->AppNumOutClusters, sDesc->pAppOutClusterList )))
//  965         {
//  966           // Notify the endpoint of the match.
//  967           uint8 bufLen = sizeof( ZDO_MatchDescRspSent_t ) + (numOutClusters + numInClusters) * sizeof(uint16);
//  968           ZDO_MatchDescRspSent_t *pRspSent = (ZDO_MatchDescRspSent_t *) osal_msg_allocate( bufLen );
//  969 
//  970           if (pRspSent)
//  971           {
//  972             pRspSent->hdr.event = ZDO_MATCH_DESC_RSP_SENT;
//  973             pRspSent->nwkAddr = inMsg->srcAddr.addr.shortAddr;
//  974             pRspSent->numInClusters = numInClusters;
//  975             pRspSent->numOutClusters = numOutClusters;
//  976 
//  977             if (numInClusters)
//  978             {
//  979               pRspSent->pInClusters = (uint16*) (pRspSent + 1);
//  980               osal_memcpy(pRspSent->pInClusters, inClusters, numInClusters * sizeof(uint16));
//  981             }
//  982             else
//  983             {
//  984               pRspSent->pInClusters = NULL;
//  985             }
//  986 
//  987             if (numOutClusters)
//  988             {
//  989               pRspSent->pOutClusters = (uint16*)(pRspSent + 1) + numInClusters;
//  990               osal_memcpy(pRspSent->pOutClusters, outClusters, numOutClusters * sizeof(uint16));
//  991             }
//  992             else
//  993             {
//  994               pRspSent->pOutClusters = NULL;
??ZDO_ProcessMatchDescReq_11:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
//  995             }
//  996 
//  997             osal_msg_send( *epDesc->epDesc->task_id, (uint8 *)pRspSent );
??ZDO_ProcessMatchDescReq_12:
        ; Setup parameters for call to function osal_msg_send
        MOV       R2,?V4
        MOV       R3,?V5
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_369:
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_651:
        LCALL     ?Subroutine79 & 0xFFFF
??CrossCallReturnLabel_375:
        MOV       R1,A
        LCALL     `??osal_msg_send::?relay`; Banked call to: osal_msg_send
//  998           }
//  999 
// 1000           uint8Buf[epCnt++] = sDesc->EndPoint;
??ZDO_ProcessMatchDescReq_13:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_370:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#ZDOBuildBuf & 0xff
        ADD       A,R0
        MOV       DPL,A
        CLR       A
        ADDC      A,#(ZDOBuildBuf >> 8) & 0xff
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        INC       A
        MOVX      @DPTR,A
// 1001         }
// 1002       }
// 1003 
// 1004       if ( allocated )
??ZDO_ProcessMatchDescReq_14:
        MOV       C,?VB.0
        JNC       ??ZDO_ProcessMatchDescReq_15
// 1005       {
// 1006         osal_mem_free( sDesc );
        ; Setup parameters for call to function osal_mem_free
        LCALL     ?Subroutine99 & 0xFFFF
// 1007       }
??CrossCallReturnLabel_489:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1008     }
// 1009     epDesc = epDesc->nextDesc;
??ZDO_ProcessMatchDescReq_15:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        LCALL     ?Subroutine94 & 0xFFFF
??CrossCallReturnLabel_652:
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_434:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_408:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_381:
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_16 & 0xFFFF
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine107 & 0xFFFF
??CrossCallReturnLabel_169:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_409:
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_132:
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        MOV       R4,A
        JZ        ??ZDO_ProcessMatchDescReq_15
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_661:
        ADD       A,#0x8
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_222:
        MOV       C,0xE0 /* A   */.0
        JNC       ??ZDO_ProcessMatchDescReq_15
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_654:
        INC       DPTR
        LCALL     ?Subroutine85 & 0xFFFF
??CrossCallReturnLabel_327:
        MOV       A,DPL
        ORL       A,DPH
        JZ        ??ZDO_ProcessMatchDescReq_17
        ; Setup parameters for indirect call
        MOV       A,R4
        MOV       R2,A
        MOV       R1,#0x1
        LCALL     ?CALL_IND
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_358:
        SETB      ?VB.0
        SJMP      ??ZDO_ProcessMatchDescReq_18
??ZDO_ProcessMatchDescReq_17:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        LCALL     ??Subroutine214_0 & 0xFFFF
??CrossCallReturnLabel_425:
        CLR       ?VB.0
??ZDO_ProcessMatchDescReq_18:
        LCALL     ?Subroutine49 & 0xFFFF
??CrossCallReturnLabel_400:
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_14 & 0xFFFF
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine254_0 & 0xFFFF
??CrossCallReturnLabel_653:
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_ProcessMatchDescReq_19
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
??ZDO_ProcessMatchDescReq_19:
        JZ        ??ZDO_ProcessMatchDescReq_20
        MOV       A,#-0x1
        XRL       A,R6
        JNZ       ??ZDO_ProcessMatchDescReq_21
        MOV       A,#-0x1
        XRL       A,R7
??ZDO_ProcessMatchDescReq_21:
        JZ        $+5
        LJMP      ??ZDO_ProcessMatchDescReq_14 & 0xFFFF
??ZDO_ProcessMatchDescReq_20:
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_235:
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_662:
        ADD       A,#0x6
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_223:
        MOV       R4,A
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_465:
        MOV       R1,?V6
        LCALL     `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,R1
        JNZ       ??ZDO_ProcessMatchDescReq_22
        ; Setup parameters for call to function ZDO_AnyClusterMatches
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_663:
        ADD       A,#0xa
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_134:
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_466:
        MOV       R1,?V3
        LCALL     `??ZDO_AnyClusterMatches::?relay`; Banked call to: ZDO_AnyClusterMatches
        MOV       A,#0x2
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,R1
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_14 & 0xFFFF
??ZDO_ProcessMatchDescReq_22:
        ; Setup parameters for call to function osal_msg_allocate
        MOV       A,?V3
        ADD       A,?V6
        CLR       C
        RLC       A
        ADD       A,#0xa
        MOV       R2,A
        MOV       R3,#0x0
        LCALL     `??osal_msg_allocate::?relay`; Banked call to: osal_msg_allocate
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       A,R2
        ORL       A,?V5
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_13 & 0xFFFF
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#-0x2e
        MOVX      @DPTR,A
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine78 & 0xFFFF
??CrossCallReturnLabel_133:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_410:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V6
        LCALL     ??Subroutine236_0 & 0xFFFF
??CrossCallReturnLabel_544:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V3
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x5
        MOV       DPL,A
        CLR       A
        ADDC      A,?V5
        MOV       DPH,A
        MOV       A,?V6
        JZ        ??ZDO_ProcessMatchDescReq_23
        MOV       A,R2
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,?V5
        MOV       R3,A
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_359:
        ; Setup parameters for call to function osal_memcpy
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_103:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R4,?V6
        MOV       A,R4
        ADD       A,R4
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
        SJMP      ??ZDO_ProcessMatchDescReq_24
??ZDO_ProcessMatchDescReq_23:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
??ZDO_ProcessMatchDescReq_24:
        MOV       A,?V4
        ADD       A,#0x8
        MOV       DPL,A
        CLR       A
        ADDC      A,?V5
        MOV       DPH,A
        MOV       A,?V3
        JNZ       $+5
        LJMP      ??ZDO_ProcessMatchDescReq_11 & 0xFFFF
        MOV       R0,?V6
        LCALL     ?Subroutine177 & 0xFFFF
// 1010   }
??CrossCallReturnLabel_294:
        MOV       A,?V4
        ADD       A,R0
        MOV       R0,A
        MOV       A,?V5
        ADDC      A,R1
        MOV       R1,A
        MOV       A,R0
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     ?Subroutine18 & 0xFFFF
??CrossCallReturnLabel_20:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine61 & 0xFFFF
??CrossCallReturnLabel_104:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R4,?V3
        MOV       A,R4
        ADD       A,R4
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
        LJMP      ??ZDO_ProcessMatchDescReq_12 & 0xFFFF
// 1011 
// 1012   if ( epCnt )
??ZDO_ProcessMatchDescReq_16:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessMatchDescReq_25
// 1013   {
// 1014     // Send the message if at least one match found.
// 1015     if ( ZSuccess == ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
// 1016               ZDAppNwkAddr.addr.shortAddr, epCnt, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse ) )
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
// 1017     {
// 1018 #if defined( LCD_SUPPORTED )
// 1019       HalLcdWriteScreen( "Match Desc Req", "Rsp Sent" );
// 1020 #endif
// 1021     }
// 1022   }
??CrossCallReturnLabel_85:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V0,#ZDOBuildBuf & 0xff
        MOV       ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_496:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#0x0
        SJMP      ??ZDO_ProcessMatchDescReq_26
          CFI CFA_XSP16 add(XSP16, 34)
// 1023   else
// 1024   {
// 1025     if (!inMsg->wasBroadcast)
??ZDO_ProcessMatchDescReq_25:
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine73 & 0xFFFF
??CrossCallReturnLabel_122:
        JNZ       ??ZDO_ProcessMatchDescReq_27
// 1026     {
// 1027       // send response message with match length = 0
// 1028       ZDP_MatchDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZDP_SUCCESS,
// 1029                         ZDAppNwkAddr.addr.shortAddr, 0, (uint8 *)ZDOBuildBuf, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_EPRsp
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine51 & 0xFFFF
// 1030 #if defined( LCD_SUPPORTED )
// 1031       HalLcdWriteScreen( "Match Desc Req", "Rsp Non Matched" );
// 1032 #endif
// 1033     }
// 1034     else
// 1035     {
// 1036       // no response mesage for broadcast message
// 1037 #if defined( LCD_SUPPORTED )
// 1038       HalLcdWriteScreen( "Match Desc Req", "Non Matched" );
// 1039 #endif
// 1040     }
// 1041   }
??CrossCallReturnLabel_86:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V0,#ZDOBuildBuf & 0xff
        MOV       ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 40)
??ZDO_ProcessMatchDescReq_26:
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 41)
        MOV       A,#0x10
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine90 & 0xFFFF
??CrossCallReturnLabel_150:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine55 & 0xFFFF
??CrossCallReturnLabel_93:
        LCALL     `??ZDP_EPRsp::?relay`; Banked call to: ZDP_EPRsp
        MOV       A,#0x7
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 34)
// 1042 
// 1043   if ( inClusters != NULL )
??ZDO_ProcessMatchDescReq_27:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_382:
        JZ        ??ZDO_ProcessMatchDescReq_28
// 1044   {
// 1045     osal_mem_free( inClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 1046   }
??CrossCallReturnLabel_467:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1047 
// 1048   if ( outClusters != NULL )
??ZDO_ProcessMatchDescReq_28:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_383:
        JZ        ??ZDO_ProcessMatchDescReq_1
// 1049   {
// 1050     osal_mem_free( outClusters );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 1051   }
??CrossCallReturnLabel_468:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1052 }
??ZDO_ProcessMatchDescReq_1:
        MOV       A,#0x13
          CFI EndBlock cfiBlock55
        REQUIRE ?Subroutine6
        ; // Fall through to label ?Subroutine6

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine6:
          CFI Block cfiBlock56 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 34)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 15)
          CFI Valid
        MOV       R7,#0x7
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock56

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine107:
          CFI Block cfiCond57 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond58) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond58) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond58) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond58) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond58) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond58) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond58) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond58) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond58) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond58) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond58) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond58) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond58) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond58) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond58) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond58) CFA_SP SP+-2
          CFI (cfiCond58) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker59 Using cfiCommon1
          CFI (cfiPicker59) NoFunction
          CFI (cfiPicker59) Picker
        MOVX      A,@DPTR
        ADD       A,#0x2
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        RET
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiPicker59

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine105:
          CFI Block cfiCond60 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_335
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ZDO_ParseEPListRsp
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond61) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond61) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond61) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond61) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond61) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond61) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond61) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond61) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond61) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond61) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond61) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond61) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond61) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond61) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond61) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond61) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond61) CFA_SP SP+-2
          CFI (cfiCond61) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker62 Using cfiCommon1
          CFI (cfiPicker62) NoFunction
          CFI (cfiPicker62) Picker
        MOV       R2,A
        INC       DPTR
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiPicker62
        REQUIRE ??Subroutine205_0
        ; // Fall through to label ??Subroutine205_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine205_0:
          CFI Block cfiCond63 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
          CFI Conditional ??CrossCallReturnLabel_334
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond64) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond64) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond64) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond64) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond64) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond64) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond64) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond64) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond64) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond64) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond64) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond64) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond64) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond64) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond64) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond64) CFA_SP SP+-2
          CFI (cfiCond64) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function ZDO_ParseEPListRsp
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond65) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond65) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond65) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond65) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond65) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond65) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond65) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond65) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond65) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond65) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond65) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond65) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond65) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond65) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond65) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond65) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond65) CFA_SP SP+-2
          CFI (cfiCond65) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker66 Using cfiCommon1
          CFI (cfiPicker66) NoFunction
          CFI (cfiPicker66) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        RET
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiPicker66

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine102:
          CFI Block cfiCond67 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_162
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_163
          CFI (cfiCond68) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond68) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond68) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond68) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond68) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond68) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond68) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond68) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond68) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond68) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond68) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond68) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond68) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond68) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond68) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond68) CFA_SP SP+-2
          CFI (cfiCond68) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker69 Using cfiCommon1
          CFI (cfiPicker69) NoFunction
          CFI (cfiPicker69) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        RET
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiPicker69

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine90:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_148
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond71) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond71) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond71) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond71) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond71) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond71) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond71) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond71) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond71) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond71) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond71) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond71) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond71) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond71) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond71) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond71) CFA_SP SP+-2
          CFI (cfiCond71) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond72 Using cfiCommon0
          CFI (cfiCond72) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond72) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond72) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond72) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond72) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond72) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond72) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond72) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond72) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond72) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond72) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond72) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond72) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond72) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond72) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond72) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond72) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond72) CFA_SP SP+-2
          CFI (cfiCond72) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker73 Using cfiCommon1
          CFI (cfiPicker73) NoFunction
          CFI (cfiPicker73) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       A,#0x16
        RET
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiCond72
          CFI EndBlock cfiPicker73

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine78:
          CFI Block cfiCond74 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond75) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond75) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond75) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond75) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond75) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond75) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond75) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond75) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond75) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond75) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond75) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond75) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond75) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond75) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond75) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond75) CFA_SP SP+-2
          CFI (cfiCond75) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker76 Using cfiCommon1
          CFI (cfiPicker76) NoFunction
          CFI (cfiPicker76) Picker
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_278:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiPicker76

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine55:
          CFI Block cfiCond77 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond78) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond78) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond78) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond78) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond78) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond78) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond78) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond78) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond78) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond78) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond78) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond78) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond78) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond78) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond78) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond78) CFA_SP SP+-2
          CFI (cfiCond78) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond79) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond79) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond79) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond79) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond79) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond79) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond79) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond79) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond79) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond79) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond79) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond79) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond79) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond79) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond79) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond79) CFA_SP SP+-2
          CFI (cfiCond79) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiPicker80 Using cfiCommon1
          CFI (cfiPicker80) NoFunction
          CFI (cfiPicker80) Picker
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_276:
        MOV       R1,A
        MOV       R2,#0x6
        MOV       R3,#-0x80
        RET
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiPicker80

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine51:
          CFI Block cfiCond81 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond82) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond82) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond82) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond82) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond82) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond82) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond82) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond82) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond82) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond82) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond82) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond82) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond82) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond82) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond82) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond82) CFA_SP SP+-2
          CFI (cfiCond82) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_85
          CFI (cfiCond83) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond83) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond83) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond83) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond83) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond83) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond83) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond83) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond83) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond83) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond83) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond83) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond83) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond83) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond83) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond83) CFA_SP SP+-2
          CFI (cfiCond83) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond84) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond84) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond84) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond84) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond84) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond84) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond84) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond84) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond84) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond84) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond84) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond84) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond84) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond84) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond84) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond84) CFA_SP SP+-2
          CFI (cfiCond84) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker85 Using cfiCommon1
          CFI (cfiPicker85) NoFunction
          CFI (cfiPicker85) Picker
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_275:
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiPicker85
// 1053 
// 1054 #if defined ( REFLECTOR )
// 1055 /*********************************************************************
// 1056  * @fn      ZDO_ProcessBindUnbindReq()
// 1057  *
// 1058  * @brief   Called to process a Bind or Unbind Request message.
// 1059  *
// 1060  * @param   inMsg  - incoming message (request)
// 1061  * @param   pReq - place to put parsed information
// 1062  *
// 1063  * @return  none
// 1064  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1065 void ZDO_ProcessBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ProcessBindUnbindReq:
          CFI Block cfiBlock86 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
        CODE
// 1066 {
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_BindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_LookupNwkAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_NwkAddrReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, APSME_UnBindRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDApp_NVUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 28, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 28, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessBindUnbindReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 33, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 33, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 12
        MOV       A,#-0xc
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       A,R4
        MOV       R6,A
        MOV       A,R5
        MOV       R7,A
// 1067   zAddrType_t SourceAddr;       // Binding Source addres
// 1068   byte bindStat;
// 1069 
// 1070   SourceAddr.addrMode = Addr64Bit;
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x3
        MOVX      @DPTR,A
// 1071   osal_cpyExtAddr( SourceAddr.addr.extAddr, pReq->srcAddress );
        ; Setup parameters for call to function sAddrExtCpy
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 1072 
// 1073   // If the local device is not the primary binding cache
// 1074   // check the src address of the bind request.
// 1075   // If it is not the local device's extended address
// 1076   // discard the request.
// 1077   if ( !osal_ExtAddrEqual( SourceAddr.addr.extAddr, NLME_GetExtAddr()) ||
// 1078         (pReq->dstAddress.addrMode != Addr64Bit &&
// 1079          pReq->dstAddress.addrMode != AddrGroup) )
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R4,?V2
        MOV       R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessBindUnbindReq_0
        MOV       A,R6
        ADD       A,#0x13
        MOV       ?V6,A
        CLR       A
        ADDC      A,R7
        MOV       ?V7,A
        MOV       DPL,?V6
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x3
        XRL       A,R0
        JZ        ??ZDO_ProcessBindUnbindReq_1
        MOV       A,#0x1
        XRL       A,R0
        JZ        ??ZDO_ProcessBindUnbindReq_1
// 1080   {
// 1081     bindStat = ZDP_NOT_SUPPORTED;
??ZDO_ProcessBindUnbindReq_0:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7c
        LJMP      ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1082   }
// 1083   else
// 1084   {
// 1085     // Check source & destination endpoints
// 1086     if ( (pReq->srcEndpoint == 0 || pReq->srcEndpoint > MAX_ENDPOINTS)
// 1087         || (( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1088             (pReq->dstEndpoint == 0 || pReq->dstEndpoint > MAX_ENDPOINTS)) )
??ZDO_ProcessBindUnbindReq_1:
        MOV       A,R6
        ADD       A,#0x8
        MOV       ?V2,A
        CLR       A
        ADDC      A,R7
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        JZ        ??ZDO_ProcessBindUnbindReq_3
        MOV       A,#-0x1
        XRL       A,R1
        JZ        ??ZDO_ProcessBindUnbindReq_3
        MOV       A,R6
        ADD       A,#0x14
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,#0x3
        XRL       A,R0
        JNZ       ??ZDO_ProcessBindUnbindReq_4
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        MOV       R0,A
        JZ        ??ZDO_ProcessBindUnbindReq_3
        MOV       A,#-0x1
        XRL       A,R0
        JNZ       ??ZDO_ProcessBindUnbindReq_4
// 1089     {
// 1090       bindStat = ZDP_INVALID_EP;
??ZDO_ProcessBindUnbindReq_3:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7e
        LJMP      ??ZDO_ProcessBindUnbindReq_2 & 0xFFFF
// 1091     }
// 1092     else
// 1093     {
// 1094       if ( inMsg->clusterID == Bind_req )
??ZDO_ProcessBindUnbindReq_4:
        MOV       A,R6
        ADD       A,#0x9
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0xb
        MOV       R6,A
        JNC       ??ZDO_ProcessBindUnbindReq_5
        INC       R7
??ZDO_ProcessBindUnbindReq_5:
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_592:
        MOVX      A,@DPTR
        XRL       A,#0x21
        JNZ       ??ZDO_ProcessBindUnbindReq_6
        INC       DPTR
        MOVX      A,@DPTR
??ZDO_ProcessBindUnbindReq_6:
        JNZ       ??ZDO_ProcessBindUnbindReq_7
// 1095       {
// 1096         // Assume the table is full
// 1097         bindStat = ZDP_TABLE_FULL;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x74
        LCALL     ?Subroutine24 & 0xFFFF
// 1098 
// 1099 #if defined( APP_TP ) || defined( APP_TP2 )
// 1100         // For ZigBee Conformance Testing
// 1101         if ( bindNumOfEntries() < gNWK_MAX_BINDING_ENTRIES )
// 1102 #endif
// 1103         {
// 1104 #if defined ( ZDP_BIND_VALIDATION )
// 1105           uint16 nwkAddr;
// 1106 
// 1107           // Verifies that a valid NWK address exists for the device
// 1108           // before creating a Binding entry. If NWK address does not
// 1109           // exist the request is sent out and the BindReq is saved, to
// 1110           // create the Bind Entry once the NwkAddrRsp is received
// 1111           if ( ( pReq->dstAddress.addrMode == Addr64Bit ) &&
// 1112                ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE ) )
// 1113           {
// 1114             // find an empty bind slot in the pending Bind Req list
// 1115             ZDO_PendingBindReq_t *pPendingBind;
// 1116 
// 1117             if ( ( pPendingBind = ZDApp_GetEmptyPendingBindReq() ) != NULL )
// 1118             {
// 1119               // copy the received request into the empty slot and all required info
// 1120               osal_memcpy( &(pPendingBind->bindReq), pReq, sizeof( ZDO_BindUnbindReq_t ) );
// 1121 
// 1122               pPendingBind->srcAddr = inMsg->srcAddr;
// 1123               pPendingBind->securityUse = inMsg->SecurityUse;
// 1124               pPendingBind->transSeq = inMsg->TransSeq;
// 1125               pPendingBind->age = MAX_TIME_ADDR_REQ;
// 1126 
// 1127               // create an entry in Address Manager
// 1128               ( void )bindAddrIndexGet( &(pReq->dstAddress) );
// 1129 
// 1130               ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
// 1131 
// 1132               osal_start_timerEx( ZDAppTaskID, ZDO_PENDING_BIND_REQ_EVT,
// 1133                                   AGE_OUT_PEND_BIND_REQ_DELAY );
// 1134               return;
// 1135             }
// 1136           }
// 1137           // Add Bind entry
// 1138           else if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1139                                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
// 1140           {
// 1141             // valid entry
// 1142             bindStat = ZDP_SUCCESS;
// 1143 
// 1144             // Notify to save info into NV
// 1145             ZDApp_NVUpdate();
// 1146           }
// 1147 #else // ZDP_BIND_VALIDATION  is not Defined
// 1148           // Create binding entry first independently of existance of  valid NWK addres
// 1149           // if NWK address does not exist a request is sent out
// 1150           if ( APSME_BindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1151                          &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??CrossCallReturnLabel_34:
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_469:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??APSME_BindRequest::?relay`; Banked call to: APSME_BindRequest
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,R1
        JNZ       ??ZDO_ProcessBindUnbindReq_8
// 1152           {
// 1153             uint16 nwkAddr;
// 1154 
// 1155             // valid entry
// 1156             bindStat = ZDP_SUCCESS;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 1157 
// 1158             // Notify to save info into NV
// 1159             ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL     `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
// 1160 
// 1161             // Check for the destination address
// 1162             if ( pReq->dstAddress.addrMode == Addr64Bit )
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        XRL       A,#0x3
        JNZ       ??ZDO_ProcessBindUnbindReq_8
// 1163             {
// 1164               if ( APSME_LookupNwkAddr( pReq->dstAddress.addr.extAddr, &nwkAddr ) == FALSE )
        ; Setup parameters for call to function APSME_LookupNwkAddr
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP102_8
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??APSME_LookupNwkAddr::?relay`; Banked call to: APSME_LookupNwkAddr
        MOV       A,R1
        JNZ       ??ZDO_ProcessBindUnbindReq_8
// 1165               {
// 1166                 ZDP_NwkAddrReq( pReq->dstAddress.addr.extAddr, ZDP_ADDR_REQTYPE_SINGLE, 0, 0 );
        ; Setup parameters for call to function ZDP_NwkAddrReq
        MOV       R5,#0x0
        MOV       R4,#0x0
        MOV       R1,#0x0
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??ZDP_NwkAddrReq::?relay`; Banked call to: ZDP_NwkAddrReq
        SJMP      ??ZDO_ProcessBindUnbindReq_8
// 1167               }
// 1168             }
// 1169           }
// 1170 #endif
// 1171         }
// 1172       }
// 1173       else // Unbind_req
// 1174       {
// 1175         if ( APSME_UnBindRequest( pReq->srcEndpoint, pReq->clusterID,
// 1176                        &(pReq->dstAddress), pReq->dstEndpoint ) == ZSuccess )
??ZDO_ProcessBindUnbindReq_7:
        ; Setup parameters for call to function APSME_UnBindRequest
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_470:
        LCALL     `??APSME_UnBindRequest::?relay`; Banked call to: APSME_UnBindRequest
        MOV       A,#0x1
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        JNZ       ??ZDO_ProcessBindUnbindReq_9
// 1177         {
// 1178           bindStat = ZDP_SUCCESS;
        CLR       A
        MOVX      @DPTR,A
// 1179 
// 1180           // Notify to save info into NV
// 1181           ZDApp_NVUpdate();
        ; Setup parameters for call to function ZDApp_NVUpdate
        LCALL     `??ZDApp_NVUpdate::?relay`; Banked call to: ZDApp_NVUpdate
        SJMP      ??ZDO_ProcessBindUnbindReq_8
// 1182         }
// 1183         else
// 1184           bindStat = ZDP_NO_ENTRY;
??ZDO_ProcessBindUnbindReq_9:
        MOV       A,#-0x78
??ZDO_ProcessBindUnbindReq_2:
        MOVX      @DPTR,A
// 1185       }
// 1186     }
// 1187   }
// 1188 
// 1189   // Send back a response message
// 1190   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr),
// 1191                (inMsg->clusterID | ZDO_RESPONSE_BIT), 1, &bindStat,
// 1192                inMsg->SecurityUse );
??ZDO_ProcessBindUnbindReq_8:
        ; Setup parameters for call to function ZDP_SendData
        LCALL     ?Subroutine130 & 0xFFFF
??CrossCallReturnLabel_214:
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_593:
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        ORL       A,#0x80
        MOV       ?V3,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL     ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_210:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 28)
// 1193 }
        MOV       A,#0xc
        LJMP      ??Subroutine200_0 & 0xFFFF
          CFI EndBlock cfiBlock86
// 1194 #endif // REFLECTOR
// 1195 
// 1196 /*********************************************************************
// 1197  * @fn      ZDO_UpdateAddrManager
// 1198  *
// 1199  * @brief   Update the Address Manager.
// 1200  *
// 1201  * @param   nwkAddr - network address
// 1202  * @param   extAddr - extended address
// 1203  *
// 1204  * @return  none
// 1205  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1206 void ZDO_UpdateAddrManager( uint16 nwkAddr, uint8 *extAddr )
ZDO_UpdateAddrManager:
          CFI Block cfiBlock87 Using cfiCommon0
          CFI Function ZDO_UpdateAddrManager
        CODE
// 1207 {
        FUNCALL ZDO_UpdateAddrManager, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_UpdateAddrManager, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 13
        MOV       A,#-0xd
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1208   AddrMgrEntry_t addrEntry;
// 1209 
// 1210   // Update the address manager
// 1211   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 1212   addrEntry.nwkAddr = nwkAddr;
        INC       A
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
// 1213   AddrMgrExtAddrSet( addrEntry.extAddr, extAddr );
??CrossCallReturnLabel_21:
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 1214   AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 1215 }
        MOV       A,#0xd
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 XSP16+0
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock87
// 1216 
// 1217 /*********************************************************************
// 1218  * @fn      ZDO_ProcessServerDiscReq
// 1219  *
// 1220  * @brief   Process the Server_Discovery_req message.
// 1221  *
// 1222  * @param   inMsg  - incoming message (request)
// 1223  *
// 1224  * @return  none
// 1225  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1226 void ZDO_ProcessServerDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessServerDiscReq:
          CFI Block cfiBlock88 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
        CODE
// 1227 {
        FUNCALL ZDO_ProcessServerDiscReq, ZDP_ServerDiscRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1228   uint16 serverMask = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
// 1229   uint16 matchMask = serverMask & ZDO_Config_Node_Descriptor.ServerMask;
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_208:
        LCALL     ??Subroutine198_0 & 0xFFFF
??CrossCallReturnLabel_325:
        LCALL     ??Subroutine240_0 & 0xFFFF
??CrossCallReturnLabel_575:
        MOV       R0,A
        MOV       DPTR,#ZDO_Config_Node_Descriptor + 8
        MOVX      A,@DPTR
        ANL       A,R0
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,R1
        MOV       ?V1,A
// 1230 
// 1231   if ( matchMask )
        MOV       A,?V0
        ORL       A,?V1
        JZ        ??ZDO_ProcessServerDiscReq_0
// 1232   {
// 1233     ZDP_ServerDiscRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSUCCESS,
// 1234                 ZDAppNwkAddr.addr.shortAddr, matchMask, inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_ServerDiscRsp
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       DPTR,#ZDAppNwkAddr
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,R6
        LCALL     ??Subroutine239_0 & 0xFFFF
// 1235   }
??CrossCallReturnLabel_569:
        LCALL     ??Subroutine242_0 & 0xFFFF
??CrossCallReturnLabel_596:
        MOV       R5,A
        MOV       R4,#0x0
        LCALL     ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_299:
        MOV       A,R6
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_218:
        LCALL     ??Subroutine242_0 & 0xFFFF
??CrossCallReturnLabel_597:
        MOV       R1,A
        LCALL     `??ZDP_ServerDiscRsp::?relay`; Banked call to: ZDP_ServerDiscRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 10)
// 1236 }
??ZDO_ProcessServerDiscReq_0:
        LJMP      ??Subroutine203_0 & 0xFFFF
          CFI EndBlock cfiBlock88
// 1237 
// 1238 /*********************************************************************
// 1239  * Call Back Functions from APS  - API
// 1240  */
// 1241 
// 1242 /*********************************************************************
// 1243  * @fn          ZDO_EndDeviceTimeoutCB
// 1244  *
// 1245  * @brief       This function handles the binding timer for the End
// 1246  *              Device Bind command.
// 1247  *
// 1248  * @param       none
// 1249  *
// 1250  * @return      none
// 1251  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1252 void ZDO_EndDeviceTimeoutCB( void )
ZDO_EndDeviceTimeoutCB:
          CFI Block cfiBlock89 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
        CODE
// 1253 {
        FUNCALL ZDO_EndDeviceTimeoutCB, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_EndDeviceTimeoutCB, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 12, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 12, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 2
        MOV       A,#-0x2
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1254 #if defined ( REFLECTOR )
// 1255   byte stat;
// 1256   if ( ZDO_EDBind )
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_384:
        JNZ       $+5
        LJMP      ??ZDO_EndDeviceTimeoutCB_0 & 0xFFFF
// 1257   {
// 1258     stat = ZDO_EDBind->status;
// 1259 
// 1260     // Send the response message to the first sent
// 1261     ZDO_SendEDBindRsp( ZDO_EDBind->SrcTransSeq, &(ZDO_EDBind->SrcAddr),
// 1262                         stat, ZDO_EDBind->SecurityUse );
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x15
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_224:
        MOV       R0,A
        MOV       DPTR,#ZDO_EDBind
        MOVX      A,@DPTR
        MOV       R1,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R1
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,R1
        MOV       DPH,A
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       DPTR,#ZDO_EDBind
        MOVX      A,@DPTR
        MOV       R1,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R1
        MOVX      A,@DPTR
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        MOV       A,R0
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 15)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       R1,#0x1
        MOV       DPTR,#ZDO_EDBind
        MOVX      A,@DPTR
        ADD       A,R1
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R5,A
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 12)
// 1263 
// 1264     ZDO_RemoveEndDeviceBind();
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine213_0 & 0xFFFF
// 1265   }
??CrossCallReturnLabel_385:
        JZ        ??ZDO_EndDeviceTimeoutCB_0
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x10
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_340:
        JZ        ??ZDO_EndDeviceTimeoutCB_1
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_1:
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_664:
        ADD       A,#0x13
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_341:
        JZ        ??ZDO_EndDeviceTimeoutCB_2
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_EndDeviceTimeoutCB_2:
        ; Setup parameters for call to function osal_mem_free
        MOV       DPTR,#ZDO_EDBind
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_471:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        MOV       DPTR,#ZDO_EDBind
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1266 #endif  // REFLECTOR
// 1267 }
??ZDO_EndDeviceTimeoutCB_0:
        LJMP      ?Subroutine2 & 0xFFFF
          CFI EndBlock cfiBlock89

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine50:
          CFI Block cfiCond90 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_340
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond91) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond91) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond91) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond91) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond91) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond91) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond91) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond91) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond91) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond91) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond91) CFA_SP SP+-2
          CFI (cfiCond91) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ZDO_RemoveMatchMemory
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond92) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond92) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond92) CFA_SP SP+-7
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ZDO_RemoveMatchMemory
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond93) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond93) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond93) CFA_SP SP+-7
          CFI Block cfiCond94 Using cfiCommon0
          CFI (cfiCond94) Function ZDO_RemoveMatchMemory
          CFI (cfiCond94) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond94) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond94) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond94) CFA_SP SP+-7
          CFI Block cfiCond95 Using cfiCommon0
          CFI (cfiCond95) Function ZDO_RemoveMatchMemory
          CFI (cfiCond95) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond95) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond95) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond95) CFA_SP SP+-7
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ZDO_RemoveMatchMemory
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond96) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond96) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond96) CFA_SP SP+-7
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ZDO_RemoveMatchMemory
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond97) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond97) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond97) CFA_SP SP+-7
          CFI Block cfiPicker98 Using cfiCommon1
          CFI (cfiPicker98) NoFunction
          CFI (cfiPicker98) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiCond94
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiPicker98
        REQUIRE ??Subroutine206_0
        ; // Fall through to label ??Subroutine206_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine206_0:
          CFI Block cfiCond99 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_338
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ZDO_CopyMatchInfo
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond100) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond100) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond100) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond100) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond100) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond100) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond100) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond100) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond100) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond100) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond100) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond100) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond100) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond100) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond100) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond100) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond100) CFA_SP SP+-2
          CFI (cfiCond100) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond101 Using cfiCommon0
          CFI (cfiCond101) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond101) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond101) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond101) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond101) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond101) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond101) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond101) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond101) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond101) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond101) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond101) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond101) CFA_SP SP+-2
          CFI (cfiCond101) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond102) CFA_SP SP+-2
          CFI (cfiCond102) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function ZDO_RemoveMatchMemory
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond103) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond103) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond103) CFA_SP SP+-7
          CFI Block cfiCond104 Using cfiCommon0
          CFI (cfiCond104) Function ZDO_RemoveMatchMemory
          CFI (cfiCond104) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond104) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond104) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond104) CFA_SP SP+-7
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function ZDO_RemoveMatchMemory
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond105) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond105) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond105) CFA_SP SP+-7
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ZDO_RemoveMatchMemory
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond106) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond106) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond106) CFA_SP SP+-7
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ZDO_RemoveMatchMemory
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond107) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond107) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond107) CFA_SP SP+-7
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ZDO_RemoveMatchMemory
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond108) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond108) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond108) CFA_SP SP+-7
          CFI Block cfiPicker109 Using cfiCommon1
          CFI (cfiPicker109) NoFunction
          CFI (cfiPicker109) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiPicker109
        REQUIRE ??Subroutine207_0
        ; // Fall through to label ??Subroutine207_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine207_0:
          CFI Block cfiCond110 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_337
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function ZDO_CopyMatchInfo
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond111) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond111) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond111) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond111) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond111) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond111) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond111) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond111) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond111) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond111) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond111) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond111) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond111) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond111) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond111) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond111) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond111) CFA_SP SP+-2
          CFI (cfiCond111) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ZDO_CopyMatchInfo
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond112) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond112) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond112) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond112) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond112) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond112) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond112) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond112) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond112) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond112) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond112) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond112) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond112) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond112) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond112) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond112) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond112) CFA_SP SP+-2
          CFI (cfiCond112) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond113) CFA_SP SP+-2
          CFI (cfiCond113) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond114) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond114) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond114) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond114) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond114) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond114) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond114) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond114) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond114) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond114) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond114) CFA_SP SP+-2
          CFI (cfiCond114) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond115 Using cfiCommon0
          CFI (cfiCond115) Function ZDO_RemoveMatchMemory
          CFI (cfiCond115) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond115) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond115) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond115) CFA_SP SP+-7
          CFI Block cfiCond116 Using cfiCommon0
          CFI (cfiCond116) Function ZDO_RemoveMatchMemory
          CFI (cfiCond116) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond116) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond116) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond116) CFA_SP SP+-7
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ZDO_RemoveMatchMemory
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond117) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond117) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond117) CFA_SP SP+-7
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ZDO_RemoveMatchMemory
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond118) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond118) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond118) CFA_SP SP+-7
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function ZDO_RemoveMatchMemory
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond119) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond119) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond119) CFA_SP SP+-7
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function ZDO_RemoveMatchMemory
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond120) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond120) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond120) CFA_SP SP+-7
          CFI Block cfiPicker121 Using cfiCommon1
          CFI (cfiPicker121) NoFunction
          CFI (cfiPicker121) Picker
        LCALL     ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_503:
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiCond115
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiPicker121
// 1268 
// 1269 /*********************************************************************
// 1270  * Optional Management Messages
// 1271  */
// 1272 
// 1273 /*********************************************************************
// 1274  * @fn          ZDO_ProcessMgmtLqiReq
// 1275  *
// 1276  * @brief       This function handles parsing the incoming Management
// 1277  *              LQI request and generate the response.
// 1278  *
// 1279  *   Note:      This function will limit the number of items returned
// 1280  *              to ZDO_MAX_LQI_ITEMS items.
// 1281  *
// 1282  * @param       inMsg - incoming message (request)
// 1283  *
// 1284  * @return      none
// 1285  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1286 void ZDO_ProcessMgmtLqiReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLqiReq:
          CFI Block cfiBlock122 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
        CODE
// 1287 {
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocCount
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AssocFindDevice
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, ZDP_MgmtLqiRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 63, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 63, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLqiReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 58, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 58, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 42
        MOV       A,#-0x2a
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 58)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
// 1288   byte x;
// 1289   byte index;
// 1290   byte numItems;
// 1291   byte maxItems;
// 1292   ZDP_MgmtLqiItem_t* table = NULL;
??CrossCallReturnLabel_66:
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 1293   ZDP_MgmtLqiItem_t* item;
// 1294   neighborEntry_t    entry;
// 1295   byte aItems = 0;
        MOV       ?V4,#0x0
// 1296   associated_devices_t *aDevice;
// 1297   AddrMgrEntry_t  nwkEntry;
// 1298   uint8 StartIndex = inMsg->asdu[0];
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_99:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1299 
// 1300   // Get the number of neighbor items
// 1301   NLME_GetRequest( nwkNumNeighborTableEntries, 0, &maxItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x64
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1302 
// 1303   //Routing devices uses assoc table, end devices don't
// 1304   if ( ZG_DEVICE_RTR_TYPE )
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessMgmtLqiReq_0
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMgmtLqiReq_1
// 1305   {
// 1306     // Get the number of associated items
// 1307     aItems = (uint8)AssocCount( PARENT, CHILD_FFD_RX_IDLE );
??ZDO_ProcessMgmtLqiReq_0:
        ; Setup parameters for call to function AssocCount
        MOV       R2,#0x4
        MOV       R1,#0x0
        LCALL     `??AssocCount::?relay`; Banked call to: AssocCount
        MOV       A,R2
        MOV       ?V4,A
// 1308     // Total number of items
// 1309     maxItems += aItems;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,R2
        SJMP      ??ZDO_ProcessMgmtLqiReq_2
// 1310   }
// 1311   else
// 1312   {
// 1313     maxItems = 1;
??ZDO_ProcessMgmtLqiReq_1:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
??ZDO_ProcessMgmtLqiReq_2:
        MOVX      @DPTR,A
// 1314   }
// 1315 
// 1316   // Start with the supplied index
// 1317   if ( maxItems > StartIndex )
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R0
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_3 & 0xFFFF
// 1318   {
// 1319     numItems = maxItems - StartIndex;
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R0
        MOV       ?V1,A
// 1320 
// 1321     // limit the size of the list
// 1322     if ( numItems > ZDO_MAX_LQI_ITEMS )
        CLR       C
        SUBB      A,#0x4
        JC        ??ZDO_ProcessMgmtLqiReq_4
// 1323     {
// 1324       numItems = ZDO_MAX_LQI_ITEMS;
        MOV       ?V1,#0x3
// 1325     }
// 1326     
// 1327     // Allocate the memory to build the table
// 1328     table = (ZDP_MgmtLqiItem_t*)osal_mem_alloc( (short)
// 1329               ( numItems * sizeof( ZDP_MgmtLqiItem_t ) ) );
??ZDO_ProcessMgmtLqiReq_4:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V1
        MOV       B,#0x1a
        MUL       AB
        MOV       R2,A
        MOV       R3,B
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine39 & 0xFFFF
// 1330 
// 1331     if ( table != NULL )
??CrossCallReturnLabel_67:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_386:
        JNZ       $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_5 & 0xFFFF
// 1332     {
// 1333       x = 0;
        MOV       ?V5,#0x0
// 1334       item = table;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine114 & 0xFFFF
// 1335       index = StartIndex;
??CrossCallReturnLabel_181:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       ?V0,A
        LJMP      ??ZDO_ProcessMgmtLqiReq_6 & 0xFFFF
// 1336 
// 1337       // Loop through associated items and build list
// 1338       for ( ; x < numItems; x++ )
// 1339       {
// 1340         if ( index < aItems )
// 1341         {
// 1342           // get next associated device
// 1343           aDevice = AssocFindDevice( index++ );
// 1344 
// 1345           // set basic fields
// 1346           item->panID   = _NIB.nwkPanId;
// 1347           osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1348           item->nwkAddr = aDevice->shortAddr;
// 1349           item->permit  = ZDP_MGMT_BOOL_UNKNOWN;
// 1350           item->depth   = 0xFF;
// 1351           item->lqi     = aDevice->linkInfo.rxLqi;
// 1352 
// 1353           // set extented address
// 1354           nwkEntry.user    = ADDRMGR_USER_DEFAULT;
// 1355           nwkEntry.nwkAddr = aDevice->shortAddr;
// 1356 
// 1357           if ( AddrMgrEntryLookupNwk( &nwkEntry ) == TRUE )
// 1358           {
// 1359             osal_cpyExtAddr( item->extAddr, nwkEntry.extAddr );
// 1360           }
// 1361           else
// 1362           {
// 1363             osal_memset( item->extAddr, 0xFF, Z_EXTADDR_LEN );
??ZDO_ProcessMgmtLqiReq_7:
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       R1,#-0x1
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 1364           }
// 1365 
// 1366           // use association info to set other fields
// 1367           if ( aDevice->nodeRelation == PARENT )
??ZDO_ProcessMgmtLqiReq_8:
        MOV       A,?V6
        ADD       A,#0x4
        MOV       R0,A
        CLR       A
        ADDC      A,?V7
        MOV       R1,A
        MOV       A,R6
        ADD       A,#0x15
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x14
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        JNZ       ??ZDO_ProcessMgmtLqiReq_9
// 1368           {
// 1369             if (  aDevice->shortAddr == 0 )
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_387:
        MOV       DPL,R4
        MOV       DPH,R5
        JNZ       ??ZDO_ProcessMgmtLqiReq_10
// 1370             {
// 1371               item->devType = ZDP_MGMT_DT_COORD;
        CLR       A
        MOVX      @DPTR,A
// 1372               item->depth = 0;
        LCALL     ?Subroutine141 & 0xFFFF
// 1373             }
??CrossCallReturnLabel_239:
        CLR       A
        SJMP      ??ZDO_ProcessMgmtLqiReq_11
// 1374             else
// 1375             {
// 1376               item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_10:
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1377               item->depth = _NIB.nodeDepth - 1;
        MOV       DPTR,#_NIB + 52
        MOVX      A,@DPTR
        DEC       A
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine141 & 0xFFFF
// 1378             }
// 1379 
// 1380             item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1381             item->relation = ZDP_MGMT_REL_PARENT;
// 1382           }
??CrossCallReturnLabel_240:
        POP       A
          CFI CFA_SP SP+0
??ZDO_ProcessMgmtLqiReq_11:
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_549:
        MOV       A,#0x2
        LCALL     ?Subroutine36 & 0xFFFF
??CrossCallReturnLabel_58:
        CLR       A
        SJMP      ??ZDO_ProcessMgmtLqiReq_12
// 1383           else
// 1384           {
// 1385             // If not parent, then it's a child
// 1386             item->depth = _NIB.nodeDepth + 1;
??ZDO_ProcessMgmtLqiReq_9:
        MOV       DPTR,#_NIB + 52
        MOVX      A,@DPTR
        INC       A
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_241:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine45 & 0xFFFF
// 1387 
// 1388             if ( aDevice->nodeRelation < CHILD_FFD )
??CrossCallReturnLabel_73:
        CLR       C
        SUBB      A,#0x3
        MOV       DPL,R4
        MOV       DPH,R5
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_13 & 0xFFFF
// 1389             {
// 1390               item->devType = ZDP_MGMT_DT_ENDDEV;
        MOV       A,#0x2
        LCALL     ?Subroutine45 & 0xFFFF
// 1391 
// 1392               if ( aDevice->nodeRelation == CHILD_RFD )
// 1393               {
// 1394                 item->rxOnIdle = FALSE;
// 1395               }
// 1396               else
// 1397               {
// 1398                 item->rxOnIdle = TRUE;
// 1399               }
// 1400             }
??CrossCallReturnLabel_74:
        XRL       A,#0x1
        JNZ       $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_14 & 0xFFFF
// 1401             else
// 1402             {
// 1403               item->devType = ZDP_MGMT_DT_ROUTER;
// 1404 
// 1405               if ( aDevice->nodeRelation == CHILD_FFD )
// 1406               {
// 1407                 item->rxOnIdle = FALSE;
// 1408               }
// 1409               else
// 1410               {
// 1411                 item->rxOnIdle = TRUE;
??ZDO_ProcessMgmtLqiReq_15:
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,#0x1
// 1412               }
??ZDO_ProcessMgmtLqiReq_16:
        LCALL     ?Subroutine36 & 0xFFFF
// 1413             }
// 1414 
// 1415             item->relation = ZDP_MGMT_REL_CHILD;
??CrossCallReturnLabel_59:
        MOV       A,#0x1
??ZDO_ProcessMgmtLqiReq_12:
        MOVX      @DPTR,A
// 1416           }
// 1417 
// 1418           item++;
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDO_ProcessMgmtLqiReq_17
        INC       R7
??ZDO_ProcessMgmtLqiReq_17:
        INC       ?V5
??ZDO_ProcessMgmtLqiReq_6:
        MOV       A,?V5
        CLR       C
        SUBB      A,?V1
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_18 & 0xFFFF
        MOV       A,?V0
        CLR       C
        SUBB      A,?V4
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_19 & 0xFFFF
        ; Setup parameters for call to function AssocFindDevice
        MOV       R2,?V0
        MOV       R3,#0x0
        LCALL     `??AssocFindDevice::?relay`; Banked call to: AssocFindDevice
        MOV       ?V6,R2
        MOV       ?V7,R3
        INC       ?V0
        MOV       DPTR,#_NIB + 33
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_25:
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_435:
        MOV       A,R6
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine23 & 0xFFFF
??CrossCallReturnLabel_32:
        LCALL     ?Subroutine141 & 0xFFFF
??CrossCallReturnLabel_242:
        MOV       A,#-0x1
        LCALL     ?Subroutine46 & 0xFFFF
??CrossCallReturnLabel_77:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_253:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_436:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_411:
        MOV       A,R6
        ADD       A,#0xa
        MOV       ?V2,A
        CLR       A
        ADDC      A,R7
        MOV       ?V3,A
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV       A,R1
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_7 & 0xFFFF
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LJMP      ??ZDO_ProcessMgmtLqiReq_8 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_13:
        MOV       A,#0x1
        LCALL     ?Subroutine45 & 0xFFFF
??CrossCallReturnLabel_75:
        XRL       A,#0x3
        JZ        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_15 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_14:
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        LJMP      ??ZDO_ProcessMgmtLqiReq_16 & 0xFFFF
// 1419         }
// 1420         else
// 1421         {
// 1422           if ( StartIndex <= aItems )
??ZDO_ProcessMgmtLqiReq_19:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V4
        CLR       C
        SUBB      A,R0
        JC        ??ZDO_ProcessMgmtLqiReq_20
// 1423             // Start with 1st neighbor
// 1424             index = 0;
        MOV       ?V0,#0x0
        SJMP      ??ZDO_ProcessMgmtLqiReq_21
// 1425           else
// 1426             // Start with >1st neighbor
// 1427             index = StartIndex - aItems;
??ZDO_ProcessMgmtLqiReq_20:
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V4
        MOV       ?V0,A
        SJMP      ??ZDO_ProcessMgmtLqiReq_21
// 1428           break;
// 1429         }
// 1430       }
// 1431 
// 1432       // Loop through neighbor items and finish list
// 1433       for ( ; x < numItems; x++ )
// 1434       {
// 1435         // Add next neighbor table item
// 1436         NLME_GetRequest( nwkNeighborTable, index++, &entry );
// 1437 
// 1438         // set ZDP_MgmtLqiItem_t fields
// 1439         item->panID    = entry.panId;
// 1440         osal_cpyExtAddr( item->extPanID, _NIB.extendedPANID );
// 1441         osal_cpyExtAddr( item->extAddr, entry.neighborExtAddr);
// 1442         item->nwkAddr  = entry.neighborAddress;
// 1443 
// 1444         if ( ZG_DEVICE_RTR_TYPE )
// 1445         {
// 1446           item->rxOnIdle = ZDP_MGMT_BOOL_UNKNOWN;
// 1447           item->relation = ZDP_MGMT_REL_UNKNOWN;
// 1448           item->depth    = 0xFF;
// 1449         }
// 1450         else
// 1451         {
// 1452           //end devices knows this for sure
// 1453           item->rxOnIdle = ZDP_MGMT_BOOL_RECEIVER_ON;
??ZDO_ProcessMgmtLqiReq_22:
        MOV       DPL,?V2
        MOV       DPH,?V3
        CLR       A
        LCALL     ?Subroutine24 & 0xFFFF
// 1454           item->relation = ZDP_MGMT_REL_PARENT;
??CrossCallReturnLabel_35:
        MOVX      @DPTR,A
// 1455           item->depth = _NIB.nodeDepth - 1;
        MOV       DPTR,#_NIB + 52
        MOVX      A,@DPTR
        DEC       A
        MOV       DPL,R2
        MOV       DPH,R3
// 1456         }
??ZDO_ProcessMgmtLqiReq_23:
        LCALL     ?Subroutine23 & 0xFFFF
// 1457         item->permit   = ZDP_MGMT_BOOL_UNKNOWN;
// 1458         item->lqi      = entry.linkInfo.rxLqi;
??CrossCallReturnLabel_33:
        MOV       A,#0x22
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine146 & 0xFFFF
??CrossCallReturnLabel_254:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 1459 
// 1460         if ( item->nwkAddr == 0 )
        MOV       A,R6
        ADD       A,#0x14
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_388:
        MOV       DPL,R2
        MOV       DPH,R3
        JNZ       ??ZDO_ProcessMgmtLqiReq_24
// 1461         {
// 1462           item->devType = ZDP_MGMT_DT_COORD;
        CLR       A
        SJMP      ??ZDO_ProcessMgmtLqiReq_25
// 1463         }
// 1464         else
// 1465         {
// 1466           item->devType = ZDP_MGMT_DT_ROUTER;
??ZDO_ProcessMgmtLqiReq_24:
        MOV       A,#0x1
??ZDO_ProcessMgmtLqiReq_25:
        MOVX      @DPTR,A
// 1467         }
// 1468 
// 1469         item++;
        MOV       A,R6
        ADD       A,#0x1a
        MOV       R6,A
        JNC       ??ZDO_ProcessMgmtLqiReq_26
        INC       R7
??ZDO_ProcessMgmtLqiReq_26:
        INC       ?V5
??ZDO_ProcessMgmtLqiReq_18:
        MOV       A,?V5
        CLR       C
        SUBB      A,?V1
        JNC       ??ZDO_ProcessMgmtLqiReq_5
??ZDO_ProcessMgmtLqiReq_21:
        ; Setup parameters for call to function NLME_GetRequest
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,?V0
        MOV       R3,#0x0
        MOV       R1,#-0x79
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        INC       ?V0
        MOV       A,#0x1d
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine19 & 0xFFFF
??CrossCallReturnLabel_26:
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x15
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,R6
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       A,R6
        ADD       A,#0x12
        MOV       R0,A
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       A,#0x13
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_472:
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine40 & 0xFFFF
??CrossCallReturnLabel_360:
        MOV       A,R6
        ADD       A,#0x18
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        MOV       A,R6
        ADD       A,#0x16
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,R6
        ADD       A,#0x15
        MOV       ?V2,A
        CLR       A
        ADDC      A,R7
        MOV       ?V3,A
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessMgmtLqiReq_27
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??ZDO_ProcessMgmtLqiReq_22 & 0xFFFF
??ZDO_ProcessMgmtLqiReq_27:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOV       A,#0x2
        LCALL     ?Subroutine24 & 0xFFFF
// 1470       }
// 1471     }
// 1472   }
??CrossCallReturnLabel_36:
        INC       A
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_550:
        MOV       A,#-0x1
        LJMP      ??ZDO_ProcessMgmtLqiReq_23 & 0xFFFF
// 1473   else
// 1474   {
// 1475     numItems = 0;
??ZDO_ProcessMgmtLqiReq_3:
        MOV       ?V1,#0x0
// 1476   }
// 1477 
// 1478   // Send response
// 1479   ZDP_MgmtLqiRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxItems,
// 1480                   StartIndex, numItems, table, false );
??ZDO_ProcessMgmtLqiReq_5:
        ; Setup parameters for call to function ZDP_MgmtLqiRsp
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 59)
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 61)
        MOV       A,?V1
        MOV       ?V0,A
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 62)
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_497:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 63)
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,#0x0
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_170:
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_118:
        LCALL     `??ZDP_MgmtLqiRsp::?relay`; Banked call to: ZDP_MgmtLqiRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 58)
// 1481 
// 1482   if ( table )
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_389:
        JZ        ??ZDO_ProcessMgmtLqiReq_28
// 1483   {
// 1484     osal_mem_free( table );
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 1485   }
??CrossCallReturnLabel_473:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1486 }
??ZDO_ProcessMgmtLqiReq_28:
        MOV       A,#0x2a
        LJMP      ??Subroutine200_0 & 0xFFFF
          CFI EndBlock cfiBlock122

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine146:
          CFI Block cfiCond123 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_253
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_254
          CFI (cfiCond124) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond124) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond124) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond124) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond124) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond124) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond124) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond124) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond124) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond124) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond124) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker125 Using cfiCommon1
          CFI (cfiPicker125) NoFunction
          CFI (cfiPicker125) Picker
        MOV       A,R6
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiPicker125

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine141:
          CFI Block cfiCond126 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_239
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond127) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond127) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond127) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond127) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond127) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond127) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond127) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond127) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond127) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond127) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond127) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond128) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond128) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond128) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond128) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond128) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond128) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond128) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond128) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond128) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond128) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond128) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_242
          CFI (cfiCond129) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond129) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond129) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond129) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond129) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond129) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond129) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond129) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond129) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond129) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond129) CFA_SP SP+-2
          CFI (cfiCond129) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker130 Using cfiCommon1
          CFI (cfiPicker130) NoFunction
          CFI (cfiPicker130) Picker
        MOV       A,R6
        ADD       A,#0x18
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiPicker130

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine39:
          CFI Block cfiCond131 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_65
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond132) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond132) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond132) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond132) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond132) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond132) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond132) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond132) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond132) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond132) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond132) CFA_SP SP+-2
          CFI (cfiCond132) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond133) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond133) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond133) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond133) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond133) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond133) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond133) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond133) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond133) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond133) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond133) CFA_SP SP+-2
          CFI (cfiCond133) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker134 Using cfiCommon1
          CFI (cfiPicker134) NoFunction
          CFI (cfiPicker134) Picker
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       A,#0x2
        RET
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiPicker134

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine36:
          CFI Block cfiCond135 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_58
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond136 Using cfiCommon0
          CFI (cfiCond136) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond136) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond136) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond136) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond136) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond136) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond136) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond136) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond136) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond136) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond136) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond136) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond136) CFA_SP SP+-2
          CFI (cfiCond136) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker137 Using cfiCommon1
          CFI (cfiPicker137) NoFunction
          CFI (cfiPicker137) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x16
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond135
          CFI EndBlock cfiCond136
          CFI EndBlock cfiPicker137

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine23:
          CFI Block cfiCond138 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_32
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond139 Using cfiCommon0
          CFI (cfiCond139) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond139) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond139) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond139) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond139) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond139) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond139) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond139) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond139) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond139) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond139) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond139) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond139) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond139) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond139) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond139) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond139) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond139) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond139) CFA_SP SP+-2
          CFI (cfiCond139) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker140 Using cfiCommon1
          CFI (cfiPicker140) NoFunction
          CFI (cfiPicker140) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x17
        MOV       DPL,A
        CLR       A
        ADDC      A,R7
        MOV       DPH,A
        MOV       A,#0x2
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond138
          CFI EndBlock cfiCond139
          CFI EndBlock cfiPicker140

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine19:
          CFI Block cfiCond141 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_26
          CFI (cfiCond142) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond142) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond142) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond142) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond142) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond142) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond142) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond142) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond142) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond142) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond142) CFA_SP SP+-2
          CFI (cfiCond142) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker143 Using cfiCommon1
          CFI (cfiPicker143) NoFunction
          CFI (cfiPicker143) Picker
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_511:
        MOV       DPL,R6
        MOV       DPH,R7
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        ; Setup parameters for call to function sAddrExtCpy
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,#(_NIB + 53) & 0xff
        MOV       R5,#((_NIB + 53) >> 8) & 0xff
        LCALL     ?Subroutine179 & 0xFFFF
??CrossCallReturnLabel_300:
        RET
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiPicker143

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine179:
          CFI Block cfiCond144 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_301, ??CrossCallReturnLabel_102
          CFI (cfiCond145) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond145) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond145) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond145) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond145) CFA_SP SP+-4
          CFI (cfiCond145) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond146) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond146) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond146) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond146) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond146) CFA_SP SP+-2
          CFI (cfiCond146) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_25
          CFI (cfiCond147) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond147) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond147) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond147) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond147) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond147) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond147) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond147) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond147) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond147) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond147) CFA_SP SP+-4
          CFI (cfiCond147) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_300, ??CrossCallReturnLabel_26
          CFI (cfiCond148) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond148) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond148) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond148) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond148) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond148) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond148) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond148) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond148) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond148) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond148) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond148) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond148) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond148) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond148) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond148) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond148) CFA_SP SP+-4
          CFI (cfiCond148) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiPicker149 Using cfiCommon1
          CFI (cfiPicker149) NoFunction
          CFI (cfiPicker149) Picker
        MOV       A,R6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        RET
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiPicker149
// 1487 
// 1488 /*********************************************************************
// 1489  * @fn          ZDO_ProcessMgmtNwkDiscReq
// 1490  *
// 1491  * @brief       This function handles parsing the incoming Management
// 1492  *              Network Discover request and starts the request.
// 1493  *
// 1494  * @param       inMsg - incoming message (request)
// 1495  *
// 1496  * @return      none
// 1497  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1498 void ZDO_ProcessMgmtNwkDiscReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtNwkDiscReq:
          CFI Block cfiBlock150 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
        CODE
// 1499 {
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscReq2
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtNwkDiscReq, NLME_NwkDiscTerm
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 7
        MOV       A,#-0x7
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        LCALL     ?Subroutine121 & 0xFFFF
// 1500   NLME_ScanFields_t scan;
// 1501   uint8             index;
// 1502   uint8             *msg;
// 1503 
// 1504   msg = inMsg->asdu;
??CrossCallReturnLabel_201:
        LCALL     ?Subroutine89 & 0xFFFF
// 1505   scan.channels = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_146:
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
        MOV       A,R4
        MOV       R2,A
        MOV       A,R5
        MOV       R3,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?XSTORE_R0123
// 1506   msg += 4;
// 1507   scan.duration = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine34 & 0xFFFF
// 1508   index         = *msg;
??CrossCallReturnLabel_54:
        MOV       R0,A
// 1509   scan.scanType = ZMAC_ACTIVE_SCAN;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1510   scan.scanApp  = NLME_DISC_SCAN;
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1511 
// 1512   // Save off the information to be used for the response
// 1513   zdappMgmtNwkDiscReqInProgress          = true;
        MOV       DPTR,#zdappMgmtNwkDiscReqInProgress
        MOVX      @DPTR,A
// 1514   zdappMgmtNwkDiscRspAddr.addrMode       = Addr16Bit;
        MOV       DPTR,#zdappMgmtNwkDiscRspAddr + 8
        INC       A
        LCALL     ?Subroutine47 & 0xFFFF
// 1515   zdappMgmtNwkDiscRspAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_79:
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_474:
        MOV       DPTR,#zdappMgmtNwkDiscRspAddr
        LCALL     ?Subroutine40 & 0xFFFF
// 1516   zdappMgmtNwkDiscStartIndex             = index;
??CrossCallReturnLabel_361:
        MOV       A,R0
        MOV       DPTR,#zdappMgmtNwkDiscStartIndex
        MOVX      @DPTR,A
// 1517   zdappMgmtNwkDiscRspTransSeq            = inMsg->TransSeq;
        LCALL     ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_349:
        MOVX      A,@DPTR
        MOV       DPTR,#zdappMgmtNwkDiscRspTransSeq
        MOVX      @DPTR,A
// 1518 
// 1519   if ( NLME_NwkDiscReq2( &scan ) != ZSuccess )
        ; Setup parameters for call to function NLME_NwkDiscReq2
        MOV       R2,?XSP + 0
        MOV       R3,?XSP + 1
        LCALL     `??NLME_NwkDiscReq2::?relay`; Banked call to: NLME_NwkDiscReq2
        MOV       A,R1
        JZ        ??ZDO_ProcessMgmtNwkDiscReq_0
// 1520   {
// 1521     NLME_NwkDiscTerm();
        ; Setup parameters for call to function NLME_NwkDiscTerm
        LCALL     `??NLME_NwkDiscTerm::?relay`; Banked call to: NLME_NwkDiscTerm
// 1522 
// 1523     // zdappMgmtNwkDiscReqInProgress will be reset in the confirm callback
// 1524   }
// 1525 }
??ZDO_ProcessMgmtNwkDiscReq_0:
        MOV       A,#0x7
        LJMP      ??Subroutine202_0 & 0xFFFF
          CFI EndBlock cfiBlock150

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine128:
          CFI Block cfiCond151 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_349
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond152) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond152) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond152) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond152) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond152) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond152) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond152) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond152) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond152) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond152) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond152) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker153 Using cfiCommon1
          CFI (cfiPicker153) NoFunction
          CFI (cfiPicker153) Picker
        MOV       A,?V0
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiPicker153
        REQUIRE ??Subroutine208_0
        ; // Fall through to label ??Subroutine208_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine208_0:
          CFI Block cfiCond154 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_348
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond155) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond155) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond155) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond155) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond155) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond155) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond155) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond155) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond155) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond155) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond155) CFA_SP SP+-2
          CFI (cfiCond155) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond156) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond156) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond156) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond156) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond156) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond156) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond156) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond156) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond156) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond156) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond156) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker157 Using cfiCommon1
          CFI (cfiPicker157) NoFunction
          CFI (cfiPicker157) Picker
        LCALL     ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_354:
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiPicker157

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine40:
          CFI Block cfiCond158 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_356
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond159) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond159) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond159) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond159) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond159) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond159) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond159) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond159) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond159) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond159) CFA_SP SP+-2
          CFI (cfiCond159) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond160) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond160) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond160) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond160) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond160) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond160) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond160) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond160) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond160) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond160) CFA_SP SP+-2
          CFI (cfiCond160) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond161) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond161) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond161) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond161) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond161) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond161) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond161) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond161) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond161) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond161) CFA_SP SP+-2
          CFI (cfiCond161) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond162) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond162) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond162) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond162) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond162) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond162) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond162) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond162) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond162) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond162) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond162) CFA_SP SP+-2
          CFI (cfiCond162) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond163) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond163) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond163) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond163) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond163) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond163) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond163) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond163) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond163) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond163) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond163) CFA_SP SP+-2
          CFI (cfiCond163) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond164) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond164) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond164) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond164) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond164) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond164) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond164) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond164) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond164) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond164) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond164) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond164) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond164) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond164) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond164) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond164) CFA_SP SP+-2
          CFI (cfiCond164) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ZDO_ProcessParentAnnce
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond165) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond165) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond165) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond165) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond165) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond165) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond165) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond165) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond165) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond165) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond165) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond165) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond165) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond165) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond165) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond165) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond165) CFA_SP SP+-2
          CFI (cfiCond165) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond166) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond166) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond166) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond166) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond166) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond166) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond166) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond166) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond166) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond166) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond166) CFA_SP SP+-2
          CFI (cfiCond166) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker167 Using cfiCommon1
          CFI (cfiPicker167) NoFunction
          CFI (cfiPicker167) Picker
        MOV       A,R2
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiPicker167
        REQUIRE ??Subroutine209_0
        ; // Fall through to label ??Subroutine209_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine209_0:
          CFI Block cfiCond168 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_355
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function ZDO_UpdateNwkStatus
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond169) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond169) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond169) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond169) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond169) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond169) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond169) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond169) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond169) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond169) CFA_SP SP+-2
          CFI (cfiCond169) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond170) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond170) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond170) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond170) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond170) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond170) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond170) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond170) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond170) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond170) CFA_SP SP+-2
          CFI (cfiCond170) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond171) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond171) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond171) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond171) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond171) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond171) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond171) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond171) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond171) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond171) CFA_SP SP+-2
          CFI (cfiCond171) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond172) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond172) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond172) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond172) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond172) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond172) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond172) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond172) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond172) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond172) CFA_SP SP+-2
          CFI (cfiCond172) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond173) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond173) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond173) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond173) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond173) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond173) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond173) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond173) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond173) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond173) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond173) CFA_SP SP+-2
          CFI (cfiCond173) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_361
          CFI (cfiCond174) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond174) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond174) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond174) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond174) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond174) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond174) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond174) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond174) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond174) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond174) CFA_SP SP+-2
          CFI (cfiCond174) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond175) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond175) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond175) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond175) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond175) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond175) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond175) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond175) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond175) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond175) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond175) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond175) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond175) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond175) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond175) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond175) CFA_SP SP+-2
          CFI (cfiCond175) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ZDO_ProcessParentAnnce
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond176) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond176) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond176) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond176) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond176) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond176) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond176) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond176) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond176) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond176) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond176) CFA_SP SP+-2
          CFI (cfiCond176) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond177) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond177) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond177) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond177) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond177) CFA_SP SP+-2
          CFI (cfiCond177) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker178 Using cfiCommon1
          CFI (cfiPicker178) NoFunction
          CFI (cfiPicker178) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiPicker178
// 1526 
// 1527 #if defined ( ZDO_MGMT_NWKDISC_RESPONSE )
// 1528 /*********************************************************************
// 1529  * @fn          ZDO_FinishProcessingMgmtNwkDiscReq
// 1530  *
// 1531  * @brief       This function finishes the processing of the Management
// 1532  *              Network Discover Request and generates the response.
// 1533  *
// 1534  *   Note:      This function will limit the number of items returned
// 1535  *              to ZDO_MAX_NWKDISC_ITEMS items.
// 1536  *
// 1537  * @param       ResultCountSrcAddr - source of the request
// 1538  * @param       msg - pointer to incoming message
// 1539  * @param       SecurityUse -
// 1540  *
// 1541  * @return      none
// 1542  */
// 1543 void ZDO_FinishProcessingMgmtNwkDiscReq( void )
// 1544 {
// 1545   byte count, i, ResultCount = 0;
// 1546   networkDesc_t *newDesc = NULL, *pList, *NetworkList;
// 1547 
// 1548   NetworkList = nwk_getNwkDescList();
// 1549 
// 1550   // Count the number of nwk descriptors in the list
// 1551   pList = nwk_getNwkDescList();
// 1552   while (pList)
// 1553   {
// 1554     ResultCount++;
// 1555     pList = pList->nextDesc;
// 1556   }
// 1557 
// 1558   if ( ZSTACK_ROUTER_BUILD )
// 1559   {
// 1560     // Look for my PanID.
// 1561     pList = nwk_getNwkDescList();
// 1562     while ( pList )
// 1563     {
// 1564       if ( pList->panId == _NIB.nwkPanId )
// 1565       {
// 1566         break;
// 1567       }
// 1568 
// 1569 
// 1570       if ( !pList->nextDesc )
// 1571       {
// 1572         break;
// 1573       }
// 1574       pList = pList->nextDesc;
// 1575     }
// 1576 
// 1577 
// 1578     // If my Pan not present (query to a star network ZC or an isolated ZR?),
// 1579     // prepend it.
// 1580     if ( !pList || (pList->panId != _NIB.nwkPanId) )
// 1581     {
// 1582       newDesc = (networkDesc_t *)osal_mem_alloc( sizeof( networkDesc_t ) );
// 1583       if ( newDesc )
// 1584       {
// 1585         byte pJoin;
// 1586 
// 1587         newDesc->panId = _NIB.nwkPanId;
// 1588         newDesc->logicalChannel = _NIB.nwkLogicalChannel;
// 1589         newDesc->version = NLME_GetProtocolVersion();
// 1590         newDesc->stackProfile = zgStackProfile;
// 1591 
// 1592         //Extended PanID
// 1593         osal_cpyExtAddr( newDesc->extendedPANID, _NIB.extendedPANID);
// 1594 
// 1595         ZMacGetReq( ZMacAssociationPermit, &pJoin );
// 1596         newDesc->chosenRouter = ((pJoin) ? ZDAppNwkAddr.addr.shortAddr :
// 1597                                            INVALID_NODE_ADDR);
// 1598 
// 1599         newDesc->nextDesc = NetworkList;
// 1600         NetworkList = newDesc;
// 1601         ResultCount++;
// 1602       }
// 1603     }
// 1604   }
// 1605 
// 1606   // Calc the count and apply a max count.
// 1607   if ( zdappMgmtNwkDiscStartIndex > ResultCount )
// 1608   {
// 1609     count = 0;
// 1610   }
// 1611   else
// 1612   {
// 1613     count = ResultCount - zdappMgmtNwkDiscStartIndex;
// 1614     if ( count > ZDO_MAX_NWKDISC_ITEMS )
// 1615     {
// 1616       count = ZDO_MAX_NWKDISC_ITEMS;
// 1617     }
// 1618 
// 1619     // Move the list pointer up to the start index.
// 1620     for ( i = 0; i < zdappMgmtNwkDiscStartIndex; i++ )
// 1621     {
// 1622       NetworkList = NetworkList->nextDesc;
// 1623     }
// 1624   }
// 1625 
// 1626   ZDP_MgmtNwkDiscRsp( zdappMgmtNwkDiscRspTransSeq,
// 1627                      &zdappMgmtNwkDiscRspAddr, ZSuccess, ResultCount,
// 1628                       zdappMgmtNwkDiscStartIndex,
// 1629                       count,
// 1630                       NetworkList,
// 1631                       false );
// 1632 
// 1633   if ( ZSTACK_ROUTER_BUILD )
// 1634   {
// 1635     if ( newDesc != NULL )
// 1636     {
// 1637       osal_mem_free( newDesc );
// 1638     }
// 1639   }
// 1640 
// 1641   NLME_NwkDiscTerm();
// 1642 }
// 1643 #endif
// 1644 
// 1645 /*********************************************************************
// 1646  * @fn          ZDO_ProcessMgmtRtgReq
// 1647  *
// 1648  * @brief       This function finishes the processing of the Management
// 1649  *              Routing Request and generates the response.
// 1650  *
// 1651  *   Note:      This function will limit the number of items returned
// 1652  *              to ZDO_MAX_RTG_ITEMS items.
// 1653  *
// 1654  * @param       inMsg - incoming message (request)
// 1655  *
// 1656  * @return      none
// 1657  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1658 void ZDO_ProcessMgmtRtgReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtRtgReq:
          CFI Block cfiBlock179 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtRtgReq
        CODE
// 1659 {
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, NLME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, ZDP_MgmtRtgRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtRtgReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 17, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 17, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
        MOV       ?V6,R2
        MOV       ?V7,R3
// 1660   byte x;
// 1661   byte maxNumItems;
// 1662   byte numItems = 0;
        MOV       R6,#0x0
// 1663   uint8 *pBuf = NULL;
        MOV       ?V4,R6
        MOV       ?V5,R6
// 1664   rtgItem_t *pList;
// 1665   uint8 StartIndex = inMsg->asdu[0];
        LCALL     ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_332:
        ADDC      A,?V7
        MOV       DPH,A
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_371:
        MOV       ?V0,A
// 1666 
// 1667   // Get the number of table items
// 1668   NLME_GetRequest( nwkNumRoutingTableEntries, 0, &maxNumItems );
        ; Setup parameters for call to function NLME_GetRequest
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x63
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
// 1669 
// 1670   if ( maxNumItems > StartIndex )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V0
        CLR       C
        SUBB      A,R0
        JNC       ??ZDO_ProcessMgmtRtgReq_0
// 1671   {
// 1672     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,?V0
        MOV       R6,A
// 1673 
// 1674     // limit the size of the list
// 1675     if ( numItems > ZDO_MAX_RTG_ITEMS )
        CLR       C
        SUBB      A,#0xb
        JC        ??ZDO_ProcessMgmtRtgReq_1
// 1676     {
// 1677       numItems = ZDO_MAX_RTG_ITEMS;
        MOV       R6,#0xa
// 1678     }
// 1679 
// 1680     // Allocate the memory to build the table
// 1681     pBuf = osal_mem_alloc( (short)(sizeof( rtgItem_t ) * numItems) );
??ZDO_ProcessMgmtRtgReq_1:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        MOV       B,#0x7
        MUL       AB
        MOV       R2,A
        MOV       R3,B
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       ?V4,R2
        MOV       ?V5,R3
// 1682 
// 1683     if ( pBuf != NULL )
        MOV       A,R2
        ORL       A,?V5
        JZ        ??ZDO_ProcessMgmtRtgReq_2
// 1684     {
// 1685       // Convert buffer to list
// 1686       pList = (rtgItem_t *)pBuf;
// 1687 
// 1688       // Loop through items and build list
// 1689       for ( x = 0; x < numItems; x++ )
        MOV       R7,#0x0
        SJMP      ??ZDO_ProcessMgmtRtgReq_3
// 1690       {
// 1691         NLME_GetRequest( nwkRoutingTable, (uint16)(x + StartIndex), (void*)pList );
// 1692 
// 1693         // Remap the status to the RoutingTableList Record Format defined in the ZigBee spec
// 1694         switch( pList->status )
// 1695         {
// 1696           case RT_ACTIVE:
// 1697             pList->status = ZDO_MGMT_RTG_ENTRY_ACTIVE;
// 1698             break;
// 1699 
// 1700           case RT_DISC:
// 1701             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_UNDERWAY;
// 1702             break;
// 1703 
// 1704           case RT_LINK_FAIL:
// 1705             pList->status = ZDO_MGMT_RTG_ENTRY_DISCOVERY_FAILED;
// 1706             break;
// 1707 
// 1708           case RT_INIT:
// 1709           case RT_REPAIR:
// 1710           default:
// 1711             pList->status = ZDO_MGMT_RTG_ENTRY_INACTIVE;
??ZDO_ProcessMgmtRtgReq_4:
        MOV       A,#0x3
??ZDO_ProcessMgmtRtgReq_5:
        MOVX      @DPTR,A
// 1712             break;
// 1713         }
// 1714 
// 1715         // Increment pointer to next record
// 1716         pList++;
        MOV       A,?V2
        ADD       A,#0x7
        MOV       ?V2,A
        JNC       ??ZDO_ProcessMgmtRtgReq_6
        INC       ?V3
??ZDO_ProcessMgmtRtgReq_6:
        INC       R7
??ZDO_ProcessMgmtRtgReq_3:
        MOV       A,R7
        CLR       C
        SUBB      A,R6
        JNC       ??ZDO_ProcessMgmtRtgReq_0
        ; Setup parameters for call to function NLME_GetRequest
        MOV       R4,?V2
        MOV       R5,?V3
        MOV       A,R7
        MOV       R0,?V0
        ADD       A,R0
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        MOV       R1,#-0x75
        LCALL     `??NLME_GetRequest::?relay`; Banked call to: NLME_GetRequest
        MOV       A,?V2
        ADD       A,#0x5
        MOV       DPL,A
        CLR       A
        ADDC      A,?V3
        MOV       DPH,A
        MOVX      A,@DPTR
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_7
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_8
        DEC       A
        JZ        ??ZDO_ProcessMgmtRtgReq_9
        SJMP      ??ZDO_ProcessMgmtRtgReq_4
??ZDO_ProcessMgmtRtgReq_7:
        CLR       A
        SJMP      ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_8:
        MOV       A,#0x1
        SJMP      ??ZDO_ProcessMgmtRtgReq_5
??ZDO_ProcessMgmtRtgReq_9:
        MOV       A,#0x2
        SJMP      ??ZDO_ProcessMgmtRtgReq_5
// 1717       }
// 1718     }
// 1719     else
// 1720     {
// 1721       numItems = 0;
??ZDO_ProcessMgmtRtgReq_2:
        MOV       R6,#0x0
// 1722     }
// 1723   }
// 1724 
// 1725   // Send response
// 1726   ZDP_MgmtRtgRsp( inMsg->TransSeq, &(inMsg->srcAddr), ZSuccess, maxNumItems, StartIndex, numItems,
// 1727                         (rtgItem_t *)pBuf, false );
??ZDO_ProcessMgmtRtgReq_0:
        ; Setup parameters for call to function ZDP_MgmtRtgRsp
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       A,R6
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,#0x0
        MOV       A,?V6
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,?V7
        MOV       R3,A
        MOV       A,?V6
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_219:
        ADDC      A,?V7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_MgmtRtgRsp::?relay`; Banked call to: ZDP_MgmtRtgRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 17)
// 1728 
// 1729   if ( pBuf != NULL )
        MOV       A,?V4
        ORL       A,?V5
        JZ        ??ZDO_ProcessMgmtRtgReq_10
// 1730   {
// 1731     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V4
        MOV       R3,?V5
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1732   }
// 1733 }
??ZDO_ProcessMgmtRtgReq_10:
        MOV       A,#0x1
        LJMP      ??Subroutine200_0 & 0xFFFF
          CFI EndBlock cfiBlock179
// 1734 
// 1735 /*********************************************************************
// 1736  * @fn          ZDO_ProcessMgmtBindReq
// 1737  *
// 1738  * @brief       This function finishes the processing of the Management
// 1739  *              Bind Request and generates the response.
// 1740  *
// 1741  *   Note:      This function will limit the number of items returned
// 1742  *              to ZDO_MAX_BIND_ITEMS items.
// 1743  *
// 1744  * @param       inMsg - incoming message (request)
// 1745  *
// 1746  * @return      none
// 1747  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1748 void ZDO_ProcessMgmtBindReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtBindReq:
          CFI Block cfiBlock180 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
        CODE
// 1749 {
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, ZDP_MgmtBindRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 24, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 24, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtBindReq, APSME_GetRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        MOV       A,#-0xf
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 15)
        ; Saved register size: 15
        ; Auto size: 4
        MOV       A,#-0x4
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
// 1750 #if defined ( REFLECTOR )
// 1751   byte x;
// 1752   uint16 maxNumItems;
// 1753   uint16 numItems;
// 1754   uint8 *pBuf = NULL;
??CrossCallReturnLabel_362:
        MOV       ?V2,#0x0
        MOV       ?V3,#0x0
// 1755   apsBindingItem_t *pList;
// 1756   uint8 StartIndex = inMsg->asdu[0];
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine59 & 0xFFFF
??CrossCallReturnLabel_100:
        MOV       ?V6,A
// 1757   uint8 status;
// 1758 
// 1759   // Get the number of table items
// 1760   APSME_GetRequest( apsNumBindingTableEntries, 0, (byte*)(&maxNumItems) );
        ; Setup parameters for call to function APSME_GetRequest
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        MOV       R2,#0x0
        MOV       R3,#0x0
        MOV       R1,#-0x5d
        LCALL     `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
// 1761 
// 1762   if ( maxNumItems > StartIndex )
        MOV       R2,?V6
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_441:
        CLR       C
        MOV       A,R2
        SUBB      A,R0
        CLR       A
        SUBB      A,R1
        JNC       ??ZDO_ProcessMgmtBindReq_0
// 1763   {
// 1764     numItems = maxNumItems - StartIndex;    // Start at the passed in index
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R2
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        SUBB      A,#0x0
        MOV       R7,A
// 1765   }
// 1766   else
// 1767   {
// 1768     numItems = 0;
// 1769   }
// 1770 
// 1771   // limit the size of the list
// 1772   if ( numItems > ZDO_MAX_BIND_ITEMS )
        CLR       C
        MOV       A,R6
        SUBB      A,#0x4
        MOV       A,R7
        SUBB      A,#0x0
        JC        ??ZDO_ProcessMgmtBindReq_1
// 1773   {
// 1774     numItems = ZDO_MAX_BIND_ITEMS;
        MOV       R6,#0x3
        MOV       R7,#0x0
        SJMP      ??ZDO_ProcessMgmtBindReq_2
// 1775   }
??ZDO_ProcessMgmtBindReq_0:
        MOV       R6,#0x0
// 1776 
// 1777   // Allocate the memory to build the table
// 1778   if ( numItems )
// 1779   {
// 1780     pBuf = osal_mem_alloc( sizeof( apsBindingItem_t ) * numItems );
// 1781     
// 1782     if(pBuf != NULL)
// 1783     {
// 1784     
// 1785       status = ZSuccess;
// 1786 
// 1787       // Convert buffer to list
// 1788       pList = (apsBindingItem_t *)pBuf;
// 1789 
// 1790       // Loop through items and build list
// 1791       for ( x = 0; x < numItems; x++ )
// 1792       {
// 1793         APSME_GetRequest( apsBindingTable, (x + StartIndex), (void*)pList );
// 1794         pList++;
// 1795       }
// 1796     }
// 1797     else
// 1798     {
// 1799       //No memory to allocate response, respond unsupported attribute
// 1800       status = ZApsUnsupportedAttrib;
// 1801       numItems = 0;
// 1802     }
// 1803   }
// 1804   else
// 1805   {
// 1806     status = ZSuccess;
??ZDO_ProcessMgmtBindReq_3:
        MOV       ?V0,#0x0
??ZDO_ProcessMgmtBindReq_4:
        MOV       A,R6
        MOV       R1,A
// 1807   }
// 1808 
// 1809   // Send response
// 1810   ZDP_MgmtBindRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, (byte)maxNumItems, StartIndex,
// 1811                    (byte)numItems, (apsBindingItem_t *)pBuf, false );
??ZDO_ProcessMgmtBindReq_5:
        ; Setup parameters for call to function ZDP_MgmtBindRsp
        MOV       ?V1,#0x0
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 20)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 22)
        MOV       A,R1
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 23)
        MOV       A,?V6
        MOV       ?V1,A
        MOV       R0,#?V1
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 24)
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R5,A
        MOV       R4,?V0
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine108 & 0xFFFF
??CrossCallReturnLabel_171:
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine69 & 0xFFFF
??CrossCallReturnLabel_119:
        LCALL     `??ZDP_MgmtBindRsp::?relay`; Banked call to: ZDP_MgmtBindRsp
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 19)
// 1812 
// 1813   if ( pBuf )
        MOV       A,?V2
        ORL       A,?V3
        JZ        ??ZDO_ProcessMgmtBindReq_6
// 1814   {
// 1815     osal_mem_free( pBuf );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 1816   }
// 1817 #else
// 1818   (void)inMsg;
// 1819 #endif
// 1820 }
??ZDO_ProcessMgmtBindReq_6:
        MOV       A,#0x4
        LJMP      ?Subroutine6 & 0xFFFF
??ZDO_ProcessMgmtBindReq_1:
        MOV       A,R6
        ORL       A,R7
        JZ        ??ZDO_ProcessMgmtBindReq_3
??ZDO_ProcessMgmtBindReq_2:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       A,R2
        MOV       B,#0x15
        MUL       AB
        MOV       R2,A
        MOV       R0,B
        MOV       B,#0x15
        MOV       A,R3
        MUL       AB
        ADD       A,R0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       A,R2
        ORL       A,?V3
        JZ        ??ZDO_ProcessMgmtBindReq_7
        MOV       ?V0,#0x0
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       ?V1,#0x0
??ZDO_ProcessMgmtBindReq_8:
        CLR       C
        MOV       A,?V1
        SUBB      A,R6
        CLR       A
        SUBB      A,R7
        JC        $+5
        LJMP      ??ZDO_ProcessMgmtBindReq_4 & 0xFFFF
        ; Setup parameters for call to function APSME_GetRequest
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       R0,?V6
        MOV       A,?V1
        ADD       A,R0
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        MOV       R1,#-0x5e
        LCALL     `??APSME_GetRequest::?relay`; Banked call to: APSME_GetRequest
        MOV       A,?V4
        ADD       A,#0x15
        MOV       ?V4,A
        JNC       ??ZDO_ProcessMgmtBindReq_9
        INC       ?V5
??ZDO_ProcessMgmtBindReq_9:
        INC       ?V1
        SJMP      ??ZDO_ProcessMgmtBindReq_8
??ZDO_ProcessMgmtBindReq_7:
        MOV       ?V0,#-0x4b
        MOV       R1,#0x0
        LJMP      ??ZDO_ProcessMgmtBindReq_5 & 0xFFFF
          CFI EndBlock cfiBlock180

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine108:
          CFI Block cfiCond181 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_170
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_171
          CFI (cfiCond182) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond182) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond182) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond182) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond182) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond182) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond182) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond182) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond182) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond182) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond182) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond182) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond182) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond182) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond182) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond182) CFA_SP SP+-2
          CFI (cfiCond182) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker183 Using cfiCommon1
          CFI (cfiPicker183) NoFunction
          CFI (cfiPicker183) Picker
        MOVX      A,@DPTR
        ADD       A,#0x2
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        RET
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiPicker183

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine69:
          CFI Block cfiCond184 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond185) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond185) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond185) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond185) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond185) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond185) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond185) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond185) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond185) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond185) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond185) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond185) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond185) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond185) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond185) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond185) CFA_SP SP+-2
          CFI (cfiCond185) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiPicker186 Using cfiCommon1
          CFI (cfiPicker186) NoFunction
          CFI (cfiPicker186) Picker
        LCALL     ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_688:
        LCALL     ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_352:
        LCALL     ??Subroutine235_0 & 0xFFFF
??CrossCallReturnLabel_536:
        MOV       R1,A
        RET
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiPicker186

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine59:
          CFI Block cfiCond187 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_99
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond188) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond188) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond188) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond188) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond188) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond188) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond188) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond188) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond188) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond188) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond188) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond188) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond188) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond188) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond188) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond188) CFA_SP SP+-2
          CFI (cfiCond188) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker189 Using cfiCommon1
          CFI (cfiPicker189) NoFunction
          CFI (cfiPicker189) Picker
        LCALL     ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_687:
        LCALL     ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_642:
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?Subroutine161 & 0xFFFF
??CrossCallReturnLabel_277:
        RET
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiPicker189

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine161:
          CFI Block cfiCond190 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_133
          CFI (cfiCond191) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond191) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond191) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond191) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond191) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond191) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond191) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond191) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond191) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond191) CFA_SP SP+-4
          CFI (cfiCond191) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond192 Using cfiCommon0
          CFI (cfiCond192) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond192) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_91
          CFI (cfiCond192) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond192) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond192) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond192) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond192) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond192) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond192) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond192) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond192) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond192) CFA_SP SP+-4
          CFI (cfiCond192) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond193 Using cfiCommon0
          CFI (cfiCond193) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond193) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_92
          CFI (cfiCond193) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond193) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond193) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond193) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond193) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond193) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond193) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond193) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond193) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond193) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond193) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond193) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond193) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond193) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond193) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond193) CFA_SP SP+-4
          CFI (cfiCond193) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_93
          CFI (cfiCond194) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond194) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond194) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond194) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond194) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond194) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond194) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond194) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond194) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond194) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond194) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond194) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond194) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond194) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond194) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond194) CFA_SP SP+-4
          CFI (cfiCond194) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_83
          CFI (cfiCond195) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond195) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond195) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond195) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond195) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond195) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond195) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond195) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond195) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond195) CFA_SP SP+-4
          CFI (cfiCond195) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_84
          CFI (cfiCond196) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond196) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond196) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond196) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond196) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond196) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond196) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond196) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond196) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond196) CFA_SP SP+-4
          CFI (cfiCond196) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_85
          CFI (cfiCond197) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond197) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond197) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond197) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond197) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond197) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond197) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond197) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond197) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond197) CFA_SP SP+-4
          CFI (cfiCond197) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_86
          CFI (cfiCond198) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond198) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond198) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond198) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond198) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond198) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond198) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond198) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond198) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond198) CFA_SP SP+-4
          CFI (cfiCond198) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_99
          CFI (cfiCond199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond199) CFA_SP SP+-4
          CFI (cfiCond199) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_100
          CFI (cfiCond200) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond200) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond200) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond200) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond200) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond200) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond200) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond200) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond200) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond200) CFA_SP SP+-4
          CFI (cfiCond200) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker201 Using cfiCommon1
          CFI (cfiPicker201) NoFunction
          CFI (cfiPicker201) Picker
        MOVX      A,@DPTR
        LCALL     ?Subroutine194 & 0xFFFF
??CrossCallReturnLabel_377:
        RET
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiCond192
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiPicker201
// 1821 
// 1822 /*********************************************************************
// 1823  * @fn          ZDO_ProcessMgmtDirectJoinReq
// 1824  *
// 1825  * @brief       This function finishes the processing of the Management
// 1826  *              Direct Join Request and generates the response.
// 1827  *
// 1828  * @param       inMsg - incoming message (request)
// 1829  *
// 1830  * @return      none
// 1831  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1832 void ZDO_ProcessMgmtDirectJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtDirectJoinReq:
          CFI Block cfiBlock202 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
        CODE
// 1833 {
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, NLME_DirectJoinRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 11, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 11, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtDirectJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1834   uint8 *deviceAddr;
// 1835   uint8 capInfo;
// 1836   uint8 stat;
// 1837 
// 1838   // Parse the message
// 1839   deviceAddr = inMsg->asdu;
// 1840   capInfo = inMsg->asdu[Z_EXTADDR_LEN];
// 1841 
// 1842   stat = (byte) NLME_DirectJoinRequest( deviceAddr, capInfo );
        MOV       A,R6
        LCALL     ??Subroutine204_0 & 0xFFFF
??CrossCallReturnLabel_330:
        ADDC      A,R7
        LCALL     ?Subroutine98 & 0xFFFF
??CrossCallReturnLabel_159:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??NLME_DirectJoinRequest::?relay`; Banked call to: NLME_DirectJoinRequest
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1843 
// 1844   ZDP_MgmtDirectJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 12)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       ?V0,#0x35
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       R1,#0x1
        MOV       A,R6
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,R7
        MOV       R5,A
        MOV       A,R6
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
// 1845 }
        MOV       A,#0x1
        LJMP      ??Subroutine202_0 & 0xFFFF
          CFI EndBlock cfiBlock202
// 1846 
// 1847 /*********************************************************************
// 1848  * @fn          ZDO_ProcessMgmtLeaveReq
// 1849  *
// 1850  * @brief       This function processes a Management Leave Request
// 1851  *              and generates the response.
// 1852  *
// 1853  * @param       inMsg - incoming message (request)
// 1854  *
// 1855  * @return      none
// 1856  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1857 void ZDO_ProcessMgmtLeaveReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtLeaveReq:
          CFI Block cfiBlock203 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
        CODE
// 1858 {
        FUNCALL ZDO_ProcessMgmtLeaveReq, AddrMgrExtAddrValid
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_GetExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 23, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 23, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, NLME_LeaveReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtLeaveReq, bdb_setFN
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 6
        MOV       A,#-0x6
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
        LCALL     ?Subroutine121 & 0xFFFF
// 1859   NLME_LeaveReq_t req;
// 1860   ZStatus_t       status;
// 1861   uint8           option;
// 1862   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_202:
        LCALL     ?Subroutine100 & 0xFFFF
// 1863   
// 1864   if ( ( AddrMgrExtAddrValid( msg ) == FALSE                 ) ||
// 1865        ( osal_ExtAddrEqual( msg, NLME_GetExtAddr() ) == TRUE )    )
??CrossCallReturnLabel_365:
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??AddrMgrExtAddrValid::?relay`; Banked call to: AddrMgrExtAddrValid
        MOV       A,R1
        JZ        ??ZDO_ProcessMgmtLeaveReq_0
        ; Setup parameters for call to function NLME_GetExtAddr
        LCALL     `??NLME_GetExtAddr::?relay`; Banked call to: NLME_GetExtAddr
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R4,?V2
        MOV       R5,?V3
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessMgmtLeaveReq_1
// 1866   {
// 1867     if ( ( ZG_BUILD_COORDINATOR_TYPE ) && ( ZG_DEVICE_COORDINATOR_TYPE ) )
// 1868     {
// 1869       // Coordinator shall drop the leave request for itself
// 1870       // section 3.6.1.10.3.1 R21
// 1871       return;
??ZDO_ProcessMgmtLeaveReq_0:
        SJMP      ??ZDO_ProcessMgmtLeaveReq_2
// 1872     }
// 1873     else
// 1874     {
// 1875       // Remove this device
// 1876       req.extAddr = NULL;
// 1877     }
// 1878   }
// 1879   else
// 1880   {
// 1881     // Remove child device
// 1882     req.extAddr = msg;
??ZDO_ProcessMgmtLeaveReq_1:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        LCALL     ?Subroutine22 & 0xFFFF
// 1883   }
// 1884   if ( ( ZG_BUILD_ENDDEVICE_TYPE ) && ( ZG_DEVICE_ENDDEVICE_TYPE ) )
// 1885   {
// 1886     //Only the parent device can request to leave, otherwise silently discard the frame
// 1887     if(inMsg->srcAddr.addr.shortAddr != _NIB.nwkCoordAddress)
// 1888     {
// 1889       return;
// 1890     }
// 1891   }
// 1892 
// 1893   option = msg[Z_EXTADDR_LEN];
??CrossCallReturnLabel_30:
        MOV       R6,A
// 1894   if ( option & ZDP_MGMT_LEAVE_REQ_RC )
        MOV       C,0xE0 /* A   */.6
        JNC       ??ZDO_ProcessMgmtLeaveReq_3
// 1895   {
// 1896     req.removeChildren = TRUE;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1897   }
// 1898 
// 1899   if ( option & ZDP_MGMT_LEAVE_REQ_REJOIN )
??ZDO_ProcessMgmtLeaveReq_3:
        MOV       A,R6
        MOV       C,0xE0 /* A   */.7
        JNC       ??ZDO_ProcessMgmtLeaveReq_4
// 1900   {
// 1901      req.rejoin = TRUE;
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x1
        MOVX      @DPTR,A
// 1902   }
// 1903 
// 1904   req.silent = FALSE;
??ZDO_ProcessMgmtLeaveReq_4:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine188 & 0xFFFF
// 1905   
// 1906   //According to R21 spec sec2.4.3.3.5.2 Mgmt leave rsp must contain the status response from the nwk leave processing. 
// 1907   //Latest discussion in Zigbee indicates that mgmt leave rsp due to an OTA command must have status=success (9/12/16)
// 1908   status = ZSuccess;
??CrossCallReturnLabel_450:
        MOVX      @DPTR,A
// 1909   
// 1910   ZDP_MgmtLeaveRsp( inMsg->TransSeq, &(inMsg->srcAddr), status, FALSE );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V2,A
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 21)
        MOV       ?V2,#0x34
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 23)
        LCALL     ?Subroutine127 & 0xFFFF
??CrossCallReturnLabel_211:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 18)
// 1911   
// 1912   if ( ZG_BUILD_ENDDEVICE_TYPE )
// 1913   {
// 1914     // Stop polling and get ready to reset
// 1915     NLME_SetPollRate( 0 );
// 1916     NLME_SetResponseRate(0);
// 1917     NLME_SetQueuedPollRate(0);
// 1918   }
// 1919   
// 1920   NLME_LeaveReq(&req);
        ; Setup parameters for call to function NLME_LeaveReq
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??NLME_LeaveReq::?relay`; Banked call to: NLME_LeaveReq
// 1921   
// 1922   if (! (option & ZDP_MGMT_LEAVE_REQ_REJOIN) )
        MOV       A,R6
        MOV       C,0xE0 /* A   */.7
        JC        ??ZDO_ProcessMgmtLeaveReq_2
// 1923   {
// 1924     if(req.extAddr == NULL)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_390:
        JNZ       ??ZDO_ProcessMgmtLeaveReq_2
// 1925     {
// 1926       bdb_setFN();
        ; Setup parameters for call to function bdb_setFN
        LCALL     `??bdb_setFN::?relay`; Banked call to: bdb_setFN
// 1927     }
// 1928   }
// 1929 }
??ZDO_ProcessMgmtLeaveReq_2:
        MOV       A,#0x6
        LJMP      ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock203

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine127:
          CFI Block cfiCond204 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_210
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_211
          CFI (cfiCond205) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond205) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond205) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond205) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond205) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond205) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond205) CFA_SP SP+-2
          CFI (cfiCond205) CFA_XSP16 add(XSP16, 23)
          CFI Block cfiPicker206 Using cfiCommon1
          CFI (cfiPicker206) NoFunction
          CFI (cfiPicker206) Picker
        MOV       R1,#0x1
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V1
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        RET
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiPicker206

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine121:
          CFI Block cfiCond207 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond208) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond208) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond208) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond208) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond208) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond208) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond208) CFA_SP SP+-2
          CFI (cfiCond208) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ZDO_ProcessUserDescReq
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond209) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond209) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond209) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond209) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond209) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond209) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond209) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond209) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond209) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond209) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond209) CFA_SP SP+-2
          CFI (cfiCond209) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker210 Using cfiCommon1
          CFI (cfiPicker210) NoFunction
          CFI (cfiPicker210) Picker
        MOV       ?V0,R2
        MOV       ?V1,R3
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_646:
        ADDC      A,?V1
        RET
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiPicker210

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine100:
          CFI Block cfiCond211 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_365
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond212) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond212) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond212) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond212) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond212) CFA_SP SP+-2
          CFI (cfiCond212) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker213 Using cfiCommon1
          CFI (cfiPicker213) NoFunction
          CFI (cfiPicker213) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiPicker213
        REQUIRE ??Subroutine210_0
        ; // Fall through to label ??Subroutine210_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine210_0:
          CFI Block cfiCond214 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_367
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond215 Using cfiCommon0
          CFI (cfiCond215) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond215) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond215) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond215) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond215) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond215) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond215) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond215) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond215) CFA_SP SP+-2
          CFI (cfiCond215) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond216) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond216) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond216) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond216) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond216) CFA_SP SP+-2
          CFI (cfiCond216) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker217 Using cfiCommon1
          CFI (cfiPicker217) NoFunction
          CFI (cfiPicker217) Picker
        LCALL     ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_458:
        ; Setup parameters for call to function AddrMgrExtAddrValid
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        RET
          CFI EndBlock cfiCond214
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiPicker217
// 1930 
// 1931 
// 1932 /*********************************************************************
// 1933  * @fn          ZDO_ProcessMgmtPermitJoinReq
// 1934  *
// 1935  * @brief       This function processes a Management Permit Join Request
// 1936  *              and generates the response.
// 1937  *
// 1938  * @param       inMsg - incoming message (request)
// 1939  *
// 1940  * @return      none
// 1941  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 1942 void ZDO_ProcessMgmtPermitJoinReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessMgmtPermitJoinReq:
          CFI Block cfiBlock218 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
        CODE
// 1943 {
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, NLME_PermitJoiningRequest
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, APSME_IsDistributedSecurity
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDSecMgrPermitJoining
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDSecMgrPermitJoining
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 13, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 13, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessMgmtPermitJoinReq, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 18, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 18, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 1
        MOV       A,#-0x1
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 1944   uint8 stat;
// 1945   uint8 duration;
// 1946 #if (ZG_BUILD_COORDINATOR_TYPE)
// 1947   if(ZG_DEVICE_COORDINATOR_TYPE)
// 1948   {
// 1949     //If zgAllowRemoteTCPolicyChange is set to FALSE, the request from other 
// 1950     //devices cannot affect the  Trust Center policies
// 1951     if((zgAllowRemoteTCPolicyChange == 0) && (inMsg->srcAddr.addr.shortAddr!= 0x0000))
        MOV       A,R6
        ADD       A,#0x2
        MOV       ?V0,A
        CLR       A
        ADDC      A,R7
        MOV       ?V1,A
        MOV       DPTR,#zgAllowRemoteTCPolicyChange
        MOVX      A,@DPTR
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_0
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_391:
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_1
// 1952     {
// 1953       return;
// 1954     }
// 1955   }
// 1956 #endif
// 1957   
// 1958   duration = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_DURATION];
??ZDO_ProcessMgmtPermitJoinReq_0:
        LCALL     ?Subroutine125 & 0xFFFF
??CrossCallReturnLabel_209:
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_372:
        MOV       ?V2,A
// 1959   // Per R21 Spec this field is not longer relevant 2.4.3.3.7.2 (Mgmt_Permit_Joining_req Effect on Receipt)
// 1960   //tcsig    = inMsg->asdu[ZDP_MGMT_PERMIT_JOIN_REQ_TC_SIG];
// 1961 
// 1962   // Per R21 Spec this duration cannot last forever 2.4.3.3.7.2 (Mgmt_Permit_Joining_req Effect on Receipt)
// 1963   if(duration == 0xFF)
        MOV       A,#-0x1
        XRL       A,?V2
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_2
// 1964   {
// 1965     duration = 0xFE;
        MOV       ?V2,#-0x2
// 1966   }
// 1967   
// 1968   // Set the network layer permit join duration
// 1969   stat = (byte) NLME_PermitJoiningRequest( duration );
??ZDO_ProcessMgmtPermitJoinReq_2:
        ; Setup parameters for call to function NLME_PermitJoiningRequest
        MOV       R1,?V2
        LCALL     `??NLME_PermitJoiningRequest::?relay`; Banked call to: NLME_PermitJoiningRequest
        MOV       A,R1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      @DPTR,A
// 1970 
// 1971   //Handle the permit joining if running a distributed network
// 1972   if(APSME_IsDistributedSecurity())
        ; Setup parameters for call to function APSME_IsDistributedSecurity
        LCALL     `??APSME_IsDistributedSecurity::?relay`; Banked call to: APSME_IsDistributedSecurity
        MOV       A,R1
        JZ        ??ZDO_ProcessMgmtPermitJoinReq_3
// 1973   {
// 1974     ZDSecMgrPermitJoining( duration );
        ; Setup parameters for call to function ZDSecMgrPermitJoining
        MOV       R1,?V2
        LCALL     `??ZDSecMgrPermitJoining::?relay`; Banked call to: ZDSecMgrPermitJoining
// 1975   }
// 1976   
// 1977   // Handle the Trust Center Significance
// 1978   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 1979   {
// 1980     ZDSecMgrPermitJoining( duration );
??ZDO_ProcessMgmtPermitJoinReq_3:
        ; Setup parameters for call to function ZDSecMgrPermitJoining
        MOV       R1,?V2
        LCALL     `??ZDSecMgrPermitJoining::?relay`; Banked call to: ZDSecMgrPermitJoining
// 1981   }
// 1982 
// 1983   // Send a response if unicast
// 1984   if ( !inMsg->wasBroadcast )
        LCALL     ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_233:
        JNZ       ??ZDO_ProcessMgmtPermitJoinReq_1
// 1985   {
// 1986     ZDP_MgmtPermitJoinRsp( inMsg->TransSeq, &(inMsg->srcAddr), stat, false );
        ; Setup parameters for call to function ZDP_SendData
        MOV       ?V2,#0x0
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 14)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V2,R0
        MOV       ?V3,R1
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       ?V2,#0x36
        MOV       ?V3,#-0x80
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 18)
        MOV       R1,#0x1
        MOV       R4,?V0
        MOV       R5,?V1
        MOV       A,R6
        ADD       A,#0xf
        MOV       R2,A
        CLR       A
        ADDC      A,R7
        MOV       R3,A
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 13)
// 1987   }
// 1988 }
??ZDO_ProcessMgmtPermitJoinReq_1:
        MOV       A,#0x1
        LJMP      ?Subroutine1 & 0xFFFF
          CFI EndBlock cfiBlock218

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine125:
          CFI Block cfiCond219 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_208
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond220) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond220) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond220) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond220) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond220) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond220) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond220) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond220) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond220) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond220) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond220) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond220) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond220) CFA_SP SP+-2
          CFI (cfiCond220) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiPicker221 Using cfiCommon1
          CFI (cfiPicker221) NoFunction
          CFI (cfiPicker221) Picker
        MOV       A,R6
        LCALL     ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_643:
        ADDC      A,R7
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiPicker221

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine79:
          CFI Block cfiCond222 Using cfiCommon0
          CFI Function ZDO_UpdateNwkStatus
          CFI Conditional ??CrossCallReturnLabel_374
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond223) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond223) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond223) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond223) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond223) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond223) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond223) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond223) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond223) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond223) CFA_SP SP+-2
          CFI (cfiCond223) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker224 Using cfiCommon1
          CFI (cfiPicker224) NoFunction
          CFI (cfiPicker224) Picker
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiPicker224
        REQUIRE ??Subroutine211_0
        ; // Fall through to label ??Subroutine211_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine211_0:
          CFI Block cfiCond225 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_369
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond226) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond226) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond226) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond226) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond226) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond226) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond226) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond226) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond226) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond226) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond226) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond226) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond226) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond226) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond226) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond226) CFA_SP SP+-2
          CFI (cfiCond226) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond227) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond227) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond227) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond227) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond227) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond227) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond227) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond227) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond227) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond227) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond227) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond227) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond227) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond227) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond227) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond227) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond227) CFA_SP SP+-2
          CFI (cfiCond227) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond228) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond228) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond228) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond228) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond228) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond228) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond228) CFA_SP SP+-2
          CFI (cfiCond228) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond229 Using cfiCommon0
          CFI (cfiCond229) Function ZDO_ProcessParentAnnce
          CFI (cfiCond229) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond229) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond229) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond229) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond229) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond229) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond229) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond229) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond229) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond229) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond229) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond229) CFA_SP SP+-2
          CFI (cfiCond229) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ZDO_UpdateNwkStatus
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond230) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond230) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond230) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond230) CFA_SP SP+-2
          CFI (cfiCond230) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond231) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond231) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond231) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond231) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond231) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond231) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond231) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond231) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond231) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond231) CFA_SP SP+-2
          CFI (cfiCond231) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker232 Using cfiCommon1
          CFI (cfiPicker232) NoFunction
          CFI (cfiPicker232) Picker
        MOVX      A,@DPTR
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiPicker232
        REQUIRE ??Subroutine212_0
        ; // Fall through to label ??Subroutine212_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine212_0:
          CFI Block cfiCond233 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_368
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond234 Using cfiCommon0
          CFI (cfiCond234) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond234) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond234) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond234) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond234) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond234) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond234) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond234) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond234) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond234) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond234) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond234) CFA_SP SP+-2
          CFI (cfiCond234) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond235) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond235) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond235) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond235) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond235) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond235) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond235) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond235) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond235) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond235) CFA_SP SP+-2
          CFI (cfiCond235) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond236) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond236) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond236) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond236) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond236) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond236) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond236) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond236) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond236) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond236) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond236) CFA_SP SP+-2
          CFI (cfiCond236) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond237) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond237) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond237) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond237) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond237) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond237) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond237) CFA_SP SP+-2
          CFI (cfiCond237) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ZDO_ProcessParentAnnce
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond238) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond238) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond238) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond238) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond238) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond238) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond238) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond238) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond238) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond238) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond238) CFA_SP SP+-2
          CFI (cfiCond238) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond239 Using cfiCommon0
          CFI (cfiCond239) Function ZDO_UpdateNwkStatus
          CFI (cfiCond239) Conditional ??CrossCallReturnLabel_374
          CFI (cfiCond239) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond239) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond239) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond239) CFA_SP SP+-2
          CFI (cfiCond239) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond240 Using cfiCommon0
          CFI (cfiCond240) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond240) Conditional ??CrossCallReturnLabel_375
          CFI (cfiCond240) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond240) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond240) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond240) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond240) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond240) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond240) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond240) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond240) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond240) CFA_SP SP+-2
          CFI (cfiCond240) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker241 Using cfiCommon1
          CFI (cfiPicker241) NoFunction
          CFI (cfiPicker241) Picker
        LCALL     ?Subroutine194 & 0xFFFF
??CrossCallReturnLabel_378:
        RET
          CFI EndBlock cfiCond233
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiCond239
          CFI EndBlock cfiCond240
          CFI EndBlock cfiPicker241

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine194:
          CFI Block cfiCond242 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_132
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond243 Using cfiCommon0
          CFI (cfiCond243) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond243) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_278, ??CrossCallReturnLabel_133
          CFI (cfiCond243) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond243) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond243) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond243) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond243) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond243) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond243) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond243) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond243) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond243) CFA_SP SP+-6
          CFI (cfiCond243) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond244 Using cfiCommon0
          CFI (cfiCond244) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond244) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_91
          CFI (cfiCond244) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond244) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond244) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond244) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond244) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond244) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond244) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond244) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond244) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond244) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond244) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond244) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond244) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond244) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond244) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond244) CFA_SP SP+-6
          CFI (cfiCond244) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_92
          CFI (cfiCond245) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond245) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond245) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond245) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond245) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond245) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond245) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond245) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond245) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond245) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond245) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond245) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond245) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond245) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond245) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond245) CFA_SP SP+-6
          CFI (cfiCond245) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_276, ??CrossCallReturnLabel_93
          CFI (cfiCond246) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond246) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond246) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond246) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond246) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond246) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond246) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond246) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond246) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond246) CFA_SP SP+-6
          CFI (cfiCond246) CFA_XSP16 add(XSP16, 41)
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_83
          CFI (cfiCond247) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond247) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond247) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond247) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond247) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond247) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond247) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond247) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond247) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond247) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond247) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond247) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond247) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond247) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond247) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond247) CFA_SP SP+-6
          CFI (cfiCond247) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_84
          CFI (cfiCond248) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond248) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond248) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond248) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond248) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond248) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond248) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond248) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond248) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond248) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond248) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond248) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond248) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond248) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond248) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond248) CFA_SP SP+-6
          CFI (cfiCond248) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_85
          CFI (cfiCond249) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond249) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond249) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond249) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond249) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond249) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond249) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond249) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond249) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond249) CFA_SP SP+-6
          CFI (cfiCond249) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond250 Using cfiCommon0
          CFI (cfiCond250) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond250) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_275, ??CrossCallReturnLabel_86
          CFI (cfiCond250) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond250) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond250) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond250) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond250) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond250) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond250) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond250) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond250) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond250) CFA_SP SP+-6
          CFI (cfiCond250) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond251 Using cfiCommon0
          CFI (cfiCond251) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond251) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_99
          CFI (cfiCond251) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond251) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond251) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond251) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond251) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond251) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond251) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond251) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond251) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond251) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond251) CFA_SP SP+-6
          CFI (cfiCond251) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_377, ??CrossCallReturnLabel_277, ??CrossCallReturnLabel_100
          CFI (cfiCond252) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond252) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond252) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond252) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond252) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond252) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond252) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond252) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond252) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond252) CFA_SP SP+-6
          CFI (cfiCond252) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ZDO_UpdateNwkStatus
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_374
          CFI (cfiCond253) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond253) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond253) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond253) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond253) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond253) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond253) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond253) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond253) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond253) CFA_SP SP+-4
          CFI (cfiCond253) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_375
          CFI (cfiCond254) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond254) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond254) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond254) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond254) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond254) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond254) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond254) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond254) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond254) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond254) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond254) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond254) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond254) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond254) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond254) CFA_SP SP+-4
          CFI (cfiCond254) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_369
          CFI (cfiCond255) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond255) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond255) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond255) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond255) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond255) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond255) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond255) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond255) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond255) CFA_SP SP+-4
          CFI (cfiCond255) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_370
          CFI (cfiCond256) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond256) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond256) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond256) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond256) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond256) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond256) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond256) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond256) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond256) CFA_SP SP+-4
          CFI (cfiCond256) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_371
          CFI (cfiCond257) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond257) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond257) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond257) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond257) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond257) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond257) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond257) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond257) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond257) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond257) CFA_SP SP+-4
          CFI (cfiCond257) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_372
          CFI (cfiCond258) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond258) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond258) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond258) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond258) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond258) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond258) CFA_SP SP+-4
          CFI (cfiCond258) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function ZDO_ProcessParentAnnce
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_373
          CFI (cfiCond259) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond259) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond259) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond259) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond259) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond259) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond259) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond259) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond259) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond259) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond259) CFA_SP SP+-4
          CFI (cfiCond259) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond260 Using cfiCommon0
          CFI (cfiCond260) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond260) Conditional ??CrossCallReturnLabel_378, ??CrossCallReturnLabel_368
          CFI (cfiCond260) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond260) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond260) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond260) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond260) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond260) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond260) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond260) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond260) CFA_SP SP+-4
          CFI (cfiCond260) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_0
          CFI (cfiCond261) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond261) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond261) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond261) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond261) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond261) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond261) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond261) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond261) CFA_SP SP+-4
          CFI (cfiCond261) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_1
          CFI (cfiCond262) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond262) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond262) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond262) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond262) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond262) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond262) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond262) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond262) CFA_SP SP+-4
          CFI (cfiCond262) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker263 Using cfiCommon1
          CFI (cfiPicker263) NoFunction
          CFI (cfiPicker263) Picker
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond242
          CFI EndBlock cfiCond243
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiCond250
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiPicker263
// 1989 
// 1990 /*
// 1991  * This function stub allows the next higher layer to be notified of
// 1992  * a permit joining timeout.
// 1993  */
// 1994 /*********************************************************************
// 1995  * @fn          ZDO_ProcessMgmtPermitJoinTimeout
// 1996  *
// 1997  * @brief       This function stub allows the next higher layer to be
// 1998  *              notified of a permit joining timeout. Currently, this
// 1999  *              directly bypasses the APS layer.
// 2000  *
// 2001  * @param       none
// 2002  *
// 2003  * @return      none
// 2004  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2005 void ZDO_ProcessMgmtPermitJoinTimeout( void )
NLME_PermitJoiningTimeout:
          CFI Block cfiBlock264 Using cfiCommon0
          CFI Function NLME_PermitJoiningTimeout
        CODE
// 2006 {
        FUNCALL NLME_PermitJoiningTimeout, ZDSecMgrPermitJoiningTimeout
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2007   #if defined( ZDO_MGMT_PERMIT_JOIN_RESPONSE )
// 2008   // Currently, only the ZDSecMgr needs to be notified
// 2009   if ( ZG_SECURE_ENABLED && ZG_BUILD_COORDINATOR_TYPE && ZG_DEVICE_COORDINATOR_TYPE )
// 2010   {
// 2011     ZDSecMgrPermitJoiningTimeout();
        ; Setup parameters for call to function ZDSecMgrPermitJoiningTimeout
        LCALL     `??ZDSecMgrPermitJoiningTimeout::?relay`; Banked call to: ZDSecMgrPermitJoiningTimeout
// 2012   }
// 2013   #endif
// 2014 }
          CFI EndBlock cfiBlock264
        REQUIRE ?Subroutine0
        ; // Fall through to label ?Subroutine0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock265 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+-5
          CFI DPL0 Frame(CFA_SP, 4)
          CFI DPH0 Frame(CFA_SP, 5)
        POP       DPH
          CFI CFA_SP SP+-4
          CFI DPH0 SameValue
        POP       DPL
          CFI CFA_SP SP+-3
          CFI DPL0 SameValue
        LJMP      ?BRET
          CFI EndBlock cfiBlock265
// 2015 
// 2016 /*********************************************************************
// 2017  * @fn          ZDO_ProcessUserDescReq
// 2018  *
// 2019  * @brief       This function finishes the processing of the User
// 2020  *              Descriptor Request and generates the response.
// 2021  *
// 2022  * @param       inMsg - incoming message (request)
// 2023  *
// 2024  * @return      none
// 2025  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2026 void ZDO_ProcessUserDescReq( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescReq:
          CFI Block cfiBlock266 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescReq
        CODE
// 2027 {
        FUNCALL ZDO_ProcessUserDescReq, osal_nv_read
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_UserDescRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 36, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 36, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescReq, ZDP_GenericRsp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 17
        MOV       A,#-0x11
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        LCALL     ?Subroutine121 & 0xFFFF
// 2028   uint16 aoi = BUILD_UINT16( inMsg->asdu[0], inMsg->asdu[1] );
??CrossCallReturnLabel_203:
        LCALL     ?Subroutine58 & 0xFFFF
// 2029   UserDescriptorFormat_t userDesc;
// 2030 
// 2031   if ( (aoi == ZDAppNwkAddr.addr.shortAddr) && (ZSUCCESS == osal_nv_read(
// 2032              ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc )) )
??CrossCallReturnLabel_98:
        MOV       A,?V0
        ADD       A,#0xf
        MOV       ?V6,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V7,A
        MOV       A,?V0
        ADD       A,#0x2
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V3,A
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_ProcessUserDescReq_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
??ZDO_ProcessUserDescReq_0:
        JNZ       ??ZDO_ProcessUserDescReq_1
        ; Setup parameters for call to function osal_nv_read
        MOV       R0,?XSP + 0
        MOV       R1,?XSP + 1
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V4,#0x11
        MOV       ?V5,#0x0
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x7f
        MOV       R3,#0x0
        LCALL     `??osal_nv_read::?relay`; Banked call to: osal_nv_read
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        MOV       A,R1
        JNZ       ??ZDO_ProcessUserDescReq_1
// 2033   {
// 2034     ZDP_UserDescRsp( inMsg->TransSeq, &(inMsg->srcAddr), aoi, &userDesc, false );
        ; Setup parameters for call to function ZDP_UserDescRsp
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 34)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V2
        MOV       R3,?V3
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_UserDescRsp::?relay`; Banked call to: ZDP_UserDescRsp
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
        SJMP      ??ZDO_ProcessUserDescReq_2
// 2035   }
// 2036   else
// 2037   {
// 2038     ZDP_GenericRsp(inMsg->TransSeq, &(inMsg->srcAddr),
// 2039            ZDP_NOT_SUPPORTED, aoi, User_Desc_rsp, inMsg->SecurityUse );
??ZDO_ProcessUserDescReq_1:
        ; Setup parameters for call to function ZDP_GenericRsp
        MOV       ?V4,#0x11
        MOV       ?V5,#-0x80
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V4,R6
        MOV       ?V5,R7
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        LCALL     ?Subroutine130 & 0xFFFF
// 2040   }
??CrossCallReturnLabel_215:
        MOV       R5,A
        MOV       R4,#-0x7c
        MOV       R2,?V2
        MOV       R3,?V3
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDP_GenericRsp::?relay`; Banked call to: ZDP_GenericRsp
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 33)
// 2041 }
??ZDO_ProcessUserDescReq_2:
        MOV       A,#0x11
        LJMP      ??Subroutine200_0 & 0xFFFF
          CFI EndBlock cfiBlock266

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine130:
          CFI Block cfiCond267 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ZDO_ProcessUserDescReq
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond268) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond268) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond268) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond268) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond268) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond268) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond268) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond268) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond268) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond268) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond268) CFA_SP SP+-2
          CFI (cfiCond268) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker269 Using cfiCommon1
          CFI (cfiPicker269) NoFunction
          CFI (cfiPicker269) Picker
        LCALL     ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_297:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiPicker269

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine58:
          CFI Block cfiCond270 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_97
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ZDO_ProcessUserDescReq
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond271) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond271) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond271) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond271) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond271) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond271) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond271) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond271) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond271) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond271) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond271) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond271) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond271) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond271) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond271) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond271) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond271) CFA_SP SP+-2
          CFI (cfiCond271) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker272 Using cfiCommon1
          CFI (cfiPicker272) NoFunction
          CFI (cfiPicker272) Picker
        LCALL     ?Subroutine163 & 0xFFFF
??CrossCallReturnLabel_282:
        MOV       R6,A
        CLR       A
        ADDC      A,R1
        MOV       R7,A
        RET
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiPicker272

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine163:
          CFI Block cfiCond273 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond274 Using cfiCommon0
          CFI (cfiCond274) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond274) Conditional ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_88
          CFI (cfiCond274) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond274) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond274) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond274) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond274) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond274) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond274) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond274) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond274) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond274) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond274) CFA_SP SP+-4
          CFI (cfiCond274) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_97
          CFI (cfiCond275) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond275) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond275) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond275) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond275) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond275) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond275) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond275) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond275) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond275) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond275) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond275) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond275) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond275) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond275) CFA_SP SP+-4
          CFI (cfiCond275) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function ZDO_ProcessUserDescReq
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_98
          CFI (cfiCond276) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond276) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond276) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond276) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond276) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond276) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond276) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond276) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond276) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond276) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond276) CFA_SP SP+-4
          CFI (cfiCond276) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiPicker277 Using cfiCommon1
          CFI (cfiPicker277) NoFunction
          CFI (cfiPicker277) Picker
        LCALL     ?Subroutine192 & 0xFFFF
??CrossCallReturnLabel_321:
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        ADD       A,R0
        RET
          CFI EndBlock cfiCond273
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiPicker277
// 2042 
// 2043 /*********************************************************************
// 2044  * @fn          ZDO_ProcessUserDescSet
// 2045  *
// 2046  * @brief       This function finishes the processing of the User
// 2047  *              Descriptor Set and generates the response.
// 2048  *
// 2049  * @param       inMsg - incoming message (request)
// 2050  *
// 2051  * @return      none
// 2052  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2053 void ZDO_ProcessUserDescSet( zdoIncomingMsg_t *inMsg )
ZDO_ProcessUserDescSet:
          CFI Block cfiBlock278 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
        CODE
// 2054 {
        FUNCALL ZDO_ProcessUserDescSet, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 38, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 38, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, osal_nv_write
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 39, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 39, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessUserDescSet, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 40, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 40, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 21
        MOV       A,#-0x15
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
        MOV       ?V4,R2
        MOV       ?V5,R3
// 2055   uint8 *msg;
// 2056   uint16 aoi;
// 2057   UserDescriptorFormat_t userDesc;
// 2058   uint8 outMsg[3];
// 2059   uint8 status;
// 2060 
// 2061   msg = inMsg->asdu;
        LCALL     ?Subroutine126 & 0xFFFF
??CrossCallReturnLabel_333:
        ADDC      A,?V5
        LCALL     ?Subroutine77 & 0xFFFF
// 2062   aoi = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_130:
        MOV       R2,A
        CLR       A
        XCH       A,R2
        MOV       R3,A
        MOV       A,R4
        ADD       A,R2
        MOV       R6,A
        CLR       A
        ADDC      A,R3
        MOV       R7,A
// 2063 
// 2064   if ( aoi == ZDAppNwkAddr.addr.shortAddr )
        MOV       DPTR,#ZDAppNwkAddr
        MOVX      A,@DPTR
        XRL       A,R6
        JNZ       ??ZDO_ProcessUserDescSet_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R7
??ZDO_ProcessUserDescSet_0:
        JZ        $+5
        LJMP      ??ZDO_ProcessUserDescSet_1 & 0xFFFF
// 2065   {
// 2066     userDesc.len = (msg[2] < AF_MAX_USER_DESCRIPTOR_LEN) ? msg[2] : AF_MAX_USER_DESCRIPTOR_LEN;
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        SUBB      A,#0x10
        JNC       ??ZDO_ProcessUserDescSet_2
        MOV       ?V3,R2
        SJMP      ??ZDO_ProcessUserDescSet_3
??ZDO_ProcessUserDescSet_2:
        MOV       ?V3,#0x10
??ZDO_ProcessUserDescSet_3:
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V3
        LCALL     ?Subroutine38 & 0xFFFF
// 2067     msg ++;  // increment one for the length field
// 2068 
// 2069     osal_memcpy( userDesc.desc, &msg[2], userDesc.len );
??CrossCallReturnLabel_62:
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V0,R1
        MOV       ?V1,R2
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       A,#0x7
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
// 2070     osal_nv_write( ZCD_NV_USERDESC, 0, sizeof(UserDescriptorFormat_t), &userDesc );
        ; Setup parameters for call to function osal_nv_write
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       ?V0,#0x11
        MOV       ?V1,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       R4,#0x0
        MOV       R5,#0x0
        MOV       R2,#-0x7f
        MOV       R3,#0x0
        LCALL     `??osal_nv_write::?relay`; Banked call to: osal_nv_write
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
// 2071     if ( userDesc.len != 0 )
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#ZDO_Config_Node_Descriptor
        JZ        ??ZDO_ProcessUserDescSet_4
// 2072     {
// 2073       ZDO_Config_Node_Descriptor.UserDescAvail = TRUE;
        MOVX      A,@DPTR
        SETB      0xE0 /* A   */.4
        SJMP      ??ZDO_ProcessUserDescSet_5
// 2074     }
// 2075     else
// 2076     {
// 2077       ZDO_Config_Node_Descriptor.UserDescAvail = FALSE;
??ZDO_ProcessUserDescSet_4:
        MOVX      A,@DPTR
        CLR       0xE0 /* A   */.4
// 2078     }
// 2079 
// 2080     status = ZDP_SUCCESS;
// 2081   }
??ZDO_ProcessUserDescSet_5:
        LCALL     ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_451:
        CLR       A
        SJMP      ??ZDO_ProcessUserDescSet_6
// 2082   else
// 2083   {
// 2084     status =  ZDP_NOT_SUPPORTED;
??ZDO_ProcessUserDescSet_1:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7c
??ZDO_ProcessUserDescSet_6:
        MOVX      @DPTR,A
// 2085   }
// 2086 
// 2087   outMsg[0] = status;
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2088   outMsg[1] = LO_UINT16( aoi );
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
// 2089   outMsg[2] = LO_UINT16( aoi );
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
// 2090 
// 2091   ZDP_SendData( &(inMsg->TransSeq), &(inMsg->srcAddr), User_Desc_conf, 3, outMsg,
// 2092                inMsg->SecurityUse );
        ; Setup parameters for call to function ZDP_SendData
        LCALL     ?Subroutine132 & 0xFFFF
??CrossCallReturnLabel_574:
        ADDC      A,?V5
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_499:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 36)
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V0,#0x14
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       R1,#0x3
        LCALL     ?Subroutine129 & 0xFFFF
??CrossCallReturnLabel_213:
        MOV       R2,A
        CLR       A
        ADDC      A,?V5
        MOV       R3,A
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 35)
// 2093 }
        MOV       A,#0x15
        LJMP      ?Subroutine5 & 0xFFFF
          CFI EndBlock cfiBlock278

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine188:
          CFI Block cfiCond279 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_450
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ZDO_ProcessUserDescSet
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_451
          CFI (cfiCond280) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond280) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond280) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond280) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond280) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond280) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond280) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond280) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond280) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond280) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond280) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond280) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond280) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond280) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond280) CFA_SP SP+-2
          CFI (cfiCond280) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_446
          CFI (cfiCond281) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond281) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond281) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond281) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond281) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond281) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond281) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond281) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond281) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond281) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond281) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond281) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond281) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond281) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond281) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond281) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond281) CFA_SP SP+-6
          CFI (cfiCond281) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_444
          CFI (cfiCond282) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond282) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond282) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond282) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond282) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond282) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond282) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond282) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond282) CFA_SP SP+-6
          CFI (cfiCond282) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_445
          CFI (cfiCond283) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond283) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond283) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond283) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond283) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond283) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond283) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond283) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond283) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond283) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond283) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond283) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond283) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond283) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond283) CFA_SP SP+-6
          CFI (cfiCond283) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_0
          CFI (cfiCond284) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond284) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond284) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond284) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond284) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond284) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond284) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond284) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond284) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond284) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond284) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond284) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond284) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond284) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond284) CFA_SP SP+-6
          CFI (cfiCond284) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_1
          CFI (cfiCond285) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond285) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond285) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond285) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond285) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond285) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond285) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond285) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond285) CFA_SP SP+-6
          CFI (cfiCond285) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_10
          CFI (cfiCond286) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond286) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond286) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond286) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond286) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond286) CFA_SP SP+-6
          CFI (cfiCond286) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond287 Using cfiCommon0
          CFI (cfiCond287) Function ZDO_ProcessParentAnnce
          CFI (cfiCond287) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_11
          CFI (cfiCond287) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond287) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond287) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond287) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond287) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond287) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond287) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond287) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond287) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond287) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond287) CFA_SP SP+-6
          CFI (cfiCond287) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond288 Using cfiCommon0
          CFI (cfiCond288) Function ZDMatchSendState
          CFI (cfiCond288) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_12
          CFI (cfiCond288) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond288) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond288) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond288) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond288) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond288) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond288) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond288) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond288) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond288) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond288) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond288) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond288) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond288) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond288) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond288) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond288) CFA_SP SP+-6
          CFI (cfiCond288) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_13
          CFI (cfiCond289) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond289) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond289) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond289) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond289) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond289) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond289) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond289) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond289) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond289) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond289) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond289) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond289) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond289) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond289) CFA_SP SP+-6
          CFI (cfiCond289) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond290 Using cfiCommon0
          CFI (cfiCond290) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond290) Conditional ??CrossCallReturnLabel_452, ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_14
          CFI (cfiCond290) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond290) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond290) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond290) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond290) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond290) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond290) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond290) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond290) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond290) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond290) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond290) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond290) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond290) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond290) CFA_SP SP+-6
          CFI (cfiCond290) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker291 Using cfiCommon1
          CFI (cfiPicker291) NoFunction
          CFI (cfiPicker291) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function AssocGetWithExt
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        RET
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiCond287
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiCond290
          CFI EndBlock cfiPicker291

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine129:
          CFI Block cfiCond292 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_212
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function ZDO_ProcessUserDescSet
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond293) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond293) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond293) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond293) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond293) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond293) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond293) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond293) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond293) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond293) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond293) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond293) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond293) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond293) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond293) CFA_SP SP+-2
          CFI (cfiCond293) CFA_XSP16 add(XSP16, 40)
          CFI Block cfiPicker294 Using cfiCommon1
          CFI (cfiPicker294) NoFunction
          CFI (cfiPicker294) Picker
        MOV       A,?V4
        ADD       A,#0x2
        MOV       R4,A
        CLR       A
        ADDC      A,?V5
        MOV       R5,A
        MOV       A,?V4
        ADD       A,#0xf
        RET
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiPicker294

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine77:
          CFI Block cfiCond295 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ZDO_ProcessUserDescSet
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond296) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond296) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond296) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond296) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond296) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond296) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond296) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond296) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond296) CFA_SP SP+-2
          CFI (cfiCond296) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker297 Using cfiCommon1
          CFI (cfiPicker297) NoFunction
          CFI (cfiPicker297) Picker
        LCALL     ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_291:
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiPicker297
// 2094 
// 2095 /*********************************************************************
// 2096  * @fn          ZDO_ProcessDeviceAnnce
// 2097  *
// 2098  * @brief       This function processes a device annouce message.
// 2099  *
// 2100  * @param       inMsg - incoming message
// 2101  *
// 2102  * @return      none
// 2103  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2104 void ZDO_ProcessDeviceAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessDeviceAnnce:
          CFI Block cfiBlock298 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
        CODE
// 2105 {
        FUNCALL ZDO_ProcessDeviceAnnce, ZDO_ParseDeviceAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemoveAllStranded
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_CheckNewAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordExtAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetCoordShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, ZMacSetReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, NLME_GetShortAddr
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, RTG_RemoveRtgEntry
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, nwkNeighborRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupNwk
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, sAddrExtCmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrExtAddrSet
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryLookupExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, AddrMgrEntryUpdate
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 54, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 54, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_get_timeoutEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_memcmp
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 54, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 54, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessDeviceAnnce, osal_stop_timerEx
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 51, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 51, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        MOV       A,#-0xb
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 11)
        ; Saved register size: 11
        ; Auto size: 40
        MOV       A,#-0x28
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 51)
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
// 2106   ZDO_DeviceAnnce_t Annce;
// 2107   AddrMgrEntry_t addrEntry;
// 2108   uint8 parentExt[Z_EXTADDR_LEN];
// 2109 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
// 2110   uint8 invalidIEEE[Z_EXTADDR_LEN] = {0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF};
        MOV       DPTR,#`?<Constant {255, 255, 255, 255, 255, 255, 255,`
        MOV       A,#0x20
        LCALL     ?XSTACK_DISP102_8
        MOV       A,#0x8
        LCALL     ?MOVE_LONG8_XDATA_XDATA
// 2111 #endif
// 2112 
// 2113   if ( (_NIB.nwkState != NWK_ROUTER) && (_NIB.nwkState != NWK_ENDDEVICE) )
        MOV       DPTR,#_NIB + 35
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x8
        XRL       A,R0
        JZ        ??ZDO_ProcessDeviceAnnce_0
        MOV       A,#0x4
        XRL       A,R0
        JZ        $+5
        LJMP      ??ZDO_ProcessDeviceAnnce_1 & 0xFFFF
// 2114   {
// 2115     // we aren�t stable, ignore the message
// 2116     return;
// 2117   }
// 2118   
// 2119   // Parse incoming message
// 2120   ZDO_ParseDeviceAnnce( inMsg, &Annce );
??ZDO_ProcessDeviceAnnce_0:
        ; Setup parameters for call to function ZDO_ParseDeviceAnnce
        MOV       R4,?XSP + 0
        MOV       R5,?XSP + 1
        LCALL     `??ZDO_ParseDeviceAnnce::?relay`; Banked call to: ZDO_ParseDeviceAnnce
// 2121 
// 2122   if ( ZSTACK_END_DEVICE_BUILD )
// 2123   {
// 2124     // Make sure the message didn't come from myself - end device only
// 2125     if ( osal_ExtAddrEqual( NLME_GetExtAddr(), Annce.extAddr ) && Annce.nwkAddr == NLME_GetShortAddr() )
// 2126     {
// 2127       return;
// 2128     }
// 2129   }
// 2130 
// 2131 #if defined ( ZIGBEEPRO )
// 2132   // Clean up the neighbor table
// 2133   nwkNeighborRemoveAllStranded();
        ; Setup parameters for call to function nwkNeighborRemoveAllStranded
        LCALL     `??nwkNeighborRemoveAllStranded::?relay`; Banked call to: nwkNeighborRemoveAllStranded
// 2134 
// 2135   // If address conflict is detected, no need to update the address manager
// 2136   if ( NLME_CheckNewAddrSet( Annce.nwkAddr, Annce.extAddr )== ZFailure )
        ; Setup parameters for call to function NLME_CheckNewAddrSet
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_490:
        LCALL     `??NLME_CheckNewAddrSet::?relay`; Banked call to: NLME_CheckNewAddrSet
        MOV       A,R1
        XRL       A,#0x1
        JNZ       $+5
        LJMP      ??ZDO_ProcessDeviceAnnce_1 & 0xFFFF
// 2137   {
// 2138     return;
// 2139   }
// 2140 
// 2141   // Check for parent's address
// 2142   NLME_GetCoordExtAddr( parentExt );
        ; Setup parameters for call to function NLME_GetCoordExtAddr
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??NLME_GetCoordExtAddr::?relay`; Banked call to: NLME_GetCoordExtAddr
// 2143   if ( osal_ExtAddrEqual( parentExt, Annce.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_2
// 2144   {
// 2145     if ( Annce.nwkAddr != NLME_GetCoordShortAddr() )
        ; Setup parameters for call to function NLME_GetCoordShortAddr
        LCALL     `??NLME_GetCoordShortAddr::?relay`; Banked call to: NLME_GetCoordShortAddr
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_3
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessDeviceAnnce_3:
        JZ        ??ZDO_ProcessDeviceAnnce_2
// 2146     {
// 2147       // Set the Parent's MAC's new short address
// 2148       _NIB.nwkCoordAddress = Annce.nwkAddr;
        LCALL     ?Subroutine92 & 0xFFFF
??CrossCallReturnLabel_442:
        MOV       DPTR,#_NIB + 23
        LCALL     ??Subroutine215_0 & 0xFFFF
// 2149       ZMacSetReq( ZMacCoordShortAddress, (byte*)&(_NIB.nwkCoordAddress) );
??CrossCallReturnLabel_412:
        ; Setup parameters for call to function ZMacSetReq
        MOV       R2,#(_NIB + 23) & 0xff
        MOV       R3,#((_NIB + 23) >> 8) & 0xff
        MOV       R1,#0x4b
        LCALL     `??ZMacSetReq::?relay`; Banked call to: ZMacSetReq
// 2150     }
// 2151   }
// 2152 
// 2153   if ( ZSTACK_ROUTER_BUILD )
// 2154   {
// 2155     // If the device annce comes from a end device child that has moved
// 2156     // to another parent, remove it from associated device list
// 2157 
// 2158     // If the dev annce is coming from other device's children,
// 2159     // (The dev annce from its own children shall be unicast to itself,
// 2160     // So check the mac destination address)
// 2161     // Remove it from the associated device list. If it is not
// 2162     // a child, no action will be taken in AssocRemove() anyway.
// 2163     if ( inMsg->macDestAddr != NLME_GetShortAddr() )
??ZDO_ProcessDeviceAnnce_2:
        ; Setup parameters for call to function NLME_GetShortAddr
        LCALL     `??NLME_GetShortAddr::?relay`; Banked call to: NLME_GetShortAddr
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       R0,?V0
        MOV       R1,?V1
        MOV       A,R6
        ADD       A,#0x11
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_599:
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_4
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessDeviceAnnce_4:
        JZ        ??ZDO_ProcessDeviceAnnce_5
// 2164     {
// 2165       associated_devices_t *dev_ptr;
// 2166 
// 2167       // If it's an end device child
// 2168       dev_ptr = AssocGetWithExt( Annce.extAddr );
        ; Setup parameters for call to function AssocGetWithExt
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV       DPL,R2
        MOV       DPH,R3
// 2169       if ( dev_ptr )
        MOV       A,DPL
        ORL       A,DPH
        JZ        ??ZDO_ProcessDeviceAnnce_6
// 2170       {
// 2171         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2172              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x1
        XRL       A,R0
        JZ        ??ZDO_ProcessDeviceAnnce_7
        MOV       A,#0x2
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_6
// 2173         {
// 2174           AssocRemove( Annce.extAddr );
??ZDO_ProcessDeviceAnnce_7:
        ; Setup parameters for call to function AssocRemove
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AssocRemove::?relay`; Banked call to: AssocRemove
// 2175         }
// 2176       }
// 2177 
// 2178       // Remove the address from the SrcMatch table,
// 2179       // just in case the device was aged out by Child Management Table process
// 2180       if ( ( pNwkNotMyChildListDelete != NULL ) &&
// 2181            ( zgChildAgingEnable == TRUE ) )
??ZDO_ProcessDeviceAnnce_6:
        MOV       DPTR,#pNwkNotMyChildListDelete
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_392:
        JZ        ??ZDO_ProcessDeviceAnnce_5
        MOV       DPTR,#zgChildAgingEnable
        MOVX      A,@DPTR
        XRL       A,#0x1
        JNZ       ??ZDO_ProcessDeviceAnnce_5
// 2182       {
// 2183         pNwkNotMyChildListDelete( Annce.nwkAddr );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine99 & 0xFFFF
// 2184       }
// 2185     }
// 2186   }
??CrossCallReturnLabel_491:
        MOV       DPTR,#pNwkNotMyChildListDelete + 1
        LCALL     ??Subroutine253_0 & 0xFFFF
??CrossCallReturnLabel_648:
        LCALL     ?CALL_IND
// 2187 
// 2188   // Assume that the device has moved, remove existing routing entries
// 2189   RTG_RemoveRtgEntry( Annce.nwkAddr, 0 );
??ZDO_ProcessDeviceAnnce_5:
        ; Setup parameters for call to function RTG_RemoveRtgEntry
        MOV       R1,#0x0
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_492:
        LCALL     `??RTG_RemoveRtgEntry::?relay`; Banked call to: RTG_RemoveRtgEntry
// 2190 
// 2191   // Remove entry from neighborTable
// 2192   nwkNeighborRemove( Annce.nwkAddr, _NIB.nwkPanId );
        ; Setup parameters for call to function nwkNeighborRemove
        MOV       DPTR,#_NIB + 33
        LCALL     ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_429:
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_493:
        LCALL     `??nwkNeighborRemove::?relay`; Banked call to: nwkNeighborRemove
// 2193 
// 2194 #endif // ZIGBEEPRO
// 2195 
// 2196   // Fill in the extended address in address manager if we don't have it already.
// 2197   addrEntry.user = ADDRMGR_USER_DEFAULT;
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine14 & 0xFFFF
// 2198   addrEntry.nwkAddr = Annce.nwkAddr;
??CrossCallReturnLabel_10:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine27 & 0xFFFF
// 2199   if ( AddrMgrEntryLookupNwk( &addrEntry ) )
??CrossCallReturnLabel_42:
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryLookupNwk::?relay`; Banked call to: AddrMgrEntryLookupNwk
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_8
// 2200   {
// 2201     osal_memset( parentExt, 0, Z_EXTADDR_LEN );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       R1,#0x0
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 2202     if ( osal_ExtAddrEqual( parentExt, addrEntry.extAddr ) )
        ; Setup parameters for call to function sAddrExtCmp
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0x18
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCmp::?relay`; Banked call to: sAddrExtCmp
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_8
// 2203     {
// 2204       AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2205       AddrMgrEntryUpdate( &addrEntry );
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2206     }
// 2207   }
// 2208 
// 2209   // Update the short address in address manager if it's been changed
// 2210   AddrMgrExtAddrSet( addrEntry.extAddr, Annce.extAddr );
??ZDO_ProcessDeviceAnnce_8:
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R4,DPL
        MOV       R5,DPH
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        LCALL     `??AddrMgrExtAddrSet::?relay`; Banked call to: AddrMgrExtAddrSet
// 2211   if ( AddrMgrEntryLookupExt( &addrEntry ) )
        ; Setup parameters for call to function AddrMgrEntryLookupExt
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryLookupExt::?relay`; Banked call to: AddrMgrEntryLookupExt
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_9
// 2212   {
// 2213     if ( addrEntry.nwkAddr != Annce.nwkAddr )
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_437:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        XRL       A,R0
        JNZ       ??ZDO_ProcessDeviceAnnce_10
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,R1
??ZDO_ProcessDeviceAnnce_10:
        JZ        ??ZDO_ProcessDeviceAnnce_9
// 2214     {
// 2215       addrEntry.nwkAddr = Annce.nwkAddr;
        LCALL     ?Subroutine92 & 0xFFFF
// 2216       AddrMgrEntryUpdate( &addrEntry );
// 2217     }
// 2218   }
??CrossCallReturnLabel_443:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine27 & 0xFFFF
??CrossCallReturnLabel_43:
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??AddrMgrEntryUpdate::?relay`; Banked call to: AddrMgrEntryUpdate
// 2219 
// 2220 #if !defined (DISABLE_GREENPOWER_BASIC_PROXY) && (ZG_BUILD_RTR_TYPE)
// 2221   if(ZG_DEVICE_RTR_TYPE)
??ZDO_ProcessDeviceAnnce_9:
        MOV       DPTR,#zgDeviceLogicalType
        MOVX      A,@DPTR
        JZ        ??ZDO_ProcessDeviceAnnce_11
        XRL       A,#0x1
        JZ        $+5
        LJMP      ??ZDO_ProcessDeviceAnnce_1 & 0xFFFF
// 2222   {
// 2223     // Check GP proxy table to update the entry if necesary
// 2224     if( osal_memcmp( Annce.extAddr, invalidIEEE, Z_EXTADDR_LEN ) )
??ZDO_ProcessDeviceAnnce_11:
        ; Setup parameters for call to function osal_memcmp
        MOV       A,#0x20
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 54)
        MOV       R4,#0x8
        MOV       R5,#0x0
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       R3,#0x0
        LCALL     `??osal_memcmp::?relay`; Banked call to: osal_memcmp
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 51)
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_12
// 2225     {
// 2226       if( osal_get_timeoutEx( gp_TaskID, GP_PROXY_ALIAS_CONFLICT_TIMEOUT ) )
        ; Setup parameters for call to function osal_get_timeoutEx
        MOV       R2,#0x10
        MOV       R3,#0x0
        MOV       DPTR,#gp_TaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_get_timeoutEx::?relay`; Banked call to: osal_get_timeoutEx
        MOV       A,R2
        ORL       A,R3
        ORL       A,R4
        ORL       A,R5
        JZ        ??ZDO_ProcessDeviceAnnce_1
// 2227       {
// 2228         if ( osal_memcmp( &Annce, GP_aliasConflictAnnce, sizeof( ZDO_DeviceAnnce_t ) ) )
        ; Setup parameters for call to function osal_memcmp
        MOV       DPTR,#GP_aliasConflictAnnce
        LCALL     ??Subroutine233_0 & 0xFFFF
??CrossCallReturnLabel_526:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 54)
        MOV       R4,#0xb
        MOV       R5,#0x0
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       R3,#0x0
        LCALL     `??osal_memcmp::?relay`; Banked call to: osal_memcmp
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 51)
        MOV       A,R1
        JZ        ??ZDO_ProcessDeviceAnnce_1
// 2229         {
// 2230           osal_stop_timerEx( gp_TaskID, GP_PROXY_ALIAS_CONFLICT_TIMEOUT );
        ; Setup parameters for call to function osal_stop_timerEx
        MOV       R2,#0x10
        MOV       R3,#0x0
        MOV       DPTR,#gp_TaskID
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??osal_stop_timerEx::?relay`; Banked call to: osal_stop_timerEx
        SJMP      ??ZDO_ProcessDeviceAnnce_1
// 2231         }
// 2232       }
// 2233     }
// 2234     else
// 2235     {
// 2236       if(GP_CheckAnnouncedDeviceGCB != NULL)
??ZDO_ProcessDeviceAnnce_12:
        MOV       DPTR,#GP_CheckAnnouncedDeviceGCB
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_393:
        JZ        ??ZDO_ProcessDeviceAnnce_1
// 2237       {
// 2238         GP_CheckAnnouncedDeviceGCB( Annce.extAddr, Annce.nwkAddr );
        ; Setup parameters for indirect call
        LCALL     ?Subroutine103 & 0xFFFF
// 2239       }
// 2240     }
// 2241   }
??CrossCallReturnLabel_432:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       R2,DPL
        MOV       R3,DPH
        MOV       DPTR,#GP_CheckAnnouncedDeviceGCB + 1
        LCALL     ??Subroutine253_0 & 0xFFFF
??CrossCallReturnLabel_649:
        LCALL     ?CALL_IND
// 2242 #endif
// 2243 }
??ZDO_ProcessDeviceAnnce_1:
        MOV       A,#0x28
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 11)
        MOV       R7,#0x3
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock298

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine49:
          CFI Block cfiCond299 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_398
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond300) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond300) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond300) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond300) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond300) CFA_SP SP+-2
          CFI (cfiCond300) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond301) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond301) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond301) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond301) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond301) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond301) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond301) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond301) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond301) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond301) CFA_SP SP+-2
          CFI (cfiCond301) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker302 Using cfiCommon1
          CFI (cfiPicker302) NoFunction
          CFI (cfiPicker302) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiPicker302
        REQUIRE ??Subroutine213_0
        ; // Fall through to label ??Subroutine213_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine213_0:
          CFI Block cfiCond303 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_379
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_380
          CFI (cfiCond304) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond304) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond304) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond304) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond304) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond304) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond304) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond304) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond304) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond304) CFA_SP SP+-2
          CFI (cfiCond304) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond305) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond305) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond305) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond305) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond305) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond305) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond305) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond305) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond305) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond305) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond305) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond305) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond305) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond305) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond305) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond305) CFA_SP SP+-2
          CFI (cfiCond305) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond306 Using cfiCommon0
          CFI (cfiCond306) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond306) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond306) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond306) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond306) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond306) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond306) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond306) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond306) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond306) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond306) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond306) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond306) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond306) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond306) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond306) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond306) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond306) CFA_SP SP+-2
          CFI (cfiCond306) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond307 Using cfiCommon0
          CFI (cfiCond307) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond307) Conditional ??CrossCallReturnLabel_383
          CFI (cfiCond307) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond307) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond307) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond307) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond307) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond307) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond307) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond307) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond307) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond307) CFA_SP SP+-2
          CFI (cfiCond307) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_384
          CFI (cfiCond308) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond308) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond308) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond308) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond308) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond308) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond308) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond308) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond308) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond308) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond308) CFA_SP SP+-2
          CFI (cfiCond308) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond309) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond309) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond309) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond309) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond309) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond309) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond309) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond309) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond309) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond309) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond309) CFA_SP SP+-2
          CFI (cfiCond309) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond310) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond310) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond310) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond310) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond310) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond310) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond310) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond310) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond310) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond310) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond310) CFA_SP SP+-2
          CFI (cfiCond310) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_387
          CFI (cfiCond311) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond311) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond311) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond311) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond311) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond311) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond311) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond311) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond311) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond311) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond311) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond311) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond311) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond311) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond311) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond311) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond311) CFA_SP SP+-2
          CFI (cfiCond311) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond312) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond312) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond312) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond312) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond312) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond312) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond312) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond312) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond312) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond312) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond312) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond312) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond312) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond312) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond312) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond312) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond312) CFA_SP SP+-2
          CFI (cfiCond312) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond313) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond313) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond313) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond313) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond313) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond313) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond313) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond313) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond313) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond313) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond313) CFA_SP SP+-2
          CFI (cfiCond313) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond314) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond314) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond314) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond314) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond314) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond314) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond314) CFA_SP SP+-2
          CFI (cfiCond314) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond315) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond315) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond315) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond315) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond315) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond315) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond315) CFA_SP SP+-2
          CFI (cfiCond315) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond316) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond316) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond316) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond316) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond316) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond316) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond316) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond316) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond316) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond316) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond316) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond316) CFA_SP SP+-2
          CFI (cfiCond316) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond317) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond317) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond317) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond317) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond317) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond317) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond317) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond317) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond317) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond317) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond317) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond317) CFA_SP SP+-2
          CFI (cfiCond317) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ZDO_ProcessParentAnnce
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond318) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond318) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond318) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond318) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond318) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond318) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond318) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond318) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond318) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond318) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond318) CFA_SP SP+-2
          CFI (cfiCond318) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond319) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond319) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond319) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond319) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond319) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond319) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond319) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond319) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond319) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond319) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond319) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond319) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond319) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond319) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond319) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond319) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond319) CFA_SP SP+-2
          CFI (cfiCond319) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ZDO_RemoveMatchMemory
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond320) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond320) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond320) CFA_SP SP+-7
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_397
          CFI (cfiCond321) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond321) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond321) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond321) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond321) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond321) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond321) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond321) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond321) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond321) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond321) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond321) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond321) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond321) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond321) CFA_SP SP+-2
          CFI (cfiCond321) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_398
          CFI (cfiCond322) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond322) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond322) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond322) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond322) CFA_SP SP+-2
          CFI (cfiCond322) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond323) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond323) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond323) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond323) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond323) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond323) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond323) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond323) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond323) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond323) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond323) CFA_SP SP+-2
          CFI (cfiCond323) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond324) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond324) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond324) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond324) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond324) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond324) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond324) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond324) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond324) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond324) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond324) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond324) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond324) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond324) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond324) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond324) CFA_SP SP+-2
          CFI (cfiCond324) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker325 Using cfiCommon1
          CFI (cfiPicker325) NoFunction
          CFI (cfiPicker325) Picker
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_513:
        MOV       A,R0
        ORL       A,R1
        RET
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiCond306
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiPicker325

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine31:
          CFI Block cfiCond326 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_426
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond327) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond327) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond327) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond327) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond327) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond327) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond327) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond327) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond327) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond327) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond327) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond327) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond327) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond327) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond327) CFA_SP SP+-2
          CFI (cfiCond327) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker328 Using cfiCommon1
          CFI (cfiPicker328) NoFunction
          CFI (cfiPicker328) Picker
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiPicker328
        REQUIRE ??Subroutine214_0
        ; // Fall through to label ??Subroutine214_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine214_0:
          CFI Block cfiCond329 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_425
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond330) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond330) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond330) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond330) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond330) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond330) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond330) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond330) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond330) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond330) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond330) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond330) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond330) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond330) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond330) CFA_SP SP+-2
          CFI (cfiCond330) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond331) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond331) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond331) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond331) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond331) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond331) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond331) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond331) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond331) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond331) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond331) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond331) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond331) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond331) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond331) CFA_SP SP+-2
          CFI (cfiCond331) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker332 Using cfiCommon1
          CFI (cfiPicker332) NoFunction
          CFI (cfiPicker332) Picker
        MOV       R1,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiPicker332
        REQUIRE ??Subroutine215_0
        ; // Fall through to label ??Subroutine215_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine215_0:
          CFI Block cfiCond333 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_407
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond334 Using cfiCommon0
          CFI (cfiCond334) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond334) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond334) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond334) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond334) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond334) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond334) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond334) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond334) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond334) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond334) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond334) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond334) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond334) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond334) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond334) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond334) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond334) CFA_SP SP+-2
          CFI (cfiCond334) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond335 Using cfiCommon0
          CFI (cfiCond335) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond335) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond335) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond335) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond335) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond335) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond335) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond335) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond335) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond335) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond335) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond335) CFA_SP SP+-2
          CFI (cfiCond335) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond336 Using cfiCommon0
          CFI (cfiCond336) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond336) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond336) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond336) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond336) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond336) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond336) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond336) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond336) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond336) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond336) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond336) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond336) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond336) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond336) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond336) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond336) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond336) CFA_SP SP+-2
          CFI (cfiCond336) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond337 Using cfiCommon0
          CFI (cfiCond337) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond337) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond337) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond337) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond337) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond337) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond337) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond337) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond337) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond337) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond337) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond337) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond337) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond337) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond337) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond337) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond337) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond337) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond337) CFA_SP SP+-2
          CFI (cfiCond337) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond338 Using cfiCommon0
          CFI (cfiCond338) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond338) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond338) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond338) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond338) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond338) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond338) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond338) CFA_SP SP+-2
          CFI (cfiCond338) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function ZDO_ProcessParentAnnce
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond339) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond339) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond339) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond339) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond339) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond339) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond339) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond339) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond339) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond339) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond339) CFA_SP SP+-2
          CFI (cfiCond339) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ZDO_ProcessParentAnnce
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond340) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond340) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond340) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond340) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond340) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond340) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond340) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond340) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond340) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond340) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond340) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond340) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond340) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond340) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond340) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond340) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond340) CFA_SP SP+-2
          CFI (cfiCond340) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ZDO_ProcessParentAnnce
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond341) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond341) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond341) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond341) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond341) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond341) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond341) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond341) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond341) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond341) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond341) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond341) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond341) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond341) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond341) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond341) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond341) CFA_SP SP+-2
          CFI (cfiCond341) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ZDO_ProcessParentAnnce
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond342) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond342) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond342) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond342) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond342) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond342) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond342) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond342) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond342) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond342) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond342) CFA_SP SP+-2
          CFI (cfiCond342) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond343 Using cfiCommon0
          CFI (cfiCond343) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond343) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond343) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond343) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond343) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond343) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond343) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond343) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond343) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond343) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond343) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond343) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond343) CFA_SP SP+-2
          CFI (cfiCond343) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond344 Using cfiCommon0
          CFI (cfiCond344) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond344) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond344) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond344) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond344) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond344) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond344) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond344) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond344) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond344) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond344) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond344) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond344) CFA_SP SP+-2
          CFI (cfiCond344) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond345 Using cfiCommon0
          CFI (cfiCond345) Function ZDMatchSendState
          CFI (cfiCond345) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond345) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond345) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond345) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond345) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond345) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond345) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond345) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond345) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond345) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond345) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond345) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond345) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond345) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond345) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond345) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond345) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond345) CFA_SP SP+-2
          CFI (cfiCond345) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond346 Using cfiCommon0
          CFI (cfiCond346) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond346) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond346) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond346) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond346) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond346) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond346) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond346) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond346) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond346) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond346) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond346) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond346) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond346) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond346) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond346) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond346) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond346) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond346) CFA_SP SP+-2
          CFI (cfiCond346) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond347 Using cfiCommon0
          CFI (cfiCond347) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond347) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond347) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond347) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond347) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond347) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond347) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond347) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond347) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond347) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond347) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond347) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond347) CFA_SP SP+-2
          CFI (cfiCond347) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond348) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond348) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond348) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond348) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond348) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond348) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond348) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond348) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond348) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond348) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond348) CFA_SP SP+-2
          CFI (cfiCond348) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond349) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond349) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond349) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond349) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond349) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond349) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond349) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond349) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond349) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond349) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond349) CFA_SP SP+-2
          CFI (cfiCond349) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond350 Using cfiCommon0
          CFI (cfiCond350) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond350) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond350) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond350) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond350) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond350) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond350) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond350) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond350) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond350) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond350) CFA_SP SP+-2
          CFI (cfiCond350) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond351 Using cfiCommon0
          CFI (cfiCond351) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond351) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond351) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond351) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond351) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond351) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond351) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond351) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond351) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond351) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond351) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond351) CFA_SP SP+-2
          CFI (cfiCond351) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond352 Using cfiCommon0
          CFI (cfiCond352) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond352) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond352) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond352) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond352) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond352) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond352) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond352) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond352) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond352) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond352) CFA_SP SP+-2
          CFI (cfiCond352) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond353) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond353) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond353) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond353) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond353) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond353) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond353) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond353) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond353) CFA_SP SP+-2
          CFI (cfiCond353) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker354 Using cfiCommon1
          CFI (cfiPicker354) NoFunction
          CFI (cfiPicker354) Picker
        MOV       A,R0
          CFI EndBlock cfiCond333
          CFI EndBlock cfiCond334
          CFI EndBlock cfiCond335
          CFI EndBlock cfiCond336
          CFI EndBlock cfiCond337
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiCond343
          CFI EndBlock cfiCond344
          CFI EndBlock cfiCond345
          CFI EndBlock cfiCond346
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiCond350
          CFI EndBlock cfiCond351
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiPicker354
        REQUIRE ??Subroutine216_0
        ; // Fall through to label ??Subroutine216_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine216_0:
          CFI Block cfiCond355 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_401
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond356) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond356) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond356) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond356) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond356) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond356) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond356) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond356) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond356) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond356) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond356) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond356) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond356) CFA_SP SP+-2
          CFI (cfiCond356) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond357) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond357) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond357) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond357) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond357) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond357) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond357) CFA_SP SP+-2
          CFI (cfiCond357) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ZDO_ParseEPListRsp
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond358) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond358) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond358) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond358) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond358) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond358) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond358) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond358) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond358) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond358) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond358) CFA_SP SP+-2
          CFI (cfiCond358) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond359) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond359) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond359) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond359) CFA_SP SP+-2
          CFI (cfiCond359) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ZDO_ParseUserDescRsp
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_406
          CFI (cfiCond360) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond360) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond360) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond360) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond360) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond360) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond360) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond360) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond360) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond360) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond360) CFA_SP SP+-2
          CFI (cfiCond360) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond361 Using cfiCommon0
          CFI (cfiCond361) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond361) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond361) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond361) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond361) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond361) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond361) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond361) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond361) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond361) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond361) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond361) CFA_SP SP+-2
          CFI (cfiCond361) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond362 Using cfiCommon0
          CFI (cfiCond362) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond362) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond362) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond362) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond362) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond362) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond362) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond362) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond362) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond362) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond362) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond362) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond362) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond362) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond362) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond362) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond362) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond362) CFA_SP SP+-2
          CFI (cfiCond362) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond363 Using cfiCommon0
          CFI (cfiCond363) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond363) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond363) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond363) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond363) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond363) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond363) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond363) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond363) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond363) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond363) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond363) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond363) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond363) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond363) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond363) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond363) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond363) CFA_SP SP+-2
          CFI (cfiCond363) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond364) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond364) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond364) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond364) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond364) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond364) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond364) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond364) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond364) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond364) CFA_SP SP+-2
          CFI (cfiCond364) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond365) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond365) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond365) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond365) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond365) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond365) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond365) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond365) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond365) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond365) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond365) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond365) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond365) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond365) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond365) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond365) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond365) CFA_SP SP+-2
          CFI (cfiCond365) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond366) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond366) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond366) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond366) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond366) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond366) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond366) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond366) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond366) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond366) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond366) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond366) CFA_SP SP+-2
          CFI (cfiCond366) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ZDO_ProcessParentAnnce
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond367) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond367) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond367) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond367) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond367) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond367) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond367) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond367) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond367) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond367) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond367) CFA_SP SP+-2
          CFI (cfiCond367) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ZDO_ProcessParentAnnce
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_414
          CFI (cfiCond368) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond368) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond368) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond368) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond368) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond368) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond368) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond368) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond368) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond368) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond368) CFA_SP SP+-2
          CFI (cfiCond368) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ZDO_ProcessParentAnnce
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond369) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond369) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond369) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond369) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond369) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond369) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond369) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond369) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond369) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond369) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond369) CFA_SP SP+-2
          CFI (cfiCond369) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ZDO_ProcessParentAnnce
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond370) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond370) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond370) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond370) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond370) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond370) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond370) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond370) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond370) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond370) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond370) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond370) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond370) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond370) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond370) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond370) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond370) CFA_SP SP+-2
          CFI (cfiCond370) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond371) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond371) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond371) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond371) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond371) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond371) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond371) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond371) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond371) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond371) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond371) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond371) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond371) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond371) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond371) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond371) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond371) CFA_SP SP+-2
          CFI (cfiCond371) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond372) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond372) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond372) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond372) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond372) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond372) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond372) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond372) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond372) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond372) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond372) CFA_SP SP+-2
          CFI (cfiCond372) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ZDMatchSendState
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_419
          CFI (cfiCond373) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond373) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond373) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond373) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond373) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond373) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond373) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond373) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond373) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond373) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond373) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond373) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond373) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond373) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond373) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond373) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond373) CFA_SP SP+-2
          CFI (cfiCond373) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_420
          CFI (cfiCond374) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond374) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond374) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond374) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond374) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond374) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond374) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond374) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond374) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond374) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond374) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond374) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond374) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond374) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond374) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond374) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond374) CFA_SP SP+-2
          CFI (cfiCond374) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_421
          CFI (cfiCond375) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond375) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond375) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond375) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond375) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond375) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond375) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond375) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond375) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond375) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond375) CFA_SP SP+-2
          CFI (cfiCond375) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_422
          CFI (cfiCond376) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond376) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond376) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond376) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond376) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond376) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond376) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond376) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond376) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond376) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond376) CFA_SP SP+-2
          CFI (cfiCond376) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_423
          CFI (cfiCond377) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond377) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond377) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond377) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond377) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond377) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond377) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond377) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond377) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond377) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond377) CFA_SP SP+-2
          CFI (cfiCond377) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_424
          CFI (cfiCond378) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond378) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond378) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond378) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond378) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond378) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond378) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond378) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond378) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond378) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond378) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond378) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond378) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond378) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond378) CFA_SP SP+-2
          CFI (cfiCond378) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_425
          CFI (cfiCond379) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond379) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond379) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond379) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond379) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond379) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond379) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond379) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond379) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond379) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond379) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond379) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond379) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond379) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond379) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond379) CFA_SP SP+-2
          CFI (cfiCond379) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_426
          CFI (cfiCond380) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond380) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond380) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond380) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond380) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond380) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond380) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond380) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond380) CFA_SP SP+-2
          CFI (cfiCond380) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_427
          CFI (cfiCond381) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond381) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond381) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond381) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond381) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond381) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond381) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond381) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond381) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond381) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond381) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond381) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond381) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond381) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond381) CFA_SP SP+-2
          CFI (cfiCond381) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker382 Using cfiCommon1
          CFI (cfiPicker382) NoFunction
          CFI (cfiPicker382) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiCond361
          CFI EndBlock cfiCond362
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiPicker382

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine27:
          CFI Block cfiCond383 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_44
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond384 Using cfiCommon0
          CFI (cfiCond384) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond384) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond384) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond384) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond384) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond384) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond384) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond384) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond384) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond384) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond384) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond384) CFA_SP SP+-2
          CFI (cfiCond384) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond385) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond385) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond385) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond385) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond385) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond385) CFA_SP SP+-2
          CFI (cfiCond385) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond386) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond386) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond386) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond386) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond386) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond386) CFA_SP SP+-2
          CFI (cfiCond386) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiPicker387 Using cfiCommon1
          CFI (cfiPicker387) NoFunction
          CFI (cfiPicker387) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        MOVX      @DPTR,A
        ; Setup parameters for call to function AddrMgrEntryLookupNwk
        ; Setup parameters for call to function AddrMgrEntryUpdate
        MOV       A,#0xb
        RET
          CFI EndBlock cfiCond383
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiPicker387
// 2244 
// 2245 /*********************************************************************
// 2246  * @fn          ZDO_ProcessParentAnnce
// 2247  *
// 2248  * @brief       This function processes a Parent annouce message.
// 2249  *
// 2250  * @param       inMsg - incoming message
// 2251  *
// 2252  * @return      none
// 2253  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2254 void ZDO_ProcessParentAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ProcessParentAnnce:
          CFI Block cfiBlock388 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
        CODE
// 2255 {
        FUNCALL ZDO_ProcessParentAnnce, ZDO_ParseParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, ZDP_ParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnce, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 21
        MOV       A,#-0x15
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
// 2256   ZDO_ParentAnnce_t *parentAnnce;
// 2257   uint8 x;
// 2258   uint8 childCount = 0;
??CrossCallReturnLabel_22:
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
// 2259   uint32 localAge;
// 2260 
// 2261   ZDO_ChildInfoList_t *listHead = NULL;
        MOV       R6,A
        MOV       R7,A
// 2262   ZDO_ChildInfoList_t *listTail;
// 2263   ZDO_ChildInfoList_t *newNode;
// 2264 
// 2265   // Parse incoming message, memory is allocated by the parse function,
// 2266   // it should be free after processing the message
// 2267   parentAnnce = ZDO_ParseParentAnnce( inMsg );
        ; Setup parameters for call to function ZDO_ParseParentAnnce
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_475:
        LCALL     `??ZDO_ParseParentAnnce::?relay`; Banked call to: ZDO_ParseParentAnnce
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine40 & 0xFFFF
// 2268 
// 2269   if ( parentAnnce != NULL )
??CrossCallReturnLabel_363:
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_394:
        JNZ       $+5
        LJMP      ??ZDO_ProcessParentAnnce_0 & 0xFFFF
// 2270   {
// 2271     for ( x = 0; x < parentAnnce->numOfChildren; x++ )
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        SJMP      ??ZDO_ProcessParentAnnce_1
// 2272     {
// 2273       associated_devices_t *dev_ptr;
// 2274       localAge = 0xFFFFFFFF;
// 2275 
// 2276       // If it's an End Device child
// 2277       dev_ptr = AssocGetWithExt( parentAnnce->childInfo[x].extAddr );
// 2278 
// 2279       if ( dev_ptr )
// 2280       {
// 2281         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2282              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
// 2283         {
// 2284           if ( dev_ptr->keepaliveRcv == TRUE )
// 2285           {
// 2286             localAge = dev_ptr->endDev.deviceTimeout - dev_ptr->timeoutCounter;
// 2287           }
// 2288 
// 2289           if ( localAge < parentAnnce->childInfo[x].age )
// 2290           {
// 2291             // Add one element to the list
// 2292             newNode = (ZDO_ChildInfoList_t *)osal_mem_alloc( sizeof(ZDO_ChildInfoList_t) );
// 2293 
// 2294             osal_cpyExtAddr( newNode->child.extAddr, parentAnnce->childInfo[x].extAddr );
// 2295 
// 2296             newNode->child.age = localAge;
// 2297 
// 2298             newNode->next = NULL;
// 2299 
// 2300             if ( listHead == NULL )
// 2301             {
// 2302               // Initialize the head of the list
// 2303               listHead = listTail = newNode;
// 2304             }
// 2305             else
// 2306             {
// 2307               // Add new element to the end
// 2308               listTail->next = newNode;
// 2309 
// 2310               listTail = listTail->next;
// 2311             }
// 2312 
// 2313             childCount++;
// 2314           }
// 2315           else
// 2316           {
// 2317             AssocRemove( parentAnnce->childInfo[x].extAddr );
??ZDO_ProcessParentAnnce_2:
        ; Setup parameters for call to function AssocRemove
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 2318           }
??CrossCallReturnLabel_476:
        LCALL     `??AssocRemove::?relay`; Banked call to: AssocRemove
??ZDO_ProcessParentAnnce_3:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        INC       A
??ZDO_ProcessParentAnnce_1:
        MOVX      @DPTR,A
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine211_0 & 0xFFFF
??CrossCallReturnLabel_373:
        MOV       R0,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,R0
        JC        $+5
        LJMP      ??ZDO_ProcessParentAnnce_4 & 0xFFFF
        MOV       ?V0,#-0x1
        MOV       ?V1,#-0x1
        MOV       ?V2,#-0x1
        MOV       ?V3,#-0x1
        MOVX      A,@DPTR
        MOV       B,#0xc
        MUL       AB
        MOV       R0,A
        MOV       R1,B
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R1
        MOV       R1,A
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_413:
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_184:
        MOV       R1,A
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_414:
        ; Setup parameters for call to function AssocGetWithExt
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_477:
        LCALL     `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ProcessParentAnnce_3
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x1
        XRL       A,R0
        JZ        ??ZDO_ProcessParentAnnce_5
        MOV       A,#0x2
        XRL       A,R0
        JNZ       ??ZDO_ProcessParentAnnce_3
??ZDO_ProcessParentAnnce_5:
        LCALL     ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_255:
        JNZ       ??ZDO_ProcessParentAnnce_6
        LCALL     ?Subroutine122 & 0xFFFF
??CrossCallReturnLabel_204:
        LCALL     ?L_MOV_X
        LCALL     ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_248:
        LCALL     ?L_SUB_X
??ZDO_ProcessParentAnnce_6:
        MOV       A,#0xa
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_116:
        LCALL     ?UL_GE_X
        JNC       $+5
        LJMP      ??ZDO_ProcessParentAnnce_2 & 0xFFFF
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0xe
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine217_0 & 0xFFFF
??CrossCallReturnLabel_430:
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,?V6
        MOV       DPH,?V7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
        MOV       A,?V6
        ADD       A,#0xc
        LCALL     ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_245:
        MOV       A,R6
        ORL       A,R7
        JNZ       ??ZDO_ProcessParentAnnce_7
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,?V6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V7
        MOVX      @DPTR,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine114 & 0xFFFF
??CrossCallReturnLabel_182:
        SJMP      ??CrossCallReturnLabel_415
??ZDO_ProcessParentAnnce_7:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_136:
        MOV       A,?V6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V7
        MOVX      @DPTR,A
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine81 & 0xFFFF
??CrossCallReturnLabel_137:
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_438:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_415:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        INC       A
        MOVX      @DPTR,A
        LJMP      ??ZDO_ProcessParentAnnce_3 & 0xFFFF
// 2319         }
// 2320       }
// 2321     }
// 2322 
// 2323     // If the device has children that match some in the received list,
// 2324     // it should send a unicast Parent_Annce_rsp message.
// 2325     if ( childCount > 0 )
??ZDO_ProcessParentAnnce_4:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JNZ       $+5
        LJMP      ??ZDO_ProcessParentAnnce_8 & 0xFFFF
// 2326     {
// 2327       ZDO_ChildInfo_t *childInfo;
// 2328       zAddrType_t dstAddr;
// 2329 
// 2330       dstAddr.addrMode = (afAddrMode_t)Addr16Bit;
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
// 2331       dstAddr.addr.shortAddr = inMsg->srcAddr.addr.shortAddr;
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine229_0 & 0xFFFF
??CrossCallReturnLabel_508:
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
// 2332 
// 2333       x = 0;
??CrossCallReturnLabel_416:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        MOVX      @DPTR,A
// 2334 
// 2335       childInfo = (ZDO_ChildInfo_t *)osal_mem_alloc( childCount * sizeof(ZDO_ChildInfo_t) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       B,#0xc
        MUL       AB
        MOV       R2,A
        MOV       R3,B
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 2336 
// 2337       if ( childInfo != NULL )
        MOV       A,R2
        ORL       A,?V3
        JNZ       $+5
        LJMP      ??ZDO_ProcessParentAnnce_9 & 0xFFFF
        SJMP      ??ZDO_ProcessParentAnnce_10
// 2338       {
// 2339         // Copy the content of the link list into this buffer
// 2340         while ( listHead != NULL )
// 2341         {
// 2342           listTail = listHead;
??ZDO_ProcessParentAnnce_11:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        LCALL     ?Subroutine14 & 0xFFFF
// 2343 
// 2344           osal_cpyExtAddr( childInfo[x].extAddr,  listHead->child.extAddr );
??CrossCallReturnLabel_11:
        MOV       B,#0xc
        MUL       AB
        MOV       R0,A
        MOV       R1,B
        MOV       A,?V2
        ADD       A,R0
        MOV       ?V0,A
        MOV       A,?V3
        ADDC      A,R1
        MOV       ?V1,A
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2345           childInfo[x].age = listHead->child.age;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?XLOAD_R0123
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?XSTORE_R0123
// 2346 
// 2347           x++;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        INC       A
        MOVX      @DPTR,A
// 2348 
// 2349           listHead = listTail->next;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine62 & 0xFFFF
// 2350 
// 2351           // Free this element of the link list
// 2352           osal_mem_free( listTail );
// 2353         }
??CrossCallReturnLabel_106:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_478:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_ProcessParentAnnce_10:
        MOV       A,R6
        ORL       A,R7
        JNZ       ??ZDO_ProcessParentAnnce_11
// 2354 
// 2355         ZDP_ParentAnnceRsp( (inMsg->TransSeq), dstAddr, childCount,
// 2356                             ((uint8 *)childInfo), 0 );
        ; Setup parameters for call to function ZDP_ParentAnnce
        MOV       ?V0,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       ?V0,#0x1f
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       R0,#?V2
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0x11
        LCALL     ?XSTACK_DISP102_8
        MOV       A,#0xd
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0xf
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??ZDP_ParentAnnce::?relay`; Banked call to: ZDP_ParentAnnce
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2357         
// 2358         
// 2359         osal_mem_free(childInfo);
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V2
        MOV       R3,?V3
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
        SJMP      ??ZDO_ProcessParentAnnce_8
// 2360       }
// 2361       else
// 2362       {
// 2363         while(listHead != NULL)
// 2364         {
// 2365           listTail = listHead;
??ZDO_ProcessParentAnnce_12:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R6
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R7
        MOVX      @DPTR,A
// 2366           listHead = listTail->next;
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine62 & 0xFFFF
// 2367 
// 2368           // Free this element of the link list
// 2369           osal_mem_free( listTail );
// 2370         }  
??CrossCallReturnLabel_107:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_479:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
??ZDO_ProcessParentAnnce_9:
        MOV       A,R6
        ORL       A,R7
        JNZ       ??ZDO_ProcessParentAnnce_12
// 2371       }
// 2372     }
// 2373     
// 2374     // Free memory allocated by parsing function
// 2375     osal_mem_free( parentAnnce );
??ZDO_ProcessParentAnnce_8:
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x4
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
// 2376   }
??CrossCallReturnLabel_480:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2377 }
??ZDO_ProcessParentAnnce_0:
        LJMP      ?Subroutine4 & 0xFFFF
          CFI EndBlock cfiBlock388

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine114:
          CFI Block cfiCond389 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_180
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond390) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond390) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond390) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond390) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond390) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond390) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond390) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond390) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond390) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond390) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond390) CFA_SP SP+-2
          CFI (cfiCond390) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function ZDO_ProcessParentAnnce
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_182
          CFI (cfiCond391) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond391) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond391) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond391) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond391) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond391) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond391) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond391) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond391) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond391) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond391) CFA_SP SP+-2
          CFI (cfiCond391) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ZDO_ParseParentAnnce
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_183
          CFI (cfiCond392) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond392) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond392) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond392) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond392) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond392) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond392) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond392) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond392) CFA_SP SP+-2
          CFI (cfiCond392) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker393 Using cfiCommon1
          CFI (cfiPicker393) NoFunction
          CFI (cfiPicker393) Picker
        LCALL     ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_455:
        RET
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiPicker393

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine103:
          CFI Block cfiCond394 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_431
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond395) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond395) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond395) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond395) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond395) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond395) CFA_SP SP+-2
          CFI (cfiCond395) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiPicker396 Using cfiCommon1
          CFI (cfiPicker396) NoFunction
          CFI (cfiPicker396) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiPicker396
        REQUIRE ??Subroutine217_0
        ; // Fall through to label ??Subroutine217_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine217_0:
          CFI Block cfiCond397 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_428
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond398 Using cfiCommon0
          CFI (cfiCond398) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond398) Conditional ??CrossCallReturnLabel_429
          CFI (cfiCond398) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond398) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond398) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond398) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond398) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond398) CFA_SP SP+-2
          CFI (cfiCond398) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond399 Using cfiCommon0
          CFI (cfiCond399) Function ZDO_ProcessParentAnnce
          CFI (cfiCond399) Conditional ??CrossCallReturnLabel_430
          CFI (cfiCond399) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond399) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond399) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond399) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond399) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond399) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond399) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond399) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond399) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond399) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond399) CFA_SP SP+-2
          CFI (cfiCond399) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond400 Using cfiCommon0
          CFI (cfiCond400) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond400) Conditional ??CrossCallReturnLabel_431
          CFI (cfiCond400) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond400) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond400) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond400) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond400) CFA_SP SP+-2
          CFI (cfiCond400) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond401 Using cfiCommon0
          CFI (cfiCond401) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond401) Conditional ??CrossCallReturnLabel_432
          CFI (cfiCond401) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond401) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond401) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond401) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond401) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond401) CFA_SP SP+-2
          CFI (cfiCond401) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiPicker402 Using cfiCommon1
          CFI (cfiPicker402) NoFunction
          CFI (cfiPicker402) Picker
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R5,A
        RET
          CFI EndBlock cfiCond397
          CFI EndBlock cfiCond398
          CFI EndBlock cfiCond399
          CFI EndBlock cfiCond400
          CFI EndBlock cfiCond401
          CFI EndBlock cfiPicker402

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine92:
          CFI Block cfiCond403 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtBindReq
          CFI Conditional ??CrossCallReturnLabel_441
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond404) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond404) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond404) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond404) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond404) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond404) CFA_SP SP+-2
          CFI (cfiCond404) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond405) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond405) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond405) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond405) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond405) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond405) CFA_SP SP+-2
          CFI (cfiCond405) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiPicker406 Using cfiCommon1
          CFI (cfiPicker406) NoFunction
          CFI (cfiPicker406) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiPicker406
        REQUIRE ??Subroutine218_0
        ; // Fall through to label ??Subroutine218_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine218_0:
          CFI Block cfiCond407 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_433
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond408 Using cfiCommon0
          CFI (cfiCond408) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond408) Conditional ??CrossCallReturnLabel_434
          CFI (cfiCond408) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond408) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond408) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond408) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond408) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond408) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond408) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond408) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond408) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond408) CFA_SP SP+-2
          CFI (cfiCond408) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_435
          CFI (cfiCond409) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond409) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond409) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond409) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond409) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond409) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond409) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond409) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond409) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond409) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond409) CFA_SP SP+-2
          CFI (cfiCond409) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_436
          CFI (cfiCond410) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond410) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond410) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond410) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond410) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond410) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond410) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond410) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond410) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond410) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond410) CFA_SP SP+-2
          CFI (cfiCond410) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_437
          CFI (cfiCond411) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond411) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond411) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond411) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond411) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond411) CFA_SP SP+-2
          CFI (cfiCond411) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond412 Using cfiCommon0
          CFI (cfiCond412) Function ZDO_ProcessParentAnnce
          CFI (cfiCond412) Conditional ??CrossCallReturnLabel_438
          CFI (cfiCond412) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond412) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond412) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond412) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond412) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond412) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond412) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond412) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond412) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond412) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond412) CFA_SP SP+-2
          CFI (cfiCond412) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond413 Using cfiCommon0
          CFI (cfiCond413) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond413) Conditional ??CrossCallReturnLabel_439
          CFI (cfiCond413) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond413) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond413) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond413) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond413) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond413) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond413) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond413) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond413) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond413) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond413) CFA_SP SP+-2
          CFI (cfiCond413) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_440
          CFI (cfiCond414) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond414) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond414) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond414) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond414) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond414) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond414) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond414) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond414) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond414) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond414) CFA_SP SP+-2
          CFI (cfiCond414) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_441
          CFI (cfiCond415) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond415) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond415) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond415) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond415) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond415) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond415) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond415) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond415) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond415) CFA_SP SP+-2
          CFI (cfiCond415) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_442
          CFI (cfiCond416) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond416) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond416) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond416) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond416) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond416) CFA_SP SP+-2
          CFI (cfiCond416) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond417 Using cfiCommon0
          CFI (cfiCond417) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond417) Conditional ??CrossCallReturnLabel_443
          CFI (cfiCond417) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond417) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond417) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond417) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond417) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond417) CFA_SP SP+-2
          CFI (cfiCond417) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiPicker418 Using cfiCommon1
          CFI (cfiPicker418) NoFunction
          CFI (cfiPicker418) Picker
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_514:
        RET
          CFI EndBlock cfiCond407
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiCond412
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiCond417
          CFI EndBlock cfiPicker418

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine81:
          CFI Block cfiCond419 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ZDO_ProcessParentAnnce
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond420) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond420) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond420) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond420) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond420) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond420) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond420) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond420) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond420) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond420) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond420) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond420) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond420) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond420) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond420) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond420) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond420) CFA_SP SP+-2
          CFI (cfiCond420) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker421 Using cfiCommon1
          CFI (cfiPicker421) NoFunction
          CFI (cfiPicker421) Picker
        LCALL     ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_284:
        RET
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiPicker421

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine164:
          CFI Block cfiCond422 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ZDO_ProcessParentAnnce
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_137
          CFI (cfiCond423) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond423) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond423) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond423) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond423) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond423) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond423) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond423) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond423) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond423) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond423) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond423) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond423) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond423) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond423) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond423) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond423) CFA_SP SP+-4
          CFI (cfiCond423) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ZDO_ProcessParentAnnce
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_106
          CFI (cfiCond424) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond424) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond424) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond424) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond424) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond424) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond424) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond424) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond424) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond424) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond424) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond424) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond424) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond424) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond424) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond424) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond424) CFA_SP SP+-4
          CFI (cfiCond424) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function ZDO_ProcessParentAnnce
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_107
          CFI (cfiCond425) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond425) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond425) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond425) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond425) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond425) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond425) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond425) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond425) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond425) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond425) CFA_SP SP+-4
          CFI (cfiCond425) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker426 Using cfiCommon1
          CFI (cfiPicker426) NoFunction
          CFI (cfiPicker426) Picker
        LCALL     ?Subroutine193 & 0xFFFF
??CrossCallReturnLabel_695:
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiPicker426

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine62:
          CFI Block cfiCond427 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ZDO_ProcessParentAnnce
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond428) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond428) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond428) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond428) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond428) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond428) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond428) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond428) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond428) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond428) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond428) CFA_SP SP+-2
          CFI (cfiCond428) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        LCALL     ?Subroutine164 & 0xFFFF
??CrossCallReturnLabel_283:
        LCALL     ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_453:
        ; Setup parameters for call to function osal_mem_free
        ; Setup parameters for call to function osal_mem_free
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine18:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_24
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond431) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond431) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond431) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond431) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond431) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond431) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond431) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond431) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond431) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond431) CFA_SP SP+-2
          CFI (cfiCond431) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond432 Using cfiCommon0
          CFI (cfiCond432) Function ZDO_UpdateAddrManager
          CFI (cfiCond432) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond432) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond432) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond432) CFA_SP SP+-7
          CFI (cfiCond432) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond433 Using cfiCommon0
          CFI (cfiCond433) Function ZDO_ProcessParentAnnce
          CFI (cfiCond433) Conditional ??CrossCallReturnLabel_22
          CFI (cfiCond433) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond433) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond433) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond433) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond433) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond433) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond433) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond433) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond433) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond433) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond433) CFA_SP SP+-2
          CFI (cfiCond433) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond434) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond434) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond434) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond434) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond434) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond434) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond434) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond434) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond434) CFA_SP SP+-2
          CFI (cfiCond434) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker435 Using cfiCommon1
          CFI (cfiPicker435) NoFunction
          CFI (cfiPicker435) Picker
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        ; Setup parameters for call to function AddrMgrExtAddrSet
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiCond432
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiPicker435
// 2378 
// 2379 /*********************************************************************
// 2380  * @fn          ZDO_ProcessParentAnnceRsp
// 2381  *
// 2382  * @brief       This function processes a Parent annouce response message.
// 2383  *
// 2384  * @param       inMsg - incoming message
// 2385  *
// 2386  * @return      none
// 2387  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2388 void ZDO_ProcessParentAnnceRsp( zdoIncomingMsg_t *inMsg )
ZDO_ProcessParentAnnceRsp:
          CFI Block cfiBlock436 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnceRsp
        CODE
// 2389 {
        FUNCALL ZDO_ProcessParentAnnceRsp, ZDO_ParseParentAnnce
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, AssocGetWithExt
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, AssocRemove
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ProcessParentAnnceRsp, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 20, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 20, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 4
        MOV       A,#-0x4
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 20)
// 2390   ZDO_ParentAnnce_t *parentAnnce;
// 2391   uint8 x;
// 2392   uint32 localAge;
// 2393 
// 2394   // Parse incoming message, memory is allocated by the parse function,
// 2395   // it should be free after processing the message
// 2396   parentAnnce = ZDO_ParseParentAnnce( inMsg );
        ; Setup parameters for call to function ZDO_ParseParentAnnce
        LCALL     `??ZDO_ParseParentAnnce::?relay`; Banked call to: ZDO_ParseParentAnnce
        MOV       ?V6,R2
        MOV       ?V7,R3
// 2397 
// 2398   if ( parentAnnce != NULL )
        MOV       A,R2
        ORL       A,?V7
        JNZ       $+5
        LJMP      ??ZDO_ProcessParentAnnceRsp_0 & 0xFFFF
// 2399   {
// 2400     for ( x = 0; x < parentAnnce->numOfChildren; x++ )
        MOV       R6,#0x0
        SJMP      ??ZDO_ProcessParentAnnceRsp_1
// 2401     {
// 2402       associated_devices_t *dev_ptr;
// 2403       localAge = 0xFFFFFFFF;
??ZDO_ProcessParentAnnceRsp_2:
        MOV       ?V0,#-0x1
        MOV       ?V1,#-0x1
        MOV       ?V2,#-0x1
        MOV       ?V3,#-0x1
// 2404 
// 2405       // If it's an End Device child
// 2406       dev_ptr = AssocGetWithExt( parentAnnce->childInfo[x].extAddr );
        MOV       A,R6
        MOV       B,#0xc
        MUL       AB
        MOV       R0,A
        MOV       R1,B
        MOV       A,?V6
        ADD       A,R0
        MOV       R0,A
        MOV       A,?V7
        ADDC      A,R1
        MOV       R1,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_417:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine115 & 0xFFFF
??CrossCallReturnLabel_185:
        LCALL     ?Subroutine13 & 0xFFFF
??CrossCallReturnLabel_446:
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        LCALL     `??AssocGetWithExt::?relay`; Banked call to: AssocGetWithExt
// 2407 
// 2408       if ( dev_ptr )
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ProcessParentAnnceRsp_3
// 2409       {
// 2410         if ( dev_ptr->nodeRelation == CHILD_RFD ||
// 2411              dev_ptr->nodeRelation == CHILD_RFD_RX_IDLE )
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,#0x1
        XRL       A,R0
        JZ        ??ZDO_ProcessParentAnnceRsp_4
        MOV       A,#0x2
        XRL       A,R0
        JNZ       ??ZDO_ProcessParentAnnceRsp_3
// 2412         {
// 2413           if ( dev_ptr->keepaliveRcv == TRUE )
??ZDO_ProcessParentAnnceRsp_4:
        LCALL     ?Subroutine147 & 0xFFFF
??CrossCallReturnLabel_256:
        JNZ       ??ZDO_ProcessParentAnnceRsp_5
// 2414           {
// 2415             localAge = dev_ptr->endDev.deviceTimeout - dev_ptr->timeoutCounter;
        LCALL     ?Subroutine122 & 0xFFFF
// 2416           }
??CrossCallReturnLabel_205:
        LCALL     ?L_MOV_X
        LCALL     ?Subroutine144 & 0xFFFF
??CrossCallReturnLabel_249:
        LCALL     ?L_SUB_X
// 2417 
// 2418           if ( localAge >= parentAnnce->childInfo[x].age )
??ZDO_ProcessParentAnnceRsp_5:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine68 & 0xFFFF
??CrossCallReturnLabel_117:
        LCALL     ?UL_GE_X
        JNC       ??ZDO_ProcessParentAnnceRsp_3
// 2419           {
// 2420             AssocRemove( parentAnnce->childInfo[x].extAddr );
        ; Setup parameters for call to function AssocRemove
        LCALL     ?Subroutine99 & 0xFFFF
// 2421           }
// 2422         }
// 2423       }
// 2424     }
??CrossCallReturnLabel_494:
        LCALL     `??AssocRemove::?relay`; Banked call to: AssocRemove
??ZDO_ProcessParentAnnceRsp_3:
        INC       R6
??ZDO_ProcessParentAnnceRsp_1:
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,R6
        CLR       C
        SUBB      A,R0
        JC        ??ZDO_ProcessParentAnnceRsp_2
// 2425 
// 2426     // Free memory allocated by parsing function
// 2427     osal_mem_free( parentAnnce );
        ; Setup parameters for call to function osal_mem_free
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2428   }
// 2429 }
??ZDO_ProcessParentAnnceRsp_0:
        MOV       A,#0x4
        LJMP      ??Subroutine200_0 & 0xFFFF
          CFI EndBlock cfiBlock436

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine147:
          CFI Block cfiCond437 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_255
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond438) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond438) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond438) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond438) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond438) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond438) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond438) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond438) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond438) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond438) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond438) CFA_SP SP+-2
          CFI (cfiCond438) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker439 Using cfiCommon1
          CFI (cfiPicker439) NoFunction
          CFI (cfiPicker439) Picker
        MOV       A,R2
        ADD       A,#0x1b
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,#0x1
        RET
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiPicker439

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine144:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_248
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_249
          CFI (cfiCond441) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond441) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond441) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond441) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond441) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond441) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond441) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond441) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond441) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond441) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond441) CFA_SP SP+-2
          CFI (cfiCond441) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        MOV       A,R2
        ADD       A,#0x17
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine122:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_204
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond444) CFA_SP SP+-2
          CFI (cfiCond444) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker445 Using cfiCommon1
          CFI (cfiPicker445) NoFunction
          CFI (cfiPicker445) Picker
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_305:
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiPicker445

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine115:
          CFI Block cfiCond446 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_184
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond447) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond447) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond447) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond447) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond447) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond447) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond447) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond447) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond447) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond447) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond447) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond447) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond447) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond447) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond447) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond447) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond447) CFA_SP SP+-2
          CFI (cfiCond447) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker448 Using cfiCommon1
          CFI (cfiPicker448) NoFunction
          CFI (cfiPicker448) Picker
        MOVX      A,@DPTR
        ADD       A,#0x1
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        RET
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiPicker448

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine68:
          CFI Block cfiCond449 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond450) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond450) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond450) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond450) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond450) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond450) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond450) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond450) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond450) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond450) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond450) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond450) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond450) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond450) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond450) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond450) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond450) CFA_SP SP+-2
          CFI (cfiCond450) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiPicker451 Using cfiCommon1
          CFI (cfiPicker451) NoFunction
          CFI (cfiPicker451) Picker
        LCALL     ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_285:
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiPicker451

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine13:
          CFI Block cfiCond452 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnceRsp
          CFI Conditional ??CrossCallReturnLabel_446
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond453) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond453) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond453) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond453) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond453) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond453) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond453) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond453) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond453) CFA_SP SP+-2
          CFI (cfiCond453) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker454 Using cfiCommon1
          CFI (cfiPicker454) NoFunction
          CFI (cfiPicker454) Picker
        MOV       R1,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiPicker454
        REQUIRE ??Subroutine219_0
        ; // Fall through to label ??Subroutine219_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine219_0:
          CFI Block cfiCond455 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_445
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_446
          CFI (cfiCond456) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond456) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond456) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond456) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond456) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond456) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond456) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond456) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond456) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond456) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond456) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond456) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond456) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond456) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond456) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond456) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond456) CFA_SP SP+-2
          CFI (cfiCond456) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_444
          CFI (cfiCond457) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond457) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond457) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond457) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond457) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond457) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond457) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond457) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond457) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond457) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond457) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond457) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond457) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond457) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond457) CFA_SP SP+-2
          CFI (cfiCond457) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker458 Using cfiCommon1
          CFI (cfiPicker458) NoFunction
          CFI (cfiPicker458) Picker
        LCALL     ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_447:
        RET
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiPicker458

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine149:
          CFI Block cfiCond459 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnceRsp
          CFI Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_446
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_444
          CFI (cfiCond460) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond460) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond460) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond460) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond460) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond460) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond460) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond460) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond460) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond460) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond460) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond460) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond460) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond460) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond460) CFA_SP SP+-4
          CFI (cfiCond460) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond461 Using cfiCommon0
          CFI (cfiCond461) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond461) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_445
          CFI (cfiCond461) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond461) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond461) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond461) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond461) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond461) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond461) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond461) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond461) CFA_SP SP+-4
          CFI (cfiCond461) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond462 Using cfiCommon0
          CFI (cfiCond462) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond462) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_0
          CFI (cfiCond462) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond462) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond462) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond462) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond462) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond462) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond462) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond462) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond462) CFA_SP SP+-4
          CFI (cfiCond462) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_1
          CFI (cfiCond463) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond463) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond463) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond463) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond463) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond463) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond463) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond463) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond463) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond463) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond463) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond463) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond463) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond463) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond463) CFA_SP SP+-4
          CFI (cfiCond463) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker464 Using cfiCommon1
          CFI (cfiPicker464) NoFunction
          CFI (cfiPicker464) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiCond461
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiPicker464
        REQUIRE ??Subroutine220_0
        ; // Fall through to label ??Subroutine220_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine220_0:
          CFI Block cfiCond465 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ZDO_ProcessParentAnnce
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_11
          CFI (cfiCond466) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond466) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond466) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond466) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond466) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond466) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond466) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond466) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond466) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond466) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond466) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond466) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond466) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond466) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond466) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond466) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond466) CFA_SP SP+-4
          CFI (cfiCond466) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ZDMatchSendState
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_12
          CFI (cfiCond467) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond467) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond467) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond467) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond467) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond467) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond467) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond467) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond467) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond467) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond467) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond467) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond467) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond467) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond467) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond467) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond467) CFA_SP SP+-4
          CFI (cfiCond467) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_13
          CFI (cfiCond468) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond468) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond468) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond468) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond468) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond468) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond468) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond468) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond468) CFA_SP SP+-4
          CFI (cfiCond468) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_449, ??CrossCallReturnLabel_14
          CFI (cfiCond469) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond469) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond469) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond469) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond469) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond469) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond469) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond469) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond469) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond469) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond469) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond469) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond469) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond469) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond469) CFA_SP SP+-4
          CFI (cfiCond469) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_446
          CFI (cfiCond470) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond470) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond470) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond470) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond470) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond470) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond470) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond470) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond470) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond470) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond470) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond470) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond470) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond470) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond470) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond470) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond470) CFA_SP SP+-4
          CFI (cfiCond470) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_444
          CFI (cfiCond471) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond471) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond471) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond471) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond471) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond471) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond471) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond471) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond471) CFA_SP SP+-4
          CFI (cfiCond471) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_447, ??CrossCallReturnLabel_445
          CFI (cfiCond472) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond472) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond472) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond472) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond472) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond472) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond472) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond472) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond472) CFA_SP SP+-4
          CFI (cfiCond472) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_0
          CFI (cfiCond473) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond473) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond473) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond473) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond473) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond473) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond473) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond473) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond473) CFA_SP SP+-4
          CFI (cfiCond473) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_448, ??CrossCallReturnLabel_1
          CFI (cfiCond474) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond474) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond474) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond474) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond474) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond474) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond474) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond474) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond474) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond474) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond474) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond474) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond474) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond474) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond474) CFA_SP SP+-4
          CFI (cfiCond474) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker475 Using cfiCommon1
          CFI (cfiPicker475) NoFunction
          CFI (cfiPicker475) Picker
        LCALL     ?Subroutine188 & 0xFFFF
??CrossCallReturnLabel_452:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiPicker475
// 2430 
// 2431 /*********************************************************************
// 2432  * @fn          ZDO_BuildSimpleDescBuf
// 2433  *
// 2434  * @brief       Build a byte sequence representation of a Simple Descriptor.
// 2435  *
// 2436  * @param       buf  - pointer to a byte array big enough for data.
// 2437  * @param       desc - SimpleDescriptionFormat_t *
// 2438  *
// 2439  * @return      none
// 2440  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2441 void ZDO_BuildSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_BuildSimpleDescBuf:
          CFI Block cfiBlock476 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
        CODE
// 2442 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2443   byte cnt;
// 2444   uint16 *ptr;
// 2445 
// 2446   *buf++ = desc->EndPoint;
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_562:
        LCALL     ?Subroutine24 & 0xFFFF
// 2447   *buf++ = HI_UINT16( desc->AppProfId );
??CrossCallReturnLabel_37:
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        INC       DPTR
        LCALL     ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_563:
        LCALL     ?Subroutine28 & 0xFFFF
// 2448   *buf++ = LO_UINT16( desc->AppProfId );
??CrossCallReturnLabel_46:
        MOVX      @DPTR,A
// 2449   *buf++ = HI_UINT16( desc->AppDeviceId );
        MOV       A,R4
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R5
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        LCALL     ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_564:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine28 & 0xFFFF
// 2450   *buf++ = LO_UINT16( desc->AppDeviceId );
??CrossCallReturnLabel_47:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine24 & 0xFFFF
// 2451 
// 2452   *buf++ = (byte)(desc->AppDevVer << 4);
??CrossCallReturnLabel_38:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf0
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 2453 
// 2454   *buf++ = desc->AppNumInClusters;
        MOV       A,R4
        ADD       A,#0x6
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_567:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x7
        MOV       R2,A
        JNC       ??ZDO_BuildSimpleDescBuf_0
        INC       R3
// 2455   ptr = desc->pAppInClusterList;
??ZDO_BuildSimpleDescBuf_0:
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ?Subroutine113 & 0xFFFF
// 2456   for ( cnt = 0; cnt < desc->AppNumInClusters; ptr++, cnt++ )
??CrossCallReturnLabel_178:
        SJMP      ??ZDO_BuildSimpleDescBuf_1
// 2457   {
// 2458     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_2:
        LCALL     ?Subroutine29 & 0xFFFF
// 2459     *buf++ = LO_UINT16( *ptr );
// 2460   }
??CrossCallReturnLabel_602:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        JNC       ??ZDO_BuildSimpleDescBuf_3
        INC       R3
??ZDO_BuildSimpleDescBuf_3:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_BuildSimpleDescBuf_4
        INC       R7
??ZDO_BuildSimpleDescBuf_4:
        INC       ?V0
??ZDO_BuildSimpleDescBuf_1:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       ?V1,A
        MOV       A,?V0
        CLR       C
        SUBB      A,?V1
        JC        ??ZDO_BuildSimpleDescBuf_2
// 2461 
// 2462   *buf++ = desc->AppNumOutClusters;
        MOV       A,R4
        ADD       A,#0x9
        LCALL     ?Subroutine72 & 0xFFFF
??CrossCallReturnLabel_568:
        MOVX      @DPTR,A
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
// 2463   ptr = desc->pAppOutClusterList;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine113 & 0xFFFF
// 2464   for ( cnt = 0; cnt < desc->AppNumOutClusters; ptr++, cnt++ )
??CrossCallReturnLabel_179:
        SJMP      ??ZDO_BuildSimpleDescBuf_5
// 2465   {
// 2466     *buf++ = HI_UINT16( *ptr );
??ZDO_BuildSimpleDescBuf_6:
        LCALL     ?Subroutine29 & 0xFFFF
// 2467     *buf++ = LO_UINT16( *ptr );
// 2468   }
??CrossCallReturnLabel_603:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R2
        ADD       A,#0x2
        MOV       R2,A
        JNC       ??ZDO_BuildSimpleDescBuf_7
        INC       R3
??ZDO_BuildSimpleDescBuf_7:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_BuildSimpleDescBuf_8
        INC       R7
??ZDO_BuildSimpleDescBuf_8:
        INC       ?V0
??ZDO_BuildSimpleDescBuf_5:
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V0
        CLR       C
        SUBB      A,R0
        JC        ??ZDO_BuildSimpleDescBuf_6
// 2469 }
        SJMP      ??Subroutine222_0
          CFI EndBlock cfiBlock476

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine113:
          CFI Block cfiCond477 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_178
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond478) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond478) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond478) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond478) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond478) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond478) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond478) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond478) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond478) CFA_SP SP+-2
          CFI (cfiCond478) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker479 Using cfiCommon1
          CFI (cfiPicker479) NoFunction
          CFI (cfiPicker479) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine221_0 & 0xFFFF
??CrossCallReturnLabel_454:
        MOV       ?V0,#0x0
        RET
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiPicker479

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine174:
          CFI Block cfiCond480 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ZDMatchSendState
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_90
          CFI (cfiCond481) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond481) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond481) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond481) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond481) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond481) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond481) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond481) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond481) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond481) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond481) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond481) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond481) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond481) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond481) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond481) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond481) CFA_SP SP+-4
          CFI (cfiCond481) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_146
          CFI (cfiCond482) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond482) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond482) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond482) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond482) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond482) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond482) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond482) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond482) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond482) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond482) CFA_SP SP+-4
          CFI (cfiCond482) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_147
          CFI (cfiCond483) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond483) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond483) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond483) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond483) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond483) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond483) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond483) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond483) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond483) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond483) CFA_SP SP+-4
          CFI (cfiCond483) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker484 Using cfiCommon1
          CFI (cfiPicker484) NoFunction
          CFI (cfiPicker484) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiPicker484
        REQUIRE ??Subroutine221_0
        ; // Fall through to label ??Subroutine221_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine221_0:
          CFI Block cfiCond485 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_365
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond486 Using cfiCommon0
          CFI (cfiCond486) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond486) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_366
          CFI (cfiCond486) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond486) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond486) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond486) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond486) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond486) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond486) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond486) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond486) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond486) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond486) CFA_SP SP+-4
          CFI (cfiCond486) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond487 Using cfiCommon0
          CFI (cfiCond487) Function ZDO_UpdateNwkStatus
          CFI (cfiCond487) Conditional ??CrossCallReturnLabel_458, ??CrossCallReturnLabel_367
          CFI (cfiCond487) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond487) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond487) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond487) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond487) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond487) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond487) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond487) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond487) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond487) CFA_SP SP+-4
          CFI (cfiCond487) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ZDO_CompareClusterLists
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_180
          CFI (cfiCond488) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond488) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond488) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond488) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond488) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond488) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond488) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond488) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond488) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond488) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond488) CFA_SP SP+-4
          CFI (cfiCond488) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_181
          CFI (cfiCond489) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond489) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond489) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond489) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond489) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond489) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond489) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond489) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond489) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond489) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond489) CFA_SP SP+-4
          CFI (cfiCond489) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ZDO_ProcessParentAnnce
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_182
          CFI (cfiCond490) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond490) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond490) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond490) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond490) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond490) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond490) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond490) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond490) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond490) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond490) CFA_SP SP+-4
          CFI (cfiCond490) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ZDO_ParseParentAnnce
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_455, ??CrossCallReturnLabel_183
          CFI (cfiCond491) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond491) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond491) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond491) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond491) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond491) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond491) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond491) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond491) CFA_SP SP+-4
          CFI (cfiCond491) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ZDO_ProcessParentAnnce
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_453, ??CrossCallReturnLabel_106
          CFI (cfiCond492) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond492) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond492) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond492) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond492) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond492) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond492) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond492) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond492) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond492) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond492) CFA_SP SP+-4
          CFI (cfiCond492) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function ZDO_ProcessParentAnnce
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_453, ??CrossCallReturnLabel_107
          CFI (cfiCond493) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond493) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond493) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond493) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond493) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond493) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond493) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond493) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond493) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond493) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond493) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond493) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond493) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond493) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond493) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond493) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond493) CFA_SP SP+-4
          CFI (cfiCond493) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_178
          CFI (cfiCond494) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond494) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond494) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond494) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond494) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond494) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond494) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond494) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond494) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond494) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond494) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond494) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond494) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond494) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond494) CFA_SP SP+-4
          CFI (cfiCond494) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_454, ??CrossCallReturnLabel_179
          CFI (cfiCond495) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond495) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond495) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond495) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond495) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond495) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond495) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond495) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond495) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond495) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond495) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond495) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond495) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond495) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond495) CFA_SP SP+-4
          CFI (cfiCond495) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ZDMatchSendState
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_89
          CFI (cfiCond496) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond496) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond496) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond496) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond496) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond496) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond496) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond496) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond496) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond496) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond496) CFA_SP SP+-4
          CFI (cfiCond496) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ZDMatchSendState
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_456, ??CrossCallReturnLabel_90
          CFI (cfiCond497) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond497) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond497) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond497) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond497) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond497) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond497) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond497) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond497) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond497) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond497) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond497) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond497) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond497) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond497) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond497) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond497) CFA_SP SP+-4
          CFI (cfiCond497) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_146
          CFI (cfiCond498) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond498) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond498) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond498) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond498) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond498) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond498) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond498) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond498) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond498) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond498) CFA_SP SP+-4
          CFI (cfiCond498) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_457, ??CrossCallReturnLabel_147
          CFI (cfiCond499) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond499) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond499) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond499) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond499) CFA_SP SP+-4
          CFI (cfiCond499) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker500 Using cfiCommon1
          CFI (cfiPicker500) NoFunction
          CFI (cfiPicker500) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        RET
          CFI EndBlock cfiCond485
          CFI EndBlock cfiCond486
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiPicker500

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine28:
          CFI Block cfiCond501 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond502 Using cfiCommon0
          CFI (cfiCond502) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond502) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond502) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond502) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond502) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond502) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond502) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond502) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond502) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond502) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond502) CFA_SP SP+-2
          CFI (cfiCond502) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker503 Using cfiCommon1
          CFI (cfiPicker503) NoFunction
          CFI (cfiPicker503) Picker
        INC       DPTR
        LCALL     ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_266:
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond501
          CFI EndBlock cfiCond502
          CFI EndBlock cfiPicker503

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine24:
          CFI Block cfiCond504 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_34
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond505 Using cfiCommon0
          CFI (cfiCond505) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond505) Conditional ??CrossCallReturnLabel_35
          CFI (cfiCond505) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond505) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond505) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond505) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond505) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond505) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond505) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond505) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond505) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond505) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond505) CFA_SP SP+-2
          CFI (cfiCond505) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond506 Using cfiCommon0
          CFI (cfiCond506) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond506) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond506) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond506) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond506) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond506) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond506) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond506) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond506) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond506) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond506) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond506) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond506) CFA_SP SP+-2
          CFI (cfiCond506) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond507) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond507) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond507) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond507) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond507) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond507) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond507) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond507) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond507) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond507) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond507) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond507) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond507) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond507) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond507) CFA_SP SP+-2
          CFI (cfiCond507) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond508) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond508) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond508) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond508) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond508) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond508) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond508) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond508) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond508) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond508) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond508) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond508) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond508) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond508) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond508) CFA_SP SP+-2
          CFI (cfiCond508) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_39
          CFI (cfiCond509) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond509) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond509) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond509) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond509) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond509) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond509) CFA_SP SP+-2
          CFI (cfiCond509) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker510 Using cfiCommon1
          CFI (cfiPicker510) NoFunction
          CFI (cfiPicker510) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function APSME_BindRequest
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond504
          CFI EndBlock cfiCond505
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiPicker510

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine5:
          CFI Block cfiBlock511 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 21)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI Invalid
        LCALL     ?DEALLOC_XSTACK8
          CFI EndBlock cfiBlock511
        REQUIRE ??Subroutine222_0
        ; // Fall through to label ??Subroutine222_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine222_0:
          CFI Block cfiBlock512 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R7,#0x6
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock512
// 2470 
// 2471 #if ( ZG_BUILD_COORDINATOR_TYPE )
// 2472 #ifdef ZDO_ENDDEVICEBIND_RESPONSE
// 2473 /*********************************************************************
// 2474  * @fn      ZDO_MatchEndDeviceBind()
// 2475  *
// 2476  * @brief
// 2477  *
// 2478  *   Called to match end device binding requests
// 2479  *
// 2480  * @param  bindReq  - binding request information
// 2481  * @param  SecurityUse - Security enable/disable
// 2482  *
// 2483  * @return  none
// 2484  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2485 void ZDO_MatchEndDeviceBind( ZDEndDeviceBind_t *bindReq )
ZDO_MatchEndDeviceBind:
          CFI Block cfiBlock513 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
        CODE
// 2486 {
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memset
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CopyMatchInfo
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_CompareClusterLists
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 30, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 30, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 29, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 29, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDMatchSendState
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 31, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 31, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_MatchEndDeviceBind, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 26, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 26, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 10
        MOV       A,#-0xa
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       ?V6,R2
        MOV       ?V7,R3
// 2487   zAddrType_t dstAddr;
// 2488   uint8 sendRsp = FALSE;
        MOV       R6,#0x0
// 2489   uint8 status;
// 2490 
// 2491   // Is this the first request?
// 2492   if ( matchED == NULL )
        MOV       DPTR,#matchED
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_395:
        JNZ       ??ZDO_MatchEndDeviceBind_0
// 2493   {
// 2494     // Create match info structure
// 2495     matchED = (ZDMatchEndDeviceBind_t *)osal_mem_alloc( sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R2,#0x37
        MOV       R3,#0x0
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       DPTR,#matchED
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        LCALL     ?Subroutine35 & 0xFFFF
// 2496     if ( matchED )
??CrossCallReturnLabel_56:
        JZ        ??ZDO_MatchEndDeviceBind_1
// 2497     {
// 2498       // Clear the structure
// 2499       osal_memset( (uint8 *)matchED, 0, sizeof ( ZDMatchEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memset
        MOV       R4,#0x37
        MOV       R5,#0x0
        MOV       R1,#0x0
        LCALL     `??osal_memset::?relay`; Banked call to: osal_memset
// 2500 
// 2501       // Copy the first request's information
// 2502       if ( !ZDO_CopyMatchInfo( &(matchED->ed1), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV       R4,?V6
        MOV       R5,?V7
        MOV       DPTR,#matchED
        LCALL     ??Subroutine224_0 & 0xFFFF
// 2503       {
// 2504         status = ZDP_NO_ENTRY;
// 2505         sendRsp = TRUE;
// 2506       }
// 2507     }
??CrossCallReturnLabel_481:
        LCALL     `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV       A,R1
        JNZ       ??ZDO_MatchEndDeviceBind_2
// 2508     else
// 2509     {
// 2510       status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_1:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        LJMP      ??ZDO_MatchEndDeviceBind_3 & 0xFFFF
// 2511       sendRsp = TRUE;
// 2512     }
// 2513 
// 2514     if ( !sendRsp )
// 2515     {
// 2516       // Set into the correct state
// 2517       matchED->state = ZDMATCH_WAIT_REQ;
??ZDO_MatchEndDeviceBind_2:
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_667:
        LCALL     ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_257:
        MOV       A,#0x1
        MOVX      @DPTR,A
// 2518 
// 2519       // Setup the timeout
// 2520       APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV       R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV       R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV       DPTR,#AIB_MaxBindingTime
        LCALL     ??Subroutine224_0 & 0xFFFF
// 2521     }
// 2522   }
??CrossCallReturnLabel_482:
        LCALL     `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        LJMP      ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
// 2523   else
// 2524   {
// 2525       matchED->state = ZDMATCH_SENDING_BINDS;
??ZDO_MatchEndDeviceBind_0:
        MOVX      A,@DPTR
        XCH       A,R0
        LCALL     ?Subroutine148 & 0xFFFF
??CrossCallReturnLabel_258:
        MOV       A,#0x2
        MOVX      @DPTR,A
// 2526 
// 2527       // Copy the 2nd request's information
// 2528       if ( !ZDO_CopyMatchInfo( &(matchED->ed2), bindReq ) )
        ; Setup parameters for call to function ZDO_CopyMatchInfo
        MOV       R4,?V6
        MOV       R5,?V7
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_174:
        LCALL     `??ZDO_CopyMatchInfo::?relay`; Banked call to: ZDO_CopyMatchInfo
        MOV       A,R1
        JNZ       ??ZDO_MatchEndDeviceBind_5
// 2529       {
// 2530         status = ZDP_NO_ENTRY;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
// 2531         sendRsp = TRUE;
        MOV       R6,#0x1
// 2532       }
// 2533 
// 2534       // Make a source match for ed1
// 2535       matchED->ed1numMatched = ZDO_CompareClusterLists(
// 2536                   matchED->ed1.numOutClusters, matchED->ed1.outClusters,
// 2537                   matchED->ed2.numInClusters, matchED->ed2.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_5:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV       ?V0,#ZDOBuildBuf & 0xff
        MOV       ?V1,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_668:
        ADD       A,#0x29
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_669:
        ADD       A,#0x28
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_685:
        ADD       A,#0x15
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_126:
        ADD       A,#0x14
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_225:
        MOV       R1,A
        LCALL     `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R1
        MOV       R0,A
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_670:
        ADD       A,#0x31
        LCALL     ?Subroutine21 & 0xFFFF
// 2538       if ( matchED->ed1numMatched )
??CrossCallReturnLabel_516:
        ADD       A,#0x31
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_226:
        MOV       R0,A
        MOV       ?V2,#0x0
        JZ        ??ZDO_MatchEndDeviceBind_6
// 2539       {
// 2540         // Save the match list
// 2541         matchED->ed1Matched = osal_mem_alloc( (short)(matchED->ed1numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_190:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_671:
        ADD       A,#0x32
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        LCALL     ??Subroutine234_0 & 0xFFFF
// 2542         if ( matchED->ed1Matched )
??CrossCallReturnLabel_534:
        JZ        ??ZDO_MatchEndDeviceBind_7
// 2543         {
// 2544           osal_memcpy( matchED->ed1Matched, ZDOBuildBuf, (matchED->ed1numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL     ?Subroutine56 & 0xFFFF
// 2545         }
??CrossCallReturnLabel_94:
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_460:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        SJMP      ??ZDO_MatchEndDeviceBind_6
// 2546         else
// 2547         {
// 2548           // Allocation error, stop
// 2549           status = ZDP_NO_ENTRY;
??ZDO_MatchEndDeviceBind_7:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
// 2550           sendRsp = TRUE;
        MOV       R6,#0x1
// 2551         }
// 2552       }
// 2553 
// 2554       // Make a source match for ed2
// 2555       matchED->ed2numMatched = ZDO_CompareClusterLists(
// 2556                   matchED->ed2.numOutClusters, matchED->ed2.outClusters,
// 2557                   matchED->ed1.numInClusters, matchED->ed1.inClusters, ZDOBuildBuf );
??ZDO_MatchEndDeviceBind_6:
        ; Setup parameters for call to function ZDO_CompareClusterLists
        MOV       ?V4,#ZDOBuildBuf & 0xff
        MOV       ?V5,#(ZDOBuildBuf >> 8) & 0xff
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 28)
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_672:
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?PUSH_XSTACK8_X_TWO
          CFI CFA_XSP16 add(XSP16, 30)
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_673:
        ADD       A,#0x11
        LCALL     ?Subroutine82 & 0xFFFF
??CrossCallReturnLabel_686:
        ADD       A,#0x2c
        LCALL     ?Subroutine75 & 0xFFFF
??CrossCallReturnLabel_127:
        ADD       A,#0x2b
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_227:
        MOV       R1,A
        LCALL     `??ZDO_CompareClusterLists::?relay`; Banked call to: ZDO_CompareClusterLists
        MOV       A,#0x4
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
        MOV       A,R1
        MOV       R0,A
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_674:
        ADD       A,#0x34
        LCALL     ?Subroutine21 & 0xFFFF
// 2558       if ( matchED->ed2numMatched )
??CrossCallReturnLabel_517:
        ADD       A,#0x34
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_228:
        JZ        ??ZDO_MatchEndDeviceBind_8
// 2559       {
// 2560         // Save the match list
// 2561         matchED->ed2Matched = osal_mem_alloc( (short)(matchED->ed2numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_191:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_675:
        ADD       A,#0x35
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        LCALL     ??Subroutine234_0 & 0xFFFF
// 2562         if ( matchED->ed2Matched )
??CrossCallReturnLabel_535:
        JZ        ??ZDO_MatchEndDeviceBind_9
// 2563         {
// 2564           osal_memcpy( matchED->ed2Matched, ZDOBuildBuf, (matchED->ed2numMatched * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 29)
        LCALL     ?Subroutine57 & 0xFFFF
// 2565         }
??CrossCallReturnLabel_506:
        LCALL     ??Subroutine223_0 & 0xFFFF
??CrossCallReturnLabel_461:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 2566         else
// 2567         {
// 2568           // Allocation error, stop
// 2569           status = ZDP_NO_ENTRY;
// 2570           sendRsp = TRUE;
// 2571         }
// 2572       }
// 2573 
// 2574       if ( (sendRsp == FALSE) && (matchED->ed1numMatched || matchED->ed2numMatched) )
??ZDO_MatchEndDeviceBind_8:
        MOV       A,R6
        MOV       C,0xE0 /* A   */.0
        JC        ??ZDO_MatchEndDeviceBind_10
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_95:
        JNZ       ??ZDO_MatchEndDeviceBind_11
        LCALL     ?Subroutine57 & 0xFFFF
??CrossCallReturnLabel_507:
        JZ        ??ZDO_MatchEndDeviceBind_10
// 2575       {
// 2576         // Do the first unbind/bind state
// 2577         ZDMatchSendState( ZDMATCH_REASON_START, ZDP_SUCCESS, 0 );
??ZDO_MatchEndDeviceBind_11:
        ; Setup parameters for call to function ZDMatchSendState
        MOV       R3,#0x0
        MOV       R2,#0x0
        MOV       R1,#0x0
        LCALL     `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2578       }
// 2579       else
// 2580       {
// 2581         status = ZDP_NO_MATCH;
// 2582         sendRsp = TRUE;
// 2583       }
// 2584   }
// 2585 
// 2586   if ( sendRsp )
        LJMP      ??ZDO_MatchEndDeviceBind_4 & 0xFFFF
??ZDO_MatchEndDeviceBind_9:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x78
        MOVX      @DPTR,A
??ZDO_MatchEndDeviceBind_10:
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7a
??ZDO_MatchEndDeviceBind_3:
        MOVX      @DPTR,A
// 2587   {
// 2588     // send response to this requester
// 2589     dstAddr.addrMode = Addr16Bit;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine46 & 0xFFFF
// 2590     dstAddr.addr.shortAddr = bindReq->srcAddr;
??CrossCallReturnLabel_78:
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_439:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
// 2591     ZDP_EndDeviceBindRsp( bindReq->TransSeq, &dstAddr, status, bindReq->SecurityUse );
??CrossCallReturnLabel_418:
        ; Setup parameters for call to function ZDP_SendData
        MOV       DPL,?V6
        MOV       DPH,?V7
        INC       DPTR
        LCALL     ??Subroutine225_0 & 0xFFFF
??CrossCallReturnLabel_498:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,?V6
        MOV       R3,?V7
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 2592 
// 2593     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_112:
        JNZ       ??ZDO_MatchEndDeviceBind_12
// 2594     {
// 2595       // send response to first requester
// 2596       dstAddr.addrMode = Addr16Bit;
        MOV       A,#0x9
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        MOVX      @DPTR,A
// 2597       dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
        LCALL     ?Subroutine53 & 0xFFFF
// 2598       ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, status, matchED->ed1.SecurityUse );
// 2599     }
??CrossCallReturnLabel_509:
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine11 & 0xFFFF
??CrossCallReturnLabel_6:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 27)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 29)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 31)
        MOV       R1,#0x1
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP102_8
        MOV       DPTR,#matchED
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_483:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 26)
// 2600 
// 2601     // Process ended - release memory used
// 2602     ZDO_RemoveMatchMemory();
??ZDO_MatchEndDeviceBind_12:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL     `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2603   }
// 2604 }
??ZDO_MatchEndDeviceBind_4:
        MOV       A,#0xa
        LJMP      ??Subroutine200_0 & 0xFFFF
          CFI EndBlock cfiBlock513

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine148:
          CFI Block cfiCond514 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_257
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond515 Using cfiCommon0
          CFI (cfiCond515) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond515) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond515) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond515) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond515) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond515) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond515) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond515) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond515) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond515) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond515) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond515) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond515) CFA_SP SP+-2
          CFI (cfiCond515) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker516 Using cfiCommon1
          CFI (cfiPicker516) NoFunction
          CFI (cfiPicker516) Picker
        ADD       A,#0x2e
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond514
          CFI EndBlock cfiCond515
          CFI EndBlock cfiPicker516

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine135:
          CFI Block cfiCond517 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_222
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond518) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond518) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond518) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond518) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond518) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond518) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond518) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond518) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond518) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond518) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond518) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond518) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond518) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond518) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond518) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond518) CFA_SP SP+-2
          CFI (cfiCond518) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond519) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond519) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond519) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond519) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond519) CFA_SP SP+-2
          CFI (cfiCond519) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_225
          CFI (cfiCond520) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond520) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond520) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond520) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond520) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond520) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond520) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond520) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond520) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond520) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond520) CFA_SP SP+-2
          CFI (cfiCond520) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond521) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond521) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond521) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond521) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond521) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond521) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond521) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond521) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond521) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond521) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond521) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond521) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond521) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond521) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond521) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond521) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond521) CFA_SP SP+-2
          CFI (cfiCond521) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond522) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond522) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond522) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond522) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond522) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond522) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond522) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond522) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond522) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond522) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond522) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond522) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond522) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond522) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond522) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond522) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond522) CFA_SP SP+-2
          CFI (cfiCond522) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_228
          CFI (cfiCond523) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond523) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond523) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond523) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond523) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond523) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond523) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond523) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond523) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond523) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond523) CFA_SP SP+-2
          CFI (cfiCond523) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ZDMatchSendState
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_229
          CFI (cfiCond524) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond524) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond524) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond524) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond524) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond524) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond524) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond524) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond524) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond524) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond524) CFA_SP SP+-2
          CFI (cfiCond524) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ZDMatchSendState
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond525) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond525) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond525) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond525) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond525) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond525) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond525) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond525) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond525) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond525) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond525) CFA_SP SP+-2
          CFI (cfiCond525) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker526 Using cfiCommon1
          CFI (cfiPicker526) NoFunction
          CFI (cfiPicker526) Picker
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_541:
        RET
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiPicker526

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine119:
          CFI Block cfiCond527 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_462
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ZDO_CopyMatchInfo
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond528) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond528) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond528) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond528) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond528) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond528) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond528) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond528) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond528) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond528) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond528) CFA_SP SP+-2
          CFI (cfiCond528) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker529 Using cfiCommon1
          CFI (cfiPicker529) NoFunction
          CFI (cfiPicker529) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V5
        MOV       DPH,A
        MOVX      A,@DPTR
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiPicker529
        REQUIRE ??Subroutine223_0
        ; // Fall through to label ??Subroutine223_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine223_0:
          CFI Block cfiCond530 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_459
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_460
          CFI (cfiCond531) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond531) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond531) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond531) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond531) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond531) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond531) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond531) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond531) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond531) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond531) CFA_SP SP+-2
          CFI (cfiCond531) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond532 Using cfiCommon0
          CFI (cfiCond532) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond532) Conditional ??CrossCallReturnLabel_461
          CFI (cfiCond532) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond532) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond532) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond532) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond532) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond532) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond532) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond532) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond532) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond532) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond532) CFA_SP SP+-2
          CFI (cfiCond532) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond533 Using cfiCommon0
          CFI (cfiCond533) Function ZDO_CopyMatchInfo
          CFI (cfiCond533) Conditional ??CrossCallReturnLabel_462
          CFI (cfiCond533) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond533) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond533) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond533) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond533) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond533) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond533) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond533) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond533) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond533) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond533) CFA_SP SP+-2
          CFI (cfiCond533) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ZDO_CopyMatchInfo
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_463
          CFI (cfiCond534) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond534) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond534) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond534) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond534) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond534) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond534) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond534) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond534) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond534) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond534) CFA_SP SP+-2
          CFI (cfiCond534) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker535 Using cfiCommon1
          CFI (cfiPicker535) NoFunction
          CFI (cfiPicker535) Picker
        ADD       A,0xE0 /* A   */
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        RET
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiCond532
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiPicker535

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine99:
          CFI Block cfiCond536 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_488
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond537 Using cfiCommon0
          CFI (cfiCond537) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond537) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond537) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond537) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond537) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond537) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond537) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond537) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond537) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond537) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond537) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond537) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond537) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond537) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond537) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond537) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond537) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond537) CFA_SP SP+-2
          CFI (cfiCond537) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond538) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond538) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond538) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond538) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond538) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond538) CFA_SP SP+-2
          CFI (cfiCond538) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_491
          CFI (cfiCond539) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond539) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond539) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond539) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond539) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond539) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond539) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond539) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond539) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond539) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond539) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond539) CFA_SP SP+-2
          CFI (cfiCond539) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_492
          CFI (cfiCond540) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond540) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond540) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond540) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond540) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond540) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond540) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond540) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond540) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond540) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond540) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond540) CFA_SP SP+-2
          CFI (cfiCond540) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_493
          CFI (cfiCond541) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond541) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond541) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond541) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond541) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond541) CFA_SP SP+-2
          CFI (cfiCond541) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond542 Using cfiCommon0
          CFI (cfiCond542) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond542) Conditional ??CrossCallReturnLabel_494
          CFI (cfiCond542) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond542) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond542) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond542) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond542) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond542) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond542) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond542) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond542) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond542) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond542) CFA_SP SP+-2
          CFI (cfiCond542) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond543 Using cfiCommon0
          CFI (cfiCond543) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond543) Conditional ??CrossCallReturnLabel_495
          CFI (cfiCond543) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond543) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond543) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond543) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond543) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond543) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond543) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond543) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond543) CFA_SP SP+-2
          CFI (cfiCond543) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker544 Using cfiCommon1
          CFI (cfiPicker544) NoFunction
          CFI (cfiPicker544) Picker
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
          CFI EndBlock cfiCond536
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiCond542
          CFI EndBlock cfiCond543
          CFI EndBlock cfiPicker544
        REQUIRE ??Subroutine224_0
        ; // Fall through to label ??Subroutine224_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine224_0:
          CFI Block cfiCond545 Using cfiCommon0
          CFI Function ZDO_StartDevice
          CFI Conditional ??CrossCallReturnLabel_464
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond546 Using cfiCommon0
          CFI (cfiCond546) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond546) Conditional ??CrossCallReturnLabel_465
          CFI (cfiCond546) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond546) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond546) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond546) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond546) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond546) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond546) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond546) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond546) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond546) CFA_SP SP+-2
          CFI (cfiCond546) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_466
          CFI (cfiCond547) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond547) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond547) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond547) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond547) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond547) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond547) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond547) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond547) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond547) CFA_SP SP+-2
          CFI (cfiCond547) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_467
          CFI (cfiCond548) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond548) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond548) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond548) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond548) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond548) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond548) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond548) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond548) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond548) CFA_SP SP+-2
          CFI (cfiCond548) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond549 Using cfiCommon0
          CFI (cfiCond549) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond549) Conditional ??CrossCallReturnLabel_468
          CFI (cfiCond549) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond549) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond549) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond549) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond549) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond549) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond549) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond549) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond549) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond549) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond549) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond549) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond549) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond549) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond549) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond549) CFA_SP SP+-2
          CFI (cfiCond549) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond550 Using cfiCommon0
          CFI (cfiCond550) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond550) Conditional ??CrossCallReturnLabel_469
          CFI (cfiCond550) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond550) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond550) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond550) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond550) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond550) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond550) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond550) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond550) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond550) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond550) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond550) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond550) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond550) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond550) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond550) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond550) CFA_SP SP+-2
          CFI (cfiCond550) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond551 Using cfiCommon0
          CFI (cfiCond551) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond551) Conditional ??CrossCallReturnLabel_470
          CFI (cfiCond551) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond551) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond551) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond551) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond551) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond551) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond551) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond551) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond551) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond551) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond551) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond551) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond551) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond551) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond551) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond551) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond551) CFA_SP SP+-2
          CFI (cfiCond551) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_471
          CFI (cfiCond552) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond552) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond552) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond552) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond552) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond552) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond552) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond552) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond552) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond552) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond552) CFA_SP SP+-2
          CFI (cfiCond552) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_472
          CFI (cfiCond553) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond553) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond553) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond553) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond553) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond553) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond553) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond553) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond553) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond553) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond553) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond553) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond553) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond553) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond553) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond553) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond553) CFA_SP SP+-2
          CFI (cfiCond553) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_473
          CFI (cfiCond554) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond554) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond554) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond554) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond554) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond554) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond554) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond554) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond554) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond554) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond554) CFA_SP SP+-2
          CFI (cfiCond554) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_474
          CFI (cfiCond555) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond555) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond555) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond555) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond555) CFA_SP SP+-2
          CFI (cfiCond555) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ZDO_ProcessParentAnnce
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_475
          CFI (cfiCond556) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond556) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond556) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond556) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond556) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond556) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond556) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond556) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond556) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond556) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond556) CFA_SP SP+-2
          CFI (cfiCond556) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ZDO_ProcessParentAnnce
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_476
          CFI (cfiCond557) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond557) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond557) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond557) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond557) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond557) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond557) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond557) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond557) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond557) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond557) CFA_SP SP+-2
          CFI (cfiCond557) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ZDO_ProcessParentAnnce
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_477
          CFI (cfiCond558) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond558) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond558) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond558) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond558) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond558) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond558) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond558) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond558) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond558) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond558) CFA_SP SP+-2
          CFI (cfiCond558) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ZDO_ProcessParentAnnce
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_478
          CFI (cfiCond559) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond559) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond559) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond559) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond559) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond559) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond559) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond559) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond559) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond559) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond559) CFA_SP SP+-2
          CFI (cfiCond559) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ZDO_ProcessParentAnnce
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_479
          CFI (cfiCond560) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond560) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond560) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond560) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond560) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond560) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond560) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond560) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond560) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond560) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond560) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond560) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond560) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond560) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond560) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond560) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond560) CFA_SP SP+-2
          CFI (cfiCond560) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond561 Using cfiCommon0
          CFI (cfiCond561) Function ZDO_ProcessParentAnnce
          CFI (cfiCond561) Conditional ??CrossCallReturnLabel_480
          CFI (cfiCond561) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond561) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond561) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond561) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond561) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond561) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond561) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond561) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond561) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond561) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond561) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond561) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond561) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond561) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond561) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond561) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond561) CFA_SP SP+-2
          CFI (cfiCond561) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond562 Using cfiCommon0
          CFI (cfiCond562) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond562) Conditional ??CrossCallReturnLabel_481
          CFI (cfiCond562) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond562) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond562) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond562) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond562) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond562) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond562) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond562) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond562) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond562) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond562) CFA_SP SP+-2
          CFI (cfiCond562) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_482
          CFI (cfiCond563) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond563) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond563) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond563) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond563) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond563) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond563) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond563) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond563) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond563) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond563) CFA_SP SP+-2
          CFI (cfiCond563) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_483
          CFI (cfiCond564) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond564) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond564) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond564) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond564) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond564) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond564) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond564) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond564) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond564) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond564) CFA_SP SP+-2
          CFI (cfiCond564) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ZDO_RemoveMatchMemory
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_484
          CFI (cfiCond565) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond565) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond565) CFA_SP SP+-7
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ZDMatchSendState
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_485
          CFI (cfiCond566) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond566) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond566) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond566) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond566) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond566) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond566) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond566) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond566) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond566) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond566) CFA_SP SP+-2
          CFI (cfiCond566) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ZDMatchSendState
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_486
          CFI (cfiCond567) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond567) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond567) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond567) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond567) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond567) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond567) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond567) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond567) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond567) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond567) CFA_SP SP+-2
          CFI (cfiCond567) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_487
          CFI (cfiCond568) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond568) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond568) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond568) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond568) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond568) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond568) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond568) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond568) CFA_SP SP+-2
          CFI (cfiCond568) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_488
          CFI (cfiCond569) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond569) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond569) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond569) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond569) CFA_SP SP+-2
          CFI (cfiCond569) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_489
          CFI (cfiCond570) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond570) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond570) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond570) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond570) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond570) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond570) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond570) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond570) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond570) CFA_SP SP+-2
          CFI (cfiCond570) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_490
          CFI (cfiCond571) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond571) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond571) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond571) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond571) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond571) CFA_SP SP+-2
          CFI (cfiCond571) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_491
          CFI (cfiCond572) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond572) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond572) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond572) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond572) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond572) CFA_SP SP+-2
          CFI (cfiCond572) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_492
          CFI (cfiCond573) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond573) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond573) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond573) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond573) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond573) CFA_SP SP+-2
          CFI (cfiCond573) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond574 Using cfiCommon0
          CFI (cfiCond574) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond574) Conditional ??CrossCallReturnLabel_493
          CFI (cfiCond574) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond574) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond574) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond574) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond574) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond574) CFA_SP SP+-2
          CFI (cfiCond574) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond575 Using cfiCommon0
          CFI (cfiCond575) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond575) Conditional ??CrossCallReturnLabel_494
          CFI (cfiCond575) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond575) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond575) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond575) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond575) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond575) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond575) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond575) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond575) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond575) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond575) CFA_SP SP+-2
          CFI (cfiCond575) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_495
          CFI (cfiCond576) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond576) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond576) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond576) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond576) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond576) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond576) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond576) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond576) CFA_SP SP+-2
          CFI (cfiCond576) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker577 Using cfiCommon1
          CFI (cfiPicker577) NoFunction
          CFI (cfiPicker577) Picker
        LCALL     ??Subroutine226_0 & 0xFFFF
??CrossCallReturnLabel_504:
        RET
          CFI EndBlock cfiCond545
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiCond549
          CFI EndBlock cfiCond550
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiCond561
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiCond574
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiPicker577

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine95:
          CFI Block cfiCond578 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_499
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ZDMatchSendState
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond579) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond579) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond579) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond579) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond579) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond579) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond579) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond579) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond579) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond579) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond579) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond579) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond579) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond579) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond579) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond579) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond579) CFA_SP SP+-2
          CFI (cfiCond579) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker580 Using cfiCommon1
          CFI (cfiPicker580) NoFunction
          CFI (cfiPicker580) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiPicker580
        REQUIRE ??Subroutine225_0
        ; // Fall through to label ??Subroutine225_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine225_0:
          CFI Block cfiCond581 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_496
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_497
          CFI (cfiCond582) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond582) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond582) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond582) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond582) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond582) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond582) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond582) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond582) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond582) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond582) CFA_SP SP+-2
          CFI (cfiCond582) CFA_XSP16 add(XSP16, 62)
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_498
          CFI (cfiCond583) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond583) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond583) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond583) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond583) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond583) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond583) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond583) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond583) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond583) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond583) CFA_SP SP+-2
          CFI (cfiCond583) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ZDO_ProcessUserDescSet
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_499
          CFI (cfiCond584) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond584) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond584) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond584) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond584) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond584) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond584) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond584) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond584) CFA_SP SP+-2
          CFI (cfiCond584) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond585 Using cfiCommon0
          CFI (cfiCond585) Function ZDMatchSendState
          CFI (cfiCond585) Conditional ??CrossCallReturnLabel_500
          CFI (cfiCond585) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond585) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond585) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond585) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond585) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond585) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond585) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond585) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond585) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond585) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond585) CFA_SP SP+-2
          CFI (cfiCond585) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker586 Using cfiCommon1
          CFI (cfiPicker586) NoFunction
          CFI (cfiPicker586) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiCond585
          CFI EndBlock cfiPicker586

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine75:
          CFI Block cfiCond587 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond588) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond588) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond588) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond588) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond588) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond588) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond588) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond588) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond588) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond588) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond588) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond588) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond588) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond588) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond588) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond588) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond588) CFA_SP SP+-2
          CFI (cfiCond588) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker589 Using cfiCommon1
          CFI (cfiPicker589) NoFunction
          CFI (cfiPicker589) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        LCALL     ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_501:
        LCALL     ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_692:
        RET
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiPicker589

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine175:
          CFI Block cfiCond590 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_501, ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_501, ??CrossCallReturnLabel_127
          CFI (cfiCond591) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond591) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond591) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond591) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond591) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond591) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond591) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond591) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond591) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond591) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond591) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond591) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond591) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond591) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond591) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond591) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond591) CFA_SP SP+-4
          CFI (cfiCond591) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_159
          CFI (cfiCond592) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond592) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond592) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond592) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond592) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond592) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond592) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond592) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond592) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond592) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond592) CFA_SP SP+-4
          CFI (cfiCond592) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_158
          CFI (cfiCond593) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond593) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond593) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond593) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond593) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond593) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond593) CFA_SP SP+-4
          CFI (cfiCond593) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker594 Using cfiCommon1
          CFI (cfiPicker594) NoFunction
          CFI (cfiPicker594) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiPicker594
        REQUIRE ??Subroutine226_0
        ; // Fall through to label ??Subroutine226_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine226_0:
          CFI Block cfiCond595 Using cfiCommon0
          CFI Function ZDO_EndDeviceTimeoutCB
          CFI Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_340
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_341
          CFI (cfiCond596) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond596) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond596) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond596) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond596) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond596) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond596) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond596) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond596) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond596) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond596) CFA_SP SP+-4
          CFI (cfiCond596) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ZDO_RemoveMatchMemory
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_342
          CFI (cfiCond597) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond597) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond597) CFA_SP SP+-9
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ZDO_RemoveMatchMemory
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_343
          CFI (cfiCond598) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond598) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond598) CFA_SP SP+-9
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function ZDO_RemoveMatchMemory
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_344
          CFI (cfiCond599) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond599) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond599) CFA_SP SP+-9
          CFI Block cfiCond600 Using cfiCommon0
          CFI (cfiCond600) Function ZDO_RemoveMatchMemory
          CFI (cfiCond600) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_345
          CFI (cfiCond600) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond600) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond600) CFA_SP SP+-9
          CFI Block cfiCond601 Using cfiCommon0
          CFI (cfiCond601) Function ZDO_RemoveMatchMemory
          CFI (cfiCond601) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_346
          CFI (cfiCond601) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond601) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond601) CFA_SP SP+-9
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ZDO_RemoveMatchMemory
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_347
          CFI (cfiCond602) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond602) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond602) CFA_SP SP+-9
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ZDO_CopyMatchInfo
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_338
          CFI (cfiCond603) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond603) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond603) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond603) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond603) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond603) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond603) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond603) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond603) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond603) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond603) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond603) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond603) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond603) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond603) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond603) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond603) CFA_SP SP+-4
          CFI (cfiCond603) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ZDO_CopyMatchInfo
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_339
          CFI (cfiCond604) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond604) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond604) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond604) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond604) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond604) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond604) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond604) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond604) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond604) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond604) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond604) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond604) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond604) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond604) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond604) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond604) CFA_SP SP+-4
          CFI (cfiCond604) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_503, ??CrossCallReturnLabel_337
          CFI (cfiCond605) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond605) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond605) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond605) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond605) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond605) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond605) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond605) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond605) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond605) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond605) CFA_SP SP+-4
          CFI (cfiCond605) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_488
          CFI (cfiCond606) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond606) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond606) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond606) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond606) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond606) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond606) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond606) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond606) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond606) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond606) CFA_SP SP+-4
          CFI (cfiCond606) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_489
          CFI (cfiCond607) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond607) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond607) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond607) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond607) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond607) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond607) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond607) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond607) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond607) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond607) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond607) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond607) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond607) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond607) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond607) CFA_SP SP+-4
          CFI (cfiCond607) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_490
          CFI (cfiCond608) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond608) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond608) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond608) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond608) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond608) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond608) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond608) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond608) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond608) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond608) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond608) CFA_SP SP+-4
          CFI (cfiCond608) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_491
          CFI (cfiCond609) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond609) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond609) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond609) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond609) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond609) CFA_SP SP+-4
          CFI (cfiCond609) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_492
          CFI (cfiCond610) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond610) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond610) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond610) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond610) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond610) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond610) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond610) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond610) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond610) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond610) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond610) CFA_SP SP+-4
          CFI (cfiCond610) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_493
          CFI (cfiCond611) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond611) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond611) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond611) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond611) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond611) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond611) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond611) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond611) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond611) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond611) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond611) CFA_SP SP+-4
          CFI (cfiCond611) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_494
          CFI (cfiCond612) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond612) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond612) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond612) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond612) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond612) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond612) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond612) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond612) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond612) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond612) CFA_SP SP+-4
          CFI (cfiCond612) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_495
          CFI (cfiCond613) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond613) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond613) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond613) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond613) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond613) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond613) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond613) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond613) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond613) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond613) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond613) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond613) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond613) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond613) CFA_SP SP+-4
          CFI (cfiCond613) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ZDO_StartDevice
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_464
          CFI (cfiCond614) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond614) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond614) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond614) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond614) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond614) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond614) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond614) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond614) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond614) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond614) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond614) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond614) CFA_SP SP+-4
          CFI (cfiCond614) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_465
          CFI (cfiCond615) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond615) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond615) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond615) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond615) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond615) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond615) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond615) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond615) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond615) CFA_SP SP+-4
          CFI (cfiCond615) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_466
          CFI (cfiCond616) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond616) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond616) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond616) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond616) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond616) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond616) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond616) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond616) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond616) CFA_SP SP+-4
          CFI (cfiCond616) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_467
          CFI (cfiCond617) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond617) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond617) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond617) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond617) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond617) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond617) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond617) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond617) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond617) CFA_SP SP+-4
          CFI (cfiCond617) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_468
          CFI (cfiCond618) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond618) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond618) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond618) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond618) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond618) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond618) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond618) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond618) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond618) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond618) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond618) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond618) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond618) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond618) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond618) CFA_SP SP+-4
          CFI (cfiCond618) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_469
          CFI (cfiCond619) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond619) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond619) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond619) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond619) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond619) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond619) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond619) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond619) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond619) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond619) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond619) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond619) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond619) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond619) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond619) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond619) CFA_SP SP+-4
          CFI (cfiCond619) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_470
          CFI (cfiCond620) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond620) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond620) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond620) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond620) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond620) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond620) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond620) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond620) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond620) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond620) CFA_SP SP+-4
          CFI (cfiCond620) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_471
          CFI (cfiCond621) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond621) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond621) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond621) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond621) CFA_SP SP+-4
          CFI (cfiCond621) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_472
          CFI (cfiCond622) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond622) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond622) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond622) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond622) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond622) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond622) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond622) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond622) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond622) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond622) CFA_SP SP+-4
          CFI (cfiCond622) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_473
          CFI (cfiCond623) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond623) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond623) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond623) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond623) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond623) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond623) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond623) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond623) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond623) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond623) CFA_SP SP+-4
          CFI (cfiCond623) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_474
          CFI (cfiCond624) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond624) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond624) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond624) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond624) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond624) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond624) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond624) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond624) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond624) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond624) CFA_SP SP+-4
          CFI (cfiCond624) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ZDO_ProcessParentAnnce
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_475
          CFI (cfiCond625) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond625) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond625) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond625) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond625) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond625) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond625) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond625) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond625) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond625) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond625) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond625) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond625) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond625) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond625) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond625) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond625) CFA_SP SP+-4
          CFI (cfiCond625) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ZDO_ProcessParentAnnce
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_476
          CFI (cfiCond626) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond626) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond626) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond626) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond626) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond626) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond626) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond626) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond626) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond626) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond626) CFA_SP SP+-4
          CFI (cfiCond626) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ZDO_ProcessParentAnnce
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_477
          CFI (cfiCond627) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond627) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond627) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond627) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond627) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond627) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond627) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond627) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond627) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond627) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond627) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond627) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond627) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond627) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond627) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond627) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond627) CFA_SP SP+-4
          CFI (cfiCond627) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ZDO_ProcessParentAnnce
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_478
          CFI (cfiCond628) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond628) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond628) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond628) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond628) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond628) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond628) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond628) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond628) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond628) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond628) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond628) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond628) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond628) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond628) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond628) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond628) CFA_SP SP+-4
          CFI (cfiCond628) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond629 Using cfiCommon0
          CFI (cfiCond629) Function ZDO_ProcessParentAnnce
          CFI (cfiCond629) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_479
          CFI (cfiCond629) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond629) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond629) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond629) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond629) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond629) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond629) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond629) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond629) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond629) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond629) CFA_SP SP+-4
          CFI (cfiCond629) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond630 Using cfiCommon0
          CFI (cfiCond630) Function ZDO_ProcessParentAnnce
          CFI (cfiCond630) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_480
          CFI (cfiCond630) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond630) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond630) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond630) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond630) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond630) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond630) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond630) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond630) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond630) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond630) CFA_SP SP+-4
          CFI (cfiCond630) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_481
          CFI (cfiCond631) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond631) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond631) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond631) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond631) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond631) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond631) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond631) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond631) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond631) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond631) CFA_SP SP+-4
          CFI (cfiCond631) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_482
          CFI (cfiCond632) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond632) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond632) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond632) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond632) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond632) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond632) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond632) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond632) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond632) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond632) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond632) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond632) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond632) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond632) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond632) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond632) CFA_SP SP+-4
          CFI (cfiCond632) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_483
          CFI (cfiCond633) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond633) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond633) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond633) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond633) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond633) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond633) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond633) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond633) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond633) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond633) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond633) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond633) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond633) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond633) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond633) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond633) CFA_SP SP+-4
          CFI (cfiCond633) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ZDO_RemoveMatchMemory
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_484
          CFI (cfiCond634) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond634) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond634) CFA_SP SP+-9
          CFI Block cfiCond635 Using cfiCommon0
          CFI (cfiCond635) Function ZDMatchSendState
          CFI (cfiCond635) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_485
          CFI (cfiCond635) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond635) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond635) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond635) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond635) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond635) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond635) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond635) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond635) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond635) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond635) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond635) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond635) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond635) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond635) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond635) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond635) CFA_SP SP+-4
          CFI (cfiCond635) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond636 Using cfiCommon0
          CFI (cfiCond636) Function ZDMatchSendState
          CFI (cfiCond636) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_486
          CFI (cfiCond636) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond636) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond636) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond636) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond636) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond636) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond636) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond636) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond636) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond636) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond636) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond636) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond636) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond636) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond636) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond636) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond636) CFA_SP SP+-4
          CFI (cfiCond636) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_504, ??CrossCallReturnLabel_487
          CFI (cfiCond637) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond637) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond637) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond637) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond637) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond637) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond637) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond637) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond637) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond637) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond637) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond637) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond637) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond637) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond637) CFA_SP SP+-4
          CFI (cfiCond637) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_501, ??CrossCallReturnLabel_126
          CFI (cfiCond638) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond638) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond638) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond638) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond638) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond638) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond638) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond638) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond638) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond638) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond638) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond638) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond638) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond638) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond638) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond638) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond638) CFA_SP SP+-4
          CFI (cfiCond638) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_501, ??CrossCallReturnLabel_127
          CFI (cfiCond639) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond639) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond639) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond639) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond639) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond639) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond639) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond639) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond639) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond639) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond639) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond639) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond639) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond639) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond639) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond639) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond639) CFA_SP SP+-4
          CFI (cfiCond639) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_159
          CFI (cfiCond640) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond640) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond640) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond640) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond640) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond640) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond640) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond640) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond640) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond640) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond640) CFA_SP SP+-4
          CFI (cfiCond640) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_502, ??CrossCallReturnLabel_158
          CFI (cfiCond641) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond641) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond641) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond641) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond641) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond641) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond641) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond641) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond641) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond641) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond641) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond641) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond641) CFA_SP SP+-4
          CFI (cfiCond641) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker642 Using cfiCommon1
          CFI (cfiPicker642) NoFunction
          CFI (cfiPicker642) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        RET
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiCond600
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiCond629
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiCond635
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiPicker642

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine167:
          CFI Block cfiCond643 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_126
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_127
          CFI (cfiCond644) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond644) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond644) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond644) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond644) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond644) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond644) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond644) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond644) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond644) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond644) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond644) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond644) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond644) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond644) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond644) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond644) CFA_SP SP+-4
          CFI (cfiCond644) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_112
          CFI (cfiCond645) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond645) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond645) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond645) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond645) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond645) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond645) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond645) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond645) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond645) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond645) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond645) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond645) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond645) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond645) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond645) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond645) CFA_SP SP+-4
          CFI (cfiCond645) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function ZDMatchSendState
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_113
          CFI (cfiCond646) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond646) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond646) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond646) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond646) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond646) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond646) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond646) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond646) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond646) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond646) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond646) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond646) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond646) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond646) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond646) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond646) CFA_SP SP+-4
          CFI (cfiCond646) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_94
          CFI (cfiCond647) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond647) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond647) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond647) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond647) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond647) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond647) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond647) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond647) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond647) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond647) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond647) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond647) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond647) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond647) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond647) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond647) CFA_SP SP+-4
          CFI (cfiCond647) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_95
          CFI (cfiCond648) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond648) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond648) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond648) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond648) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond648) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond648) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond648) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond648) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond648) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond648) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond648) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond648) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond648) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond648) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond648) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond648) CFA_SP SP+-4
          CFI (cfiCond648) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ZDMatchSendState
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_96
          CFI (cfiCond649) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond649) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond649) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond649) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond649) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond649) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond649) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond649) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond649) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond649) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond649) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond649) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond649) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond649) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond649) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond649) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond649) CFA_SP SP+-4
          CFI (cfiCond649) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker650 Using cfiCommon1
          CFI (cfiPicker650) NoFunction
          CFI (cfiPicker650) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiPicker650
        REQUIRE ??Subroutine227_0
        ; // Fall through to label ??Subroutine227_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine227_0:
          CFI Block cfiCond651 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_119
          CFI (cfiCond652) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond652) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond652) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond652) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond652) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond652) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond652) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond652) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond652) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond652) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond652) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond652) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond652) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond652) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond652) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond652) CFA_SP SP+-4
          CFI (cfiCond652) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_687, ??CrossCallReturnLabel_99
          CFI (cfiCond653) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond653) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond653) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond653) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond653) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond653) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond653) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond653) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond653) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond653) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond653) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond653) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond653) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond653) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond653) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond653) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond653) CFA_SP SP+-4
          CFI (cfiCond653) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_687, ??CrossCallReturnLabel_100
          CFI (cfiCond654) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond654) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond654) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond654) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond654) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond654) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond654) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond654) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond654) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond654) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond654) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond654) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond654) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond654) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond654) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond654) CFA_SP SP+-4
          CFI (cfiCond654) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_506
          CFI (cfiCond655) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond655) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond655) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond655) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond655) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond655) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond655) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond655) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond655) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond655) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond655) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond655) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond655) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond655) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond655) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond655) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond655) CFA_SP SP+-4
          CFI (cfiCond655) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_507
          CFI (cfiCond656) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond656) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond656) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond656) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond656) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond656) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond656) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond656) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond656) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond656) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond656) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond656) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond656) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond656) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond656) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond656) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond656) CFA_SP SP+-4
          CFI (cfiCond656) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ZDMatchSendState
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_505
          CFI (cfiCond657) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond657) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond657) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond657) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond657) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond657) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond657) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond657) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond657) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond657) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond657) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond657) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond657) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond657) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond657) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond657) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond657) CFA_SP SP+-4
          CFI (cfiCond657) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_122
          CFI (cfiCond658) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond658) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond658) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond658) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond658) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond658) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond658) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond658) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond658) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond658) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond658) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond658) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond658) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond658) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond658) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond658) CFA_SP SP+-4
          CFI (cfiCond658) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ZDO_ParseAddrRsp
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_123
          CFI (cfiCond659) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond659) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond659) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond659) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond659) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond659) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond659) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond659) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond659) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond659) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond659) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond659) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond659) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond659) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond659) CFA_SP SP+-4
          CFI (cfiCond659) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_685
          CFI (cfiCond660) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond660) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond660) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond660) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond660) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond660) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond660) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond660) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond660) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond660) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond660) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond660) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond660) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond660) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond660) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond660) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond660) CFA_SP SP+-4
          CFI (cfiCond660) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_686
          CFI (cfiCond661) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond661) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond661) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond661) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond661) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond661) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond661) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond661) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond661) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond661) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond661) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond661) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond661) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond661) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond661) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond661) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond661) CFA_SP SP+-4
          CFI (cfiCond661) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_667
          CFI (cfiCond662) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond662) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond662) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond662) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond662) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond662) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond662) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond662) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond662) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond662) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond662) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond662) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond662) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond662) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond662) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond662) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond662) CFA_SP SP+-4
          CFI (cfiCond662) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_668
          CFI (cfiCond663) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond663) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond663) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond663) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond663) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond663) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond663) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond663) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond663) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond663) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond663) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond663) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond663) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond663) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond663) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond663) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond663) CFA_SP SP+-4
          CFI (cfiCond663) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_669
          CFI (cfiCond664) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond664) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond664) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond664) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond664) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond664) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond664) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond664) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond664) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond664) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond664) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond664) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond664) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond664) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond664) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond664) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond664) CFA_SP SP+-4
          CFI (cfiCond664) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_670
          CFI (cfiCond665) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond665) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond665) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond665) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond665) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond665) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond665) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond665) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond665) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond665) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond665) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond665) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond665) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond665) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond665) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond665) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond665) CFA_SP SP+-4
          CFI (cfiCond665) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_671
          CFI (cfiCond666) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond666) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond666) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond666) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond666) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond666) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond666) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond666) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond666) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond666) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond666) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond666) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond666) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond666) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond666) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond666) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond666) CFA_SP SP+-4
          CFI (cfiCond666) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_672
          CFI (cfiCond667) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond667) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond667) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond667) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond667) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond667) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond667) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond667) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond667) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond667) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond667) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond667) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond667) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond667) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond667) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond667) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond667) CFA_SP SP+-4
          CFI (cfiCond667) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_673
          CFI (cfiCond668) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond668) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond668) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond668) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond668) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond668) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond668) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond668) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond668) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond668) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond668) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond668) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond668) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond668) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond668) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond668) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond668) CFA_SP SP+-4
          CFI (cfiCond668) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_674
          CFI (cfiCond669) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond669) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond669) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond669) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond669) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond669) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond669) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond669) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond669) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond669) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond669) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond669) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond669) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond669) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond669) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond669) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond669) CFA_SP SP+-4
          CFI (cfiCond669) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_675
          CFI (cfiCond670) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond670) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond670) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond670) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond670) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond670) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond670) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond670) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond670) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond670) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond670) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond670) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond670) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond670) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond670) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond670) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond670) CFA_SP SP+-4
          CFI (cfiCond670) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function ZDO_RemoveMatchMemory
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_676
          CFI (cfiCond671) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond671) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond671) CFA_SP SP+-9
          CFI Block cfiCond672 Using cfiCommon0
          CFI (cfiCond672) Function ZDO_RemoveMatchMemory
          CFI (cfiCond672) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_677
          CFI (cfiCond672) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond672) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond672) CFA_SP SP+-9
          CFI Block cfiCond673 Using cfiCommon0
          CFI (cfiCond673) Function ZDO_RemoveMatchMemory
          CFI (cfiCond673) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_678
          CFI (cfiCond673) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond673) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond673) CFA_SP SP+-9
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function ZDO_RemoveMatchMemory
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_679
          CFI (cfiCond674) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond674) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond674) CFA_SP SP+-9
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function ZDO_RemoveMatchMemory
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_680
          CFI (cfiCond675) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond675) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond675) CFA_SP SP+-9
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function ZDMatchSendState
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_681
          CFI (cfiCond676) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond676) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond676) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond676) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond676) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond676) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond676) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond676) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond676) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond676) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond676) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond676) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond676) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond676) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond676) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond676) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond676) CFA_SP SP+-4
          CFI (cfiCond676) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond677 Using cfiCommon0
          CFI (cfiCond677) Function ZDMatchSendState
          CFI (cfiCond677) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_682
          CFI (cfiCond677) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond677) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond677) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond677) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond677) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond677) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond677) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond677) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond677) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond677) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond677) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond677) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond677) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond677) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond677) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond677) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond677) CFA_SP SP+-4
          CFI (cfiCond677) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond678 Using cfiCommon0
          CFI (cfiCond678) Function ZDMatchSendState
          CFI (cfiCond678) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_683
          CFI (cfiCond678) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond678) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond678) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond678) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond678) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond678) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond678) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond678) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond678) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond678) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond678) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond678) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond678) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond678) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond678) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond678) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond678) CFA_SP SP+-5
          CFI (cfiCond678) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function ZDMatchSendState
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_684
          CFI (cfiCond679) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond679) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond679) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond679) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond679) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond679) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond679) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond679) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond679) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond679) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond679) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond679) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond679) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond679) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond679) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond679) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond679) CFA_SP SP+-4
          CFI (cfiCond679) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_660
          CFI (cfiCond680) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond680) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond680) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond680) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond680) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond680) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond680) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond680) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond680) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond680) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond680) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond680) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond680) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond680) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond680) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond680) CFA_SP SP+-4
          CFI (cfiCond680) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_661
          CFI (cfiCond681) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond681) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond681) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond681) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond681) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond681) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond681) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond681) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond681) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond681) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond681) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond681) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond681) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond681) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond681) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond681) CFA_SP SP+-4
          CFI (cfiCond681) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_662
          CFI (cfiCond682) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond682) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond682) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond682) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond682) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond682) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond682) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond682) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond682) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond682) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond682) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond682) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond682) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond682) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond682) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond682) CFA_SP SP+-4
          CFI (cfiCond682) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_663
          CFI (cfiCond683) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond683) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond683) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond683) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond683) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond683) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond683) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond683) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond683) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond683) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond683) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond683) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond683) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond683) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond683) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond683) CFA_SP SP+-4
          CFI (cfiCond683) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond684 Using cfiCommon0
          CFI (cfiCond684) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond684) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_664
          CFI (cfiCond684) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond684) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond684) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond684) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond684) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond684) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond684) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond684) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond684) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond684) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond684) CFA_SP SP+-4
          CFI (cfiCond684) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function ZDMatchSendState
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_665
          CFI (cfiCond685) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond685) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond685) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond685) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond685) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond685) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond685) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond685) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond685) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond685) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond685) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond685) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond685) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond685) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond685) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond685) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond685) CFA_SP SP+-4
          CFI (cfiCond685) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_666
          CFI (cfiCond686) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond686) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond686) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond686) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond686) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond686) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond686) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond686) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond686) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond686) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond686) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond686) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond686) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond686) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond686) CFA_SP SP+-4
          CFI (cfiCond686) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_126
          CFI (cfiCond687) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond687) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond687) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond687) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond687) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond687) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond687) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond687) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond687) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond687) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond687) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond687) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond687) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond687) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond687) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond687) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond687) CFA_SP SP+-4
          CFI (cfiCond687) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_127
          CFI (cfiCond688) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond688) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond688) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond688) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond688) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond688) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond688) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond688) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond688) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond688) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond688) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond688) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond688) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond688) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond688) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond688) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond688) CFA_SP SP+-4
          CFI (cfiCond688) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_112
          CFI (cfiCond689) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond689) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond689) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond689) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond689) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond689) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond689) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond689) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond689) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond689) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond689) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond689) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond689) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond689) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond689) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond689) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond689) CFA_SP SP+-4
          CFI (cfiCond689) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ZDMatchSendState
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_113
          CFI (cfiCond690) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond690) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond690) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond690) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond690) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond690) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond690) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond690) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond690) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond690) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond690) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond690) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond690) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond690) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond690) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond690) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond690) CFA_SP SP+-4
          CFI (cfiCond690) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_94
          CFI (cfiCond691) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond691) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond691) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond691) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond691) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond691) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond691) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond691) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond691) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond691) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond691) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond691) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond691) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond691) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond691) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond691) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond691) CFA_SP SP+-4
          CFI (cfiCond691) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_95
          CFI (cfiCond692) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond692) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond692) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond692) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond692) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond692) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond692) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond692) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond692) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond692) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond692) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond692) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond692) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond692) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond692) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond692) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond692) CFA_SP SP+-4
          CFI (cfiCond692) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function ZDMatchSendState
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_96
          CFI (cfiCond693) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond693) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond693) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond693) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond693) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond693) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond693) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond693) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond693) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond693) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond693) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond693) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond693) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond693) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond693) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond693) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond693) CFA_SP SP+-4
          CFI (cfiCond693) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker694 Using cfiCommon1
          CFI (cfiPicker694) NoFunction
          CFI (cfiPicker694) Picker
        LCALL     ?Subroutine193 & 0xFFFF
??CrossCallReturnLabel_698:
        RET
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiCond672
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiCond677
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiPicker694

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine193:
          CFI Block cfiCond695 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_695, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_136
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ZDO_ProcessParentAnnce
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_695, ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_137
          CFI (cfiCond696) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond696) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond696) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond696) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond696) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond696) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond696) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond696) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond696) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond696) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond696) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond696) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond696) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond696) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond696) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond696) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond696) CFA_SP SP+-6
          CFI (cfiCond696) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function ZDO_ProcessParentAnnce
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_695, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_106
          CFI (cfiCond697) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond697) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond697) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond697) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond697) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond697) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond697) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond697) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond697) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond697) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond697) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond697) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond697) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond697) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond697) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond697) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond697) CFA_SP SP+-6
          CFI (cfiCond697) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ZDO_ProcessParentAnnce
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_695, ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_107
          CFI (cfiCond698) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond698) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond698) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond698) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond698) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond698) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond698) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond698) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond698) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond698) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond698) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond698) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond698) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond698) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond698) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond698) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond698) CFA_SP SP+-6
          CFI (cfiCond698) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_126
          CFI (cfiCond699) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond699) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond699) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond699) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond699) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond699) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond699) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond699) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond699) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond699) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond699) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond699) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond699) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond699) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond699) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond699) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond699) CFA_SP SP+-6
          CFI (cfiCond699) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_692, ??CrossCallReturnLabel_127
          CFI (cfiCond700) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond700) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond700) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond700) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond700) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond700) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond700) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond700) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond700) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond700) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond700) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond700) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond700) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond700) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond700) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond700) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond700) CFA_SP SP+-6
          CFI (cfiCond700) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_112
          CFI (cfiCond701) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond701) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond701) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond701) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond701) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond701) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond701) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond701) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond701) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond701) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond701) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond701) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond701) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond701) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond701) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond701) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond701) CFA_SP SP+-6
          CFI (cfiCond701) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ZDMatchSendState
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_691, ??CrossCallReturnLabel_113
          CFI (cfiCond702) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond702) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond702) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond702) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond702) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond702) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond702) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond702) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond702) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond702) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond702) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond702) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond702) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond702) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond702) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond702) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond702) CFA_SP SP+-6
          CFI (cfiCond702) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_94
          CFI (cfiCond703) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond703) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond703) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond703) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond703) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond703) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond703) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond703) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond703) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond703) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond703) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond703) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond703) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond703) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond703) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond703) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond703) CFA_SP SP+-6
          CFI (cfiCond703) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_95
          CFI (cfiCond704) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond704) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond704) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond704) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond704) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond704) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond704) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond704) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond704) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond704) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond704) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond704) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond704) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond704) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond704) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond704) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond704) CFA_SP SP+-6
          CFI (cfiCond704) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ZDMatchSendState
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_690, ??CrossCallReturnLabel_96
          CFI (cfiCond705) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond705) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond705) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond705) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond705) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond705) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond705) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond705) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond705) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond705) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond705) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond705) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond705) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond705) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond705) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond705) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond705) CFA_SP SP+-6
          CFI (cfiCond705) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_118
          CFI (cfiCond706) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond706) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond706) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond706) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond706) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond706) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond706) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond706) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond706) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond706) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond706) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond706) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond706) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond706) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond706) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond706) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond706) CFA_SP SP+-6
          CFI (cfiCond706) CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_688, ??CrossCallReturnLabel_119
          CFI (cfiCond707) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond707) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond707) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond707) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond707) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond707) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond707) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond707) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond707) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond707) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond707) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond707) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond707) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond707) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond707) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond707) CFA_SP SP+-6
          CFI (cfiCond707) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_687, ??CrossCallReturnLabel_99
          CFI (cfiCond708) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond708) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond708) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond708) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond708) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond708) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond708) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond708) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond708) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond708) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond708) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond708) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond708) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond708) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond708) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond708) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond708) CFA_SP SP+-6
          CFI (cfiCond708) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond709 Using cfiCommon0
          CFI (cfiCond709) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond709) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_687, ??CrossCallReturnLabel_100
          CFI (cfiCond709) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond709) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond709) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond709) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond709) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond709) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond709) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond709) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond709) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond709) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond709) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond709) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond709) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond709) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond709) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond709) CFA_SP SP+-6
          CFI (cfiCond709) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond710 Using cfiCommon0
          CFI (cfiCond710) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond710) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_506
          CFI (cfiCond710) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond710) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond710) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond710) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond710) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond710) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond710) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond710) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond710) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond710) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond710) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond710) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond710) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond710) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond710) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond710) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond710) CFA_SP SP+-6
          CFI (cfiCond710) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond711 Using cfiCommon0
          CFI (cfiCond711) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond711) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_507
          CFI (cfiCond711) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond711) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond711) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond711) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond711) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond711) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond711) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond711) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond711) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond711) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond711) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond711) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond711) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond711) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond711) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond711) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond711) CFA_SP SP+-6
          CFI (cfiCond711) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ZDMatchSendState
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_693, ??CrossCallReturnLabel_505
          CFI (cfiCond712) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond712) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond712) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond712) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond712) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond712) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond712) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond712) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond712) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond712) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond712) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond712) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond712) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond712) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond712) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond712) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond712) CFA_SP SP+-6
          CFI (cfiCond712) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_122
          CFI (cfiCond713) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond713) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond713) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond713) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond713) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond713) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond713) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond713) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond713) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond713) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond713) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond713) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond713) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond713) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond713) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond713) CFA_SP SP+-6
          CFI (cfiCond713) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function ZDO_ParseAddrRsp
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_689, ??CrossCallReturnLabel_123
          CFI (cfiCond714) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond714) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond714) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond714) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond714) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond714) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond714) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond714) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond714) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond714) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond714) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond714) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond714) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond714) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond714) CFA_SP SP+-6
          CFI (cfiCond714) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_685
          CFI (cfiCond715) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond715) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond715) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond715) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond715) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond715) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond715) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond715) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond715) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond715) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond715) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond715) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond715) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond715) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond715) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond715) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond715) CFA_SP SP+-6
          CFI (cfiCond715) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_686
          CFI (cfiCond716) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond716) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond716) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond716) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond716) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond716) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond716) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond716) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond716) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond716) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond716) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond716) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond716) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond716) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond716) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond716) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond716) CFA_SP SP+-6
          CFI (cfiCond716) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond717 Using cfiCommon0
          CFI (cfiCond717) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond717) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_667
          CFI (cfiCond717) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond717) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond717) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond717) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond717) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond717) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond717) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond717) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond717) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond717) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond717) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond717) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond717) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond717) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond717) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond717) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond717) CFA_SP SP+-6
          CFI (cfiCond717) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond718 Using cfiCommon0
          CFI (cfiCond718) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond718) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_668
          CFI (cfiCond718) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond718) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond718) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond718) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond718) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond718) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond718) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond718) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond718) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond718) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond718) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond718) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond718) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond718) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond718) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond718) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond718) CFA_SP SP+-6
          CFI (cfiCond718) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_669
          CFI (cfiCond719) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond719) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond719) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond719) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond719) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond719) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond719) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond719) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond719) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond719) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond719) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond719) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond719) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond719) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond719) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond719) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond719) CFA_SP SP+-6
          CFI (cfiCond719) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_670
          CFI (cfiCond720) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond720) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond720) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond720) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond720) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond720) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond720) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond720) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond720) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond720) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond720) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond720) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond720) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond720) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond720) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond720) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond720) CFA_SP SP+-6
          CFI (cfiCond720) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_671
          CFI (cfiCond721) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond721) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond721) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond721) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond721) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond721) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond721) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond721) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond721) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond721) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond721) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond721) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond721) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond721) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond721) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond721) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond721) CFA_SP SP+-6
          CFI (cfiCond721) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_672
          CFI (cfiCond722) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond722) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond722) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond722) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond722) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond722) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond722) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond722) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond722) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond722) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond722) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond722) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond722) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond722) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond722) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond722) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond722) CFA_SP SP+-6
          CFI (cfiCond722) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_673
          CFI (cfiCond723) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond723) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond723) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond723) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond723) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond723) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond723) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond723) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond723) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond723) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond723) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond723) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond723) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond723) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond723) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond723) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond723) CFA_SP SP+-6
          CFI (cfiCond723) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_674
          CFI (cfiCond724) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond724) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond724) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond724) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond724) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond724) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond724) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond724) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond724) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond724) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond724) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond724) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond724) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond724) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond724) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond724) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond724) CFA_SP SP+-6
          CFI (cfiCond724) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_675
          CFI (cfiCond725) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond725) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond725) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond725) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond725) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond725) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond725) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond725) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond725) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond725) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond725) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond725) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond725) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond725) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond725) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond725) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond725) CFA_SP SP+-6
          CFI (cfiCond725) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function ZDO_RemoveMatchMemory
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_676
          CFI (cfiCond726) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond726) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond726) CFA_SP SP+-11
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function ZDO_RemoveMatchMemory
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_677
          CFI (cfiCond727) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond727) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond727) CFA_SP SP+-11
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ZDO_RemoveMatchMemory
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_678
          CFI (cfiCond728) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond728) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond728) CFA_SP SP+-11
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ZDO_RemoveMatchMemory
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_679
          CFI (cfiCond729) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond729) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond729) CFA_SP SP+-11
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function ZDO_RemoveMatchMemory
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_680
          CFI (cfiCond730) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond730) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond730) CFA_SP SP+-11
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function ZDMatchSendState
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_681
          CFI (cfiCond731) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond731) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond731) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond731) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond731) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond731) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond731) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond731) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond731) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond731) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond731) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond731) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond731) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond731) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond731) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond731) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond731) CFA_SP SP+-6
          CFI (cfiCond731) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function ZDMatchSendState
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_682
          CFI (cfiCond732) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond732) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond732) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond732) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond732) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond732) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond732) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond732) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond732) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond732) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond732) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond732) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond732) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond732) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond732) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond732) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond732) CFA_SP SP+-6
          CFI (cfiCond732) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ZDMatchSendState
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_683
          CFI (cfiCond733) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond733) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond733) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond733) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond733) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond733) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond733) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond733) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond733) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond733) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond733) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond733) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond733) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond733) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond733) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond733) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond733) CFA_SP SP+-7
          CFI (cfiCond733) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond734 Using cfiCommon0
          CFI (cfiCond734) Function ZDMatchSendState
          CFI (cfiCond734) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_684
          CFI (cfiCond734) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond734) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond734) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond734) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond734) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond734) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond734) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond734) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond734) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond734) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond734) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond734) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond734) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond734) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond734) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond734) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond734) CFA_SP SP+-6
          CFI (cfiCond734) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond735 Using cfiCommon0
          CFI (cfiCond735) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond735) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_660
          CFI (cfiCond735) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond735) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond735) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond735) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond735) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond735) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond735) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond735) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond735) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond735) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond735) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond735) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond735) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond735) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond735) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond735) CFA_SP SP+-6
          CFI (cfiCond735) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_661
          CFI (cfiCond736) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond736) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond736) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond736) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond736) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond736) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond736) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond736) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond736) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond736) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond736) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond736) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond736) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond736) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond736) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond736) CFA_SP SP+-6
          CFI (cfiCond736) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_662
          CFI (cfiCond737) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond737) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond737) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond737) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond737) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond737) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond737) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond737) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond737) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond737) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond737) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond737) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond737) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond737) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond737) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond737) CFA_SP SP+-6
          CFI (cfiCond737) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_663
          CFI (cfiCond738) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond738) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond738) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond738) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond738) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond738) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond738) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond738) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond738) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond738) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond738) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond738) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond738) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond738) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond738) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond738) CFA_SP SP+-6
          CFI (cfiCond738) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond739 Using cfiCommon0
          CFI (cfiCond739) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond739) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_664
          CFI (cfiCond739) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond739) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond739) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond739) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond739) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond739) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond739) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond739) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond739) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond739) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond739) CFA_SP SP+-6
          CFI (cfiCond739) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond740 Using cfiCommon0
          CFI (cfiCond740) Function ZDMatchSendState
          CFI (cfiCond740) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_665
          CFI (cfiCond740) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond740) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond740) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond740) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond740) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond740) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond740) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond740) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond740) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond740) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond740) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond740) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond740) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond740) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond740) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond740) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond740) CFA_SP SP+-6
          CFI (cfiCond740) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_698, ??CrossCallReturnLabel_694, ??CrossCallReturnLabel_666
          CFI (cfiCond741) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond741) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond741) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond741) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond741) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond741) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond741) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond741) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond741) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond741) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond741) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond741) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond741) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond741) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond741) CFA_SP SP+-6
          CFI (cfiCond741) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond742 Using cfiCommon0
          CFI (cfiCond742) Function ZDMatchSendState
          CFI (cfiCond742) Conditional ??CrossCallReturnLabel_697, ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_120
          CFI (cfiCond742) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond742) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond742) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond742) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond742) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond742) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond742) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond742) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond742) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond742) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond742) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond742) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond742) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond742) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond742) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond742) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond742) CFA_SP SP+-6
          CFI (cfiCond742) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond743 Using cfiCommon0
          CFI (cfiCond743) Function ZDMatchSendState
          CFI (cfiCond743) Conditional ??CrossCallReturnLabel_697, ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_121
          CFI (cfiCond743) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond743) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond743) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond743) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond743) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond743) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond743) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond743) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond743) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond743) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond743) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond743) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond743) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond743) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond743) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond743) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond743) CFA_SP SP+-6
          CFI (cfiCond743) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ZDMatchSendState
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_697, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_114
          CFI (cfiCond744) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond744) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond744) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond744) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond744) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond744) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond744) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond744) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond744) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond744) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond744) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond744) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond744) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond744) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond744) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond744) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond744) CFA_SP SP+-6
          CFI (cfiCond744) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ZDMatchSendState
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_697, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_115
          CFI (cfiCond745) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond745) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond745) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond745) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond745) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond745) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond745) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond745) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond745) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond745) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond745) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond745) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond745) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond745) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond745) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond745) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond745) CFA_SP SP+-6
          CFI (cfiCond745) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ZDO_ProcessParentAnnce
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_696, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_116
          CFI (cfiCond746) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond746) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond746) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond746) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond746) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond746) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond746) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond746) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond746) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond746) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond746) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond746) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond746) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond746) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond746) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond746) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond746) CFA_SP SP+-6
          CFI (cfiCond746) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_696, ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_117
          CFI (cfiCond747) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond747) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond747) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond747) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond747) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond747) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond747) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond747) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond747) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond747) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond747) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond747) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond747) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond747) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond747) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond747) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond747) CFA_SP SP+-6
          CFI (cfiCond747) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_696, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_134
          CFI (cfiCond748) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond748) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond748) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond748) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond748) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond748) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond748) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond748) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond748) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond748) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond748) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond748) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond748) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond748) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond748) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond748) CFA_SP SP+-6
          CFI (cfiCond748) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_696, ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_135
          CFI (cfiCond749) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond749) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond749) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond749) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond749) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond749) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond749) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond749) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond749) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond749) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond749) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond749) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond749) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond749) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond749) CFA_SP SP+-7
          CFI (cfiCond749) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker750 Using cfiCommon1
          CFI (cfiPicker750) NoFunction
          CFI (cfiPicker750) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R0
        RET
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiCond709
          CFI EndBlock cfiCond710
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiCond717
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiCond734
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiCond739
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiCond742
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiPicker750

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine57:
          CFI Block cfiCond751 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_506
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond752) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond752) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond752) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond752) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond752) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond752) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond752) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond752) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond752) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond752) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond752) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond752) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond752) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond752) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond752) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond752) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond752) CFA_SP SP+-2
          CFI (cfiCond752) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker753 Using cfiCommon1
          CFI (cfiPicker753) NoFunction
          CFI (cfiPicker753) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiPicker753
        REQUIRE ??Subroutine228_0
        ; // Fall through to label ??Subroutine228_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine228_0:
          CFI Block cfiCond754 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_505
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond755 Using cfiCommon0
          CFI (cfiCond755) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond755) Conditional ??CrossCallReturnLabel_506
          CFI (cfiCond755) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond755) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond755) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond755) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond755) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond755) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond755) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond755) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond755) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond755) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond755) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond755) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond755) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond755) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond755) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond755) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond755) CFA_SP SP+-2
          CFI (cfiCond755) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond756 Using cfiCommon0
          CFI (cfiCond756) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond756) Conditional ??CrossCallReturnLabel_507
          CFI (cfiCond756) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond756) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond756) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond756) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond756) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond756) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond756) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond756) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond756) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond756) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond756) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond756) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond756) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond756) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond756) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond756) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond756) CFA_SP SP+-2
          CFI (cfiCond756) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker757 Using cfiCommon1
          CFI (cfiPicker757) NoFunction
          CFI (cfiPicker757) Picker
        LCALL     ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_693:
        ADD       A,#0x34
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_542:
        RET
          CFI EndBlock cfiCond754
          CFI EndBlock cfiCond755
          CFI EndBlock cfiCond756
          CFI EndBlock cfiPicker757

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine53:
          CFI Block cfiCond758 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_509
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function ZDMatchSendState
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_510
          CFI (cfiCond759) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond759) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond759) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond759) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond759) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond759) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond759) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond759) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond759) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond759) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond759) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond759) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond759) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond759) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond759) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond759) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond759) CFA_SP SP+-2
          CFI (cfiCond759) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker760 Using cfiCommon1
          CFI (cfiPicker760) NoFunction
          CFI (cfiPicker760) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiPicker760
        REQUIRE ??Subroutine229_0
        ; // Fall through to label ??Subroutine229_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine229_0:
          CFI Block cfiCond761 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_508
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond762 Using cfiCommon0
          CFI (cfiCond762) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond762) Conditional ??CrossCallReturnLabel_509
          CFI (cfiCond762) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond762) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond762) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond762) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond762) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond762) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond762) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond762) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond762) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond762) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond762) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond762) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond762) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond762) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond762) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond762) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond762) CFA_SP SP+-2
          CFI (cfiCond762) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ZDMatchSendState
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_510
          CFI (cfiCond763) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond763) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond763) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond763) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond763) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond763) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond763) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond763) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond763) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond763) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond763) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond763) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond763) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond763) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond763) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond763) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond763) CFA_SP SP+-2
          CFI (cfiCond763) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker764 Using cfiCommon1
          CFI (cfiPicker764) NoFunction
          CFI (cfiPicker764) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        LCALL     ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_658:
        INC       DPTR
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_515:
        RET
          CFI EndBlock cfiCond761
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiPicker764

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine172:
          CFI Block cfiCond765 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_25
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_511, ??CrossCallReturnLabel_26
          CFI (cfiCond766) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond766) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond766) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond766) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond766) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond766) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond766) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond766) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond766) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond766) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond766) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond766) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond766) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond766) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond766) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond766) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond766) CFA_SP SP+-4
          CFI (cfiCond766) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_398
          CFI (cfiCond767) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond767) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond767) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond767) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond767) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond767) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond767) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond767) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond767) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond767) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond767) CFA_SP SP+-4
          CFI (cfiCond767) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond768 Using cfiCommon0
          CFI (cfiCond768) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond768) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_399
          CFI (cfiCond768) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond768) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond768) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond768) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond768) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond768) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond768) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond768) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond768) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond768) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond768) CFA_SP SP+-4
          CFI (cfiCond768) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond769 Using cfiCommon0
          CFI (cfiCond769) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond769) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_400
          CFI (cfiCond769) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond769) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond769) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond769) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond769) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond769) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond769) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond769) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond769) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond769) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond769) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond769) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond769) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond769) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond769) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond769) CFA_SP SP+-4
          CFI (cfiCond769) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_379
          CFI (cfiCond770) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond770) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond770) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond770) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond770) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond770) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond770) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond770) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond770) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond770) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond770) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond770) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond770) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond770) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond770) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond770) CFA_SP SP+-4
          CFI (cfiCond770) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond771 Using cfiCommon0
          CFI (cfiCond771) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond771) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_380
          CFI (cfiCond771) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond771) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond771) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond771) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond771) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond771) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond771) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond771) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond771) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond771) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond771) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond771) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond771) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond771) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond771) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond771) CFA_SP SP+-4
          CFI (cfiCond771) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond772 Using cfiCommon0
          CFI (cfiCond772) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond772) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_381
          CFI (cfiCond772) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond772) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond772) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond772) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond772) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond772) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond772) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond772) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond772) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond772) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond772) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond772) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond772) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond772) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond772) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond772) CFA_SP SP+-4
          CFI (cfiCond772) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_382
          CFI (cfiCond773) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond773) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond773) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond773) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond773) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond773) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond773) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond773) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond773) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond773) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond773) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond773) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond773) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond773) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond773) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond773) CFA_SP SP+-4
          CFI (cfiCond773) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond774 Using cfiCommon0
          CFI (cfiCond774) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond774) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_383
          CFI (cfiCond774) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond774) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond774) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond774) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond774) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond774) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond774) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond774) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond774) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond774) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond774) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond774) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond774) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond774) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond774) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond774) CFA_SP SP+-4
          CFI (cfiCond774) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond775 Using cfiCommon0
          CFI (cfiCond775) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond775) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_384
          CFI (cfiCond775) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond775) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond775) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond775) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond775) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond775) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond775) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond775) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond775) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond775) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond775) CFA_SP SP+-4
          CFI (cfiCond775) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_385
          CFI (cfiCond776) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond776) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond776) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond776) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond776) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond776) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond776) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond776) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond776) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond776) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond776) CFA_SP SP+-4
          CFI (cfiCond776) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_386
          CFI (cfiCond777) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond777) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond777) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond777) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond777) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond777) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond777) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond777) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond777) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond777) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond777) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond777) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond777) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond777) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond777) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond777) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond777) CFA_SP SP+-4
          CFI (cfiCond777) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond778 Using cfiCommon0
          CFI (cfiCond778) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond778) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_387
          CFI (cfiCond778) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond778) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond778) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond778) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond778) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond778) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond778) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond778) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond778) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond778) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond778) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond778) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond778) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond778) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond778) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond778) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond778) CFA_SP SP+-4
          CFI (cfiCond778) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond779 Using cfiCommon0
          CFI (cfiCond779) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond779) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_388
          CFI (cfiCond779) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond779) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond779) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond779) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond779) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond779) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond779) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond779) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond779) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond779) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond779) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond779) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond779) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond779) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond779) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond779) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond779) CFA_SP SP+-4
          CFI (cfiCond779) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond780 Using cfiCommon0
          CFI (cfiCond780) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond780) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_389
          CFI (cfiCond780) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond780) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond780) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond780) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond780) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond780) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond780) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond780) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond780) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond780) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond780) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond780) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond780) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond780) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond780) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond780) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond780) CFA_SP SP+-4
          CFI (cfiCond780) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond781 Using cfiCommon0
          CFI (cfiCond781) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond781) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_390
          CFI (cfiCond781) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond781) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond781) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond781) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond781) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond781) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond781) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond781) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond781) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond781) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond781) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond781) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond781) CFA_SP SP+-4
          CFI (cfiCond781) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond782 Using cfiCommon0
          CFI (cfiCond782) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond782) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_391
          CFI (cfiCond782) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond782) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond782) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond782) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond782) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond782) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond782) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond782) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond782) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond782) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond782) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond782) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond782) CFA_SP SP+-4
          CFI (cfiCond782) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_392
          CFI (cfiCond783) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond783) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond783) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond783) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond783) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond783) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond783) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond783) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond783) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond783) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond783) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond783) CFA_SP SP+-4
          CFI (cfiCond783) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_393
          CFI (cfiCond784) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond784) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond784) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond784) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond784) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond784) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond784) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond784) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond784) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond784) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond784) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond784) CFA_SP SP+-4
          CFI (cfiCond784) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond785 Using cfiCommon0
          CFI (cfiCond785) Function ZDO_ProcessParentAnnce
          CFI (cfiCond785) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_394
          CFI (cfiCond785) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond785) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond785) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond785) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond785) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond785) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond785) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond785) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond785) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond785) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond785) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond785) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond785) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond785) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond785) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond785) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond785) CFA_SP SP+-4
          CFI (cfiCond785) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond786 Using cfiCommon0
          CFI (cfiCond786) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond786) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_395
          CFI (cfiCond786) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond786) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond786) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond786) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond786) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond786) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond786) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond786) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond786) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond786) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond786) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond786) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond786) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond786) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond786) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond786) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond786) CFA_SP SP+-4
          CFI (cfiCond786) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ZDO_RemoveMatchMemory
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_396
          CFI (cfiCond787) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond787) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond787) CFA_SP SP+-9
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_513, ??CrossCallReturnLabel_397
          CFI (cfiCond788) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond788) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond788) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond788) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond788) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond788) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond788) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond788) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond788) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond788) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond788) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond788) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond788) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond788) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond788) CFA_SP SP+-4
          CFI (cfiCond788) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_441
          CFI (cfiCond789) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond789) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond789) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond789) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond789) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond789) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond789) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond789) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond789) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond789) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond789) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond789) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond789) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond789) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond789) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond789) CFA_SP SP+-4
          CFI (cfiCond789) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_442
          CFI (cfiCond790) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond790) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond790) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond790) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond790) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond790) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond790) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond790) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond790) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond790) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond790) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond790) CFA_SP SP+-4
          CFI (cfiCond790) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_443
          CFI (cfiCond791) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond791) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond791) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond791) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond791) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond791) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond791) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond791) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond791) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond791) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond791) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond791) CFA_SP SP+-4
          CFI (cfiCond791) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ZDO_AnyClusterMatches
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_433
          CFI (cfiCond792) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond792) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond792) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond792) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond792) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond792) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond792) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond792) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond792) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond792) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond792) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond792) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond792) CFA_SP SP+-4
          CFI (cfiCond792) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond793 Using cfiCommon0
          CFI (cfiCond793) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond793) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_434
          CFI (cfiCond793) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond793) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond793) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond793) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond793) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond793) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond793) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond793) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond793) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond793) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond793) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond793) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond793) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond793) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond793) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond793) CFA_SP SP+-4
          CFI (cfiCond793) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond794 Using cfiCommon0
          CFI (cfiCond794) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond794) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_435
          CFI (cfiCond794) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond794) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond794) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond794) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond794) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond794) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond794) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond794) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond794) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond794) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond794) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond794) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond794) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond794) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond794) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond794) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond794) CFA_SP SP+-4
          CFI (cfiCond794) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_436
          CFI (cfiCond795) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond795) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond795) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond795) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond795) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond795) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond795) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond795) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond795) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond795) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond795) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond795) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond795) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond795) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond795) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond795) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond795) CFA_SP SP+-4
          CFI (cfiCond795) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_437
          CFI (cfiCond796) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond796) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond796) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond796) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond796) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond796) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond796) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond796) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond796) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond796) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond796) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond796) CFA_SP SP+-4
          CFI (cfiCond796) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ZDO_ProcessParentAnnce
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_438
          CFI (cfiCond797) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond797) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond797) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond797) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond797) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond797) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond797) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond797) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond797) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond797) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond797) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond797) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond797) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond797) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond797) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond797) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond797) CFA_SP SP+-4
          CFI (cfiCond797) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_439
          CFI (cfiCond798) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond798) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond798) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond798) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond798) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond798) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond798) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond798) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond798) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond798) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond798) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond798) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond798) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond798) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond798) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond798) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond798) CFA_SP SP+-4
          CFI (cfiCond798) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_514, ??CrossCallReturnLabel_440
          CFI (cfiCond799) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond799) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond799) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond799) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond799) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond799) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond799) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond799) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond799) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond799) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond799) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond799) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond799) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond799) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond799) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond799) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond799) CFA_SP SP+-4
          CFI (cfiCond799) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_509
          CFI (cfiCond800) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond800) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond800) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond800) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond800) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond800) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond800) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond800) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond800) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond800) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond800) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond800) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond800) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond800) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond800) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond800) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond800) CFA_SP SP+-4
          CFI (cfiCond800) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ZDMatchSendState
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_510
          CFI (cfiCond801) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond801) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond801) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond801) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond801) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond801) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond801) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond801) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond801) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond801) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond801) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond801) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond801) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond801) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond801) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond801) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond801) CFA_SP SP+-4
          CFI (cfiCond801) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond802 Using cfiCommon0
          CFI (cfiCond802) Function ZDO_ProcessParentAnnce
          CFI (cfiCond802) Conditional ??CrossCallReturnLabel_515, ??CrossCallReturnLabel_508
          CFI (cfiCond802) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond802) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond802) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond802) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond802) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond802) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond802) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond802) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond802) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond802) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond802) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond802) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond802) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond802) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond802) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond802) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond802) CFA_SP SP+-4
          CFI (cfiCond802) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond803 Using cfiCommon0
          CFI (cfiCond803) Function ZDMatchSendState
          CFI (cfiCond803) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_151
          CFI (cfiCond803) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond803) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond803) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond803) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond803) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond803) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond803) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond803) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond803) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond803) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond803) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond803) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond803) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond803) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond803) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond803) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond803) CFA_SP SP+-4
          CFI (cfiCond803) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function ZDMatchSendState
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_152
          CFI (cfiCond804) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond804) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond804) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond804) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond804) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond804) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond804) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond804) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond804) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond804) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond804) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond804) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond804) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond804) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond804) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond804) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond804) CFA_SP SP+-4
          CFI (cfiCond804) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_512, ??CrossCallReturnLabel_153
          CFI (cfiCond805) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond805) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond805) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond805) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond805) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond805) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond805) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond805) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond805) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond805) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond805) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond805) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond805) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond805) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond805) CFA_SP SP+-4
          CFI (cfiCond805) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker806 Using cfiCommon1
          CFI (cfiPicker806) NoFunction
          CFI (cfiPicker806) Picker
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        RET
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiCond768
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiCond771
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiCond774
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiCond778
          CFI EndBlock cfiCond779
          CFI EndBlock cfiCond780
          CFI EndBlock cfiCond781
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiCond785
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiCond793
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiCond802
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiPicker806

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine46:
          CFI Block cfiCond807 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_77
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond808) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond808) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond808) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond808) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond808) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond808) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond808) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond808) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond808) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond808) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond808) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond808) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond808) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond808) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond808) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond808) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond808) CFA_SP SP+-2
          CFI (cfiCond808) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker809 Using cfiCommon1
          CFI (cfiPicker809) NoFunction
          CFI (cfiPicker809) Picker
        MOVX      @DPTR,A
        MOV       DPL,?V6
        MOV       DPH,?V7
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiPicker809

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine21:
          CFI Block cfiCond810 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_516
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond811 Using cfiCommon0
          CFI (cfiCond811) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond811) Conditional ??CrossCallReturnLabel_517
          CFI (cfiCond811) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond811) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond811) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond811) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond811) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond811) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond811) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond811) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond811) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond811) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond811) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond811) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond811) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond811) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond811) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond811) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond811) CFA_SP SP+-2
          CFI (cfiCond811) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker812 Using cfiCommon1
          CFI (cfiPicker812) NoFunction
          CFI (cfiPicker812) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
          CFI EndBlock cfiCond810
          CFI EndBlock cfiCond811
          CFI EndBlock cfiPicker812
        REQUIRE ??Subroutine230_0
        ; // Fall through to label ??Subroutine230_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine230_0:
          CFI Block cfiCond813 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_518
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond814 Using cfiCommon0
          CFI (cfiCond814) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond814) Conditional ??CrossCallReturnLabel_516
          CFI (cfiCond814) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond814) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond814) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond814) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond814) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond814) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond814) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond814) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond814) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond814) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond814) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond814) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond814) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond814) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond814) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond814) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond814) CFA_SP SP+-2
          CFI (cfiCond814) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_517
          CFI (cfiCond815) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond815) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond815) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond815) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond815) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond815) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond815) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond815) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond815) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond815) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond815) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond815) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond815) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond815) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond815) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond815) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond815) CFA_SP SP+-2
          CFI (cfiCond815) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiPicker816 Using cfiCommon1
          CFI (cfiPicker816) NoFunction
          CFI (cfiPicker816) Picker
        LCALL     ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_519:
        XCH       A,R0
        RET
          CFI EndBlock cfiCond813
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiPicker816

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine150:
          CFI Block cfiCond817 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_516
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond818 Using cfiCommon0
          CFI (cfiCond818) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond818) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_517
          CFI (cfiCond818) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond818) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond818) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond818) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond818) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond818) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond818) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond818) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond818) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond818) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond818) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond818) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond818) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond818) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond818) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond818) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond818) CFA_SP SP+-4
          CFI (cfiCond818) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond819 Using cfiCommon0
          CFI (cfiCond819) Function ZDMatchSendState
          CFI (cfiCond819) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_518
          CFI (cfiCond819) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond819) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond819) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond819) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond819) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond819) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond819) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond819) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond819) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond819) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond819) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond819) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond819) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond819) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond819) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond819) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond819) CFA_SP SP+-4
          CFI (cfiCond819) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_6
          CFI (cfiCond820) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond820) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond820) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond820) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond820) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond820) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond820) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond820) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond820) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond820) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond820) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond820) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond820) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond820) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond820) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond820) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond820) CFA_SP SP+-4
          CFI (cfiCond820) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function ZDMatchSendState
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_7
          CFI (cfiCond821) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond821) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond821) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond821) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond821) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond821) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond821) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond821) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond821) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond821) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond821) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond821) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond821) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond821) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond821) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond821) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond821) CFA_SP SP+-4
          CFI (cfiCond821) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker822 Using cfiCommon1
          CFI (cfiPicker822) NoFunction
          CFI (cfiPicker822) Picker
        MOV       A,R1
          CFI EndBlock cfiCond817
          CFI EndBlock cfiCond818
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiPicker822
        REQUIRE ??Subroutine231_0
        ; // Fall through to label ??Subroutine231_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine231_0:
          CFI Block cfiCond823 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function ZDMatchSendState
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_521, ??CrossCallReturnLabel_57
          CFI (cfiCond824) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond824) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond824) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond824) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond824) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond824) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond824) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond824) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond824) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond824) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond824) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond824) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond824) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond824) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond824) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond824) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond824) CFA_SP SP+-4
          CFI (cfiCond824) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_516
          CFI (cfiCond825) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond825) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond825) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond825) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond825) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond825) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond825) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond825) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond825) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond825) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond825) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond825) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond825) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond825) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond825) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond825) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond825) CFA_SP SP+-4
          CFI (cfiCond825) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_517
          CFI (cfiCond826) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond826) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond826) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond826) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond826) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond826) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond826) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond826) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond826) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond826) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond826) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond826) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond826) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond826) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond826) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond826) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond826) CFA_SP SP+-4
          CFI (cfiCond826) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function ZDMatchSendState
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_519, ??CrossCallReturnLabel_518
          CFI (cfiCond827) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond827) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond827) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond827) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond827) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond827) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond827) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond827) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond827) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond827) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond827) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond827) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond827) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond827) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond827) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond827) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond827) CFA_SP SP+-4
          CFI (cfiCond827) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_6
          CFI (cfiCond828) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond828) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond828) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond828) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond828) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond828) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond828) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond828) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond828) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond828) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond828) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond828) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond828) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond828) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond828) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond828) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond828) CFA_SP SP+-4
          CFI (cfiCond828) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ZDMatchSendState
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_520, ??CrossCallReturnLabel_7
          CFI (cfiCond829) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond829) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond829) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond829) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond829) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond829) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond829) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond829) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond829) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond829) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond829) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond829) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond829) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond829) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond829) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond829) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond829) CFA_SP SP+-4
          CFI (cfiCond829) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker830 Using cfiCommon1
          CFI (cfiPicker830) NoFunction
          CFI (cfiPicker830) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        ; Setup parameters for call to function ZDP_SendData
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiPicker830
// 2605 #endif
// 2606 
// 2607 /*********************************************************************
// 2608  * @fn      ZDO_RemoveMatchMemory()
// 2609  *
// 2610  * @brief   Called to clear the memory used for the end device bind.
// 2611  *
// 2612  * @param  none
// 2613  *
// 2614  * @return  none
// 2615  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2616 static void ZDO_RemoveMatchMemory( void )
ZDO_RemoveMatchMemory:
          CFI Block cfiBlock831 Using cfiCommon0
          CFI Function ZDO_RemoveMatchMemory
        CODE
// 2617 {
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_RemoveMatchMemory, osal_mem_free
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2618   if ( matchED != NULL )
        MOV       DPTR,#matchED
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_396:
        JZ        ??ZDO_RemoveMatchMemory_0
// 2619   {
// 2620     if ( matchED->ed2Matched != NULL )
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x35
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_342:
        JZ        ??ZDO_RemoveMatchMemory_1
// 2621     {
// 2622       osal_mem_free( matchED->ed2Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2623     }
// 2624     if ( matchED->ed1Matched != NULL )
??ZDO_RemoveMatchMemory_1:
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_676:
        ADD       A,#0x32
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_343:
        JZ        ??ZDO_RemoveMatchMemory_2
// 2625     {
// 2626       osal_mem_free( matchED->ed1Matched );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2627     }
// 2628     if ( matchED->ed1.inClusters != NULL )
??ZDO_RemoveMatchMemory_2:
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_677:
        ADD       A,#0x12
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_344:
        JZ        ??ZDO_RemoveMatchMemory_3
// 2629     {
// 2630       osal_mem_free( matchED->ed1.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2631     }
// 2632     if ( matchED->ed1.outClusters != NULL )
??ZDO_RemoveMatchMemory_3:
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_678:
        ADD       A,#0x15
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_345:
        JZ        ??ZDO_RemoveMatchMemory_4
// 2633     {
// 2634       osal_mem_free( matchED->ed1.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2635     }
// 2636     if ( matchED->ed2.inClusters != NULL )
??ZDO_RemoveMatchMemory_4:
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_679:
        ADD       A,#0x29
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_346:
        JZ        ??ZDO_RemoveMatchMemory_5
// 2637     {
// 2638       osal_mem_free( matchED->ed2.inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2639     }
// 2640     if ( matchED->ed2.outClusters != NULL )
??ZDO_RemoveMatchMemory_5:
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_680:
        ADD       A,#0x2c
        LCALL     ?Subroutine50 & 0xFFFF
??CrossCallReturnLabel_347:
        JZ        ??ZDO_RemoveMatchMemory_6
// 2641     {
// 2642       osal_mem_free( matchED->ed2.outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2643     }
// 2644 
// 2645     osal_mem_free( matchED );
??ZDO_RemoveMatchMemory_6:
        ; Setup parameters for call to function osal_mem_free
        MOV       DPTR,#matchED
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_484:
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2646     matchED = (ZDMatchEndDeviceBind_t *)NULL;
        MOV       DPTR,#matchED
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 2647   }
// 2648 }
??ZDO_RemoveMatchMemory_0:
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock831
// 2649 
// 2650 /*********************************************************************
// 2651  * @fn      ZDO_CopyMatchInfo()
// 2652  *
// 2653  * @brief   Called to copy memory used for the end device bind.
// 2654  *
// 2655  * @param  srcReq - source information
// 2656  * @param  dstReq - destination location
// 2657  *
// 2658  * @return  TRUE if copy was successful.
// 2659  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2660 static uint8 ZDO_CopyMatchInfo( ZDEndDeviceBind_t *destReq, ZDEndDeviceBind_t *srcReq )
ZDO_CopyMatchInfo:
          CFI Block cfiBlock832 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
        CODE
// 2661 {
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_CopyMatchInfo, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       ?V6,R2
        MOV       ?V7,R3
        MOV       ?V4,R4
        MOV       ?V5,R5
// 2662   uint8 allOK = TRUE;
        MOV       R6,#0x1
// 2663 
// 2664   // Copy bind information into the match info structure
// 2665   osal_memcpy( (uint8 *)destReq, srcReq, sizeof ( ZDEndDeviceBind_t ) );
        ; Setup parameters for call to function osal_memcpy
        MOV       ?V0,R4
        MOV       ?V1,R5
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       R4,#0x17
        MOV       R5,#0x0
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        MOV       A,?V6
        ADD       A,#0x12
        LCALL     ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_246:
        MOV       A,?V6
        ADD       A,#0x15
        LCALL     ?Subroutine143 & 0xFFFF
??CrossCallReturnLabel_247:
        MOV       A,?V4
        ADD       A,#0x11
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_524:
        JZ        ??ZDO_CopyMatchInfo_0
// 2666 
// 2667   // Initialize the destination cluster pointers
// 2668   destReq->inClusters = NULL;
// 2669   destReq->outClusters = NULL;
// 2670 
// 2671   // Copy input cluster IDs
// 2672   if ( srcReq->numInClusters )
// 2673   {
// 2674     destReq->inClusters = osal_mem_alloc( (short)(srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_192:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,?V6
        ADD       A,#0x12
        LCALL     ?Subroutine26 & 0xFFFF
// 2675     if ( destReq->inClusters )
??CrossCallReturnLabel_532:
        JZ        ??ZDO_CopyMatchInfo_1
// 2676     {
// 2677       // Copy the clusters
// 2678       osal_memcpy( (uint8*)(destReq->inClusters), (uint8 *)(srcReq->inClusters),
// 2679                       (srcReq->numInClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V4
        ADD       A,#0x12
        LCALL     ?Subroutine71 & 0xFFFF
// 2680     }
??CrossCallReturnLabel_527:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,?V4
        ADD       A,#0x11
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_462:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
        SJMP      ??ZDO_CopyMatchInfo_0
// 2681     else
// 2682     {
// 2683       allOK = FALSE;
??ZDO_CopyMatchInfo_1:
        MOV       R6,#0x0
??ZDO_CopyMatchInfo_0:
        MOV       A,?V4
        ADD       A,#0x14
// 2684     }
// 2685   }
        LCALL     ?Subroutine134 & 0xFFFF
??CrossCallReturnLabel_525:
        JZ        ??ZDO_CopyMatchInfo_2
// 2686 
// 2687   // Copy output cluster IDs
// 2688   if ( srcReq->numOutClusters )
// 2689   {
// 2690     destReq->outClusters = osal_mem_alloc( (short)(srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_193:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,?V6
        ADD       A,#0x15
        LCALL     ?Subroutine26 & 0xFFFF
// 2691     if ( destReq->outClusters )
??CrossCallReturnLabel_533:
        JZ        ??ZDO_CopyMatchInfo_3
// 2692     {
// 2693       // Copy the clusters
// 2694       osal_memcpy( (uint8 *)(destReq->outClusters), (uint8 *)(srcReq->outClusters),
// 2695                       (srcReq->numOutClusters * sizeof ( uint16 )) );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V4
        ADD       A,#0x15
        LCALL     ?Subroutine71 & 0xFFFF
// 2696     }
??CrossCallReturnLabel_528:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,?V4
        ADD       A,#0x14
        LCALL     ?Subroutine119 & 0xFFFF
??CrossCallReturnLabel_463:
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 2697     else
// 2698     {
// 2699       allOK = FALSE;
// 2700     }
// 2701   }
// 2702 
// 2703   if ( allOK == FALSE )
??ZDO_CopyMatchInfo_2:
        MOV       A,R6
        MOV       C,0xE0 /* A   */.0
        JC        ??ZDO_CopyMatchInfo_4
// 2704   {
// 2705     if ( destReq->inClusters != NULL )
??ZDO_CopyMatchInfo_5:
        MOV       A,?V6
        ADD       A,#0x12
        MOV       DPL,A
        CLR       A
        ADDC      A,?V7
        LCALL     ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_338:
        JZ        ??ZDO_CopyMatchInfo_6
// 2706     {
// 2707       osal_mem_free( destReq->inClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2708     }
// 2709     if ( destReq->outClusters != NULL )
??ZDO_CopyMatchInfo_6:
        MOV       A,?V6
        ADD       A,#0x15
        MOV       DPL,A
        CLR       A
        ADDC      A,?V7
        LCALL     ??Subroutine206_0 & 0xFFFF
??CrossCallReturnLabel_339:
        JZ        ??ZDO_CopyMatchInfo_4
// 2710     {
// 2711       osal_mem_free( destReq->outClusters );
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 2712     }
// 2713   }
// 2714 
// 2715   return ( allOK );
??ZDO_CopyMatchInfo_4:
        MOV       A,R6
        MOV       R1,A
        LJMP      ??Subroutine201_0 & 0xFFFF
??ZDO_CopyMatchInfo_3:
        MOV       R6,#0x0
        SJMP      ??ZDO_CopyMatchInfo_5
// 2716 }
          CFI EndBlock cfiBlock832

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine143:
          CFI Block cfiCond833 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_245
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function ZDO_CopyMatchInfo
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_246
          CFI (cfiCond834) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond834) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond834) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond834) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond834) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond834) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond834) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond834) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond834) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond834) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond834) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond834) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond834) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond834) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond834) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond834) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond834) CFA_SP SP+-2
          CFI (cfiCond834) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond835 Using cfiCommon0
          CFI (cfiCond835) Function ZDO_CopyMatchInfo
          CFI (cfiCond835) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond835) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond835) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond835) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond835) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond835) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond835) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond835) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond835) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond835) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond835) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond835) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond835) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond835) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond835) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond835) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond835) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond835) CFA_SP SP+-2
          CFI (cfiCond835) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker836 Using cfiCommon1
          CFI (cfiPicker836) NoFunction
          CFI (cfiPicker836) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V7
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
        RET
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiCond835
          CFI EndBlock cfiPicker836

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine134:
          CFI Block cfiCond837 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_523
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ZDO_CopyMatchInfo
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_524
          CFI (cfiCond838) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond838) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond838) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond838) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond838) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond838) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond838) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond838) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond838) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond838) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond838) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond838) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond838) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond838) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond838) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond838) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond838) CFA_SP SP+-2
          CFI (cfiCond838) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond839 Using cfiCommon0
          CFI (cfiCond839) Function ZDO_CopyMatchInfo
          CFI (cfiCond839) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond839) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond839) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond839) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond839) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond839) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond839) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond839) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond839) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond839) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond839) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond839) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond839) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond839) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond839) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond839) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond839) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond839) CFA_SP SP+-2
          CFI (cfiCond839) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker840 Using cfiCommon1
          CFI (cfiPicker840) NoFunction
          CFI (cfiPicker840) Picker
        MOV       DPL,A
        CLR       A
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiCond839
          CFI EndBlock cfiPicker840
        REQUIRE ??Subroutine232_0
        ; // Fall through to label ??Subroutine232_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine232_0:
          CFI Block cfiCond841 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_522
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_523
          CFI (cfiCond842) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond842) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond842) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond842) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond842) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond842) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond842) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond842) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond842) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond842) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond842) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond842) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond842) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond842) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond842) CFA_SP SP+-2
          CFI (cfiCond842) CFA_XSP16 add(XSP16, 21)
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function ZDO_CopyMatchInfo
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_524
          CFI (cfiCond843) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond843) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond843) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond843) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond843) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond843) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond843) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond843) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond843) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond843) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond843) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond843) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond843) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond843) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond843) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond843) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond843) CFA_SP SP+-2
          CFI (cfiCond843) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function ZDO_CopyMatchInfo
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_525
          CFI (cfiCond844) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond844) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond844) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond844) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond844) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond844) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond844) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond844) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond844) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond844) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond844) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond844) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond844) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond844) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond844) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond844) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond844) CFA_SP SP+-2
          CFI (cfiCond844) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker845 Using cfiCommon1
          CFI (cfiPicker845) NoFunction
          CFI (cfiPicker845) Picker
        ADDC      A,?V5
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiPicker845

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine117:
          CFI Block cfiCond846 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_188
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond847 Using cfiCommon0
          CFI (cfiCond847) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond847) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond847) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond847) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond847) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond847) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond847) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond847) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond847) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond847) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond847) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond847) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond847) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond847) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond847) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond847) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond847) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond847) CFA_SP SP+-2
          CFI (cfiCond847) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond848) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond848) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond848) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond848) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond848) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond848) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond848) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond848) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond848) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond848) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond848) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond848) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond848) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond848) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond848) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond848) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond848) CFA_SP SP+-2
          CFI (cfiCond848) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_191
          CFI (cfiCond849) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond849) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond849) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond849) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond849) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond849) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond849) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond849) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond849) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond849) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond849) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond849) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond849) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond849) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond849) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond849) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond849) CFA_SP SP+-2
          CFI (cfiCond849) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond850 Using cfiCommon0
          CFI (cfiCond850) Function ZDO_CopyMatchInfo
          CFI (cfiCond850) Conditional ??CrossCallReturnLabel_192
          CFI (cfiCond850) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond850) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond850) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond850) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond850) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond850) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond850) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond850) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond850) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond850) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond850) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond850) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond850) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond850) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond850) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond850) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond850) CFA_SP SP+-2
          CFI (cfiCond850) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond851 Using cfiCommon0
          CFI (cfiCond851) Function ZDO_CopyMatchInfo
          CFI (cfiCond851) Conditional ??CrossCallReturnLabel_193
          CFI (cfiCond851) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond851) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond851) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond851) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond851) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond851) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond851) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond851) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond851) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond851) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond851) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond851) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond851) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond851) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond851) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond851) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond851) CFA_SP SP+-2
          CFI (cfiCond851) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond852 Using cfiCommon0
          CFI (cfiCond852) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond852) Conditional ??CrossCallReturnLabel_194
          CFI (cfiCond852) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond852) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond852) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond852) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond852) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond852) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond852) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond852) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond852) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond852) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond852) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond852) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond852) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond852) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond852) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond852) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond852) CFA_SP SP+-2
          CFI (cfiCond852) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond853 Using cfiCommon0
          CFI (cfiCond853) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond853) Conditional ??CrossCallReturnLabel_195
          CFI (cfiCond853) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond853) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond853) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond853) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond853) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond853) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond853) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond853) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond853) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond853) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond853) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond853) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond853) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond853) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond853) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond853) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond853) CFA_SP SP+-2
          CFI (cfiCond853) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker854 Using cfiCommon1
          CFI (cfiPicker854) NoFunction
          CFI (cfiPicker854) Picker
        ADD       A,0xE0 /* A   */
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        RET
          CFI EndBlock cfiCond846
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiCond850
          CFI EndBlock cfiCond851
          CFI EndBlock cfiCond852
          CFI EndBlock cfiCond853
          CFI EndBlock cfiPicker854

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine71:
          CFI Block cfiCond855 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_527
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond856 Using cfiCommon0
          CFI (cfiCond856) Function ZDO_CopyMatchInfo
          CFI (cfiCond856) Conditional ??CrossCallReturnLabel_528
          CFI (cfiCond856) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond856) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond856) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond856) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond856) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond856) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond856) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond856) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond856) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond856) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond856) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond856) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond856) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond856) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond856) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond856) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond856) CFA_SP SP+-2
          CFI (cfiCond856) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker857 Using cfiCommon1
          CFI (cfiPicker857) NoFunction
          CFI (cfiPicker857) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V5
        MOV       DPH,A
          CFI EndBlock cfiCond855
          CFI EndBlock cfiCond856
          CFI EndBlock cfiPicker857
        REQUIRE ??Subroutine233_0
        ; // Fall through to label ??Subroutine233_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine233_0:
          CFI Block cfiCond858 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_526
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ZDO_CopyMatchInfo
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_527
          CFI (cfiCond859) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond859) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond859) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond859) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond859) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond859) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond859) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond859) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond859) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond859) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond859) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond859) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond859) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond859) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond859) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond859) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond859) CFA_SP SP+-2
          CFI (cfiCond859) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function ZDO_CopyMatchInfo
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_528
          CFI (cfiCond860) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond860) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond860) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond860) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond860) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond860) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond860) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond860) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond860) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond860) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond860) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond860) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond860) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond860) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond860) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond860) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond860) CFA_SP SP+-2
          CFI (cfiCond860) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker861 Using cfiCommon1
          CFI (cfiPicker861) NoFunction
          CFI (cfiPicker861) Picker
        LCALL     ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_531:
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiPicker861

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine26:
          CFI Block cfiCond862 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_532
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ZDO_CopyMatchInfo
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_533
          CFI (cfiCond863) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond863) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond863) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond863) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond863) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond863) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond863) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond863) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond863) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond863) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond863) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond863) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond863) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond863) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond863) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond863) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond863) CFA_SP SP+-2
          CFI (cfiCond863) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker864 Using cfiCommon1
          CFI (cfiPicker864) NoFunction
          CFI (cfiPicker864) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V7
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiPicker864
        REQUIRE ??Subroutine234_0
        ; // Fall through to label ??Subroutine234_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine234_0:
          CFI Block cfiCond865 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_534
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond866 Using cfiCommon0
          CFI (cfiCond866) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond866) Conditional ??CrossCallReturnLabel_535
          CFI (cfiCond866) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond866) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond866) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond866) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond866) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond866) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond866) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond866) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond866) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond866) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond866) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond866) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond866) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond866) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond866) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond866) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond866) CFA_SP SP+-2
          CFI (cfiCond866) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond867 Using cfiCommon0
          CFI (cfiCond867) Function ZDO_CopyMatchInfo
          CFI (cfiCond867) Conditional ??CrossCallReturnLabel_532
          CFI (cfiCond867) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond867) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond867) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond867) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond867) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond867) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond867) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond867) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond867) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond867) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond867) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond867) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond867) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond867) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond867) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond867) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond867) CFA_SP SP+-2
          CFI (cfiCond867) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond868 Using cfiCommon0
          CFI (cfiCond868) Function ZDO_CopyMatchInfo
          CFI (cfiCond868) Conditional ??CrossCallReturnLabel_533
          CFI (cfiCond868) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond868) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond868) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond868) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond868) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond868) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond868) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond868) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond868) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond868) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond868) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond868) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond868) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond868) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond868) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond868) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond868) CFA_SP SP+-2
          CFI (cfiCond868) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker869 Using cfiCommon1
          CFI (cfiPicker869) NoFunction
          CFI (cfiPicker869) Picker
        MOV       DPH,A
        MOV       A,R2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       A,R2
        ORL       A,R3
        RET
          CFI EndBlock cfiCond865
          CFI EndBlock cfiCond866
          CFI EndBlock cfiCond867
          CFI EndBlock cfiCond868
          CFI EndBlock cfiPicker869
// 2717 
// 2718 /*********************************************************************
// 2719  * @fn      ZDMatchSendState()
// 2720  *
// 2721  * @brief   State machine for the End device match message algorithm.
// 2722  *
// 2723  * @param  reason - state of algoritm
// 2724  * @param  status - initial message status
// 2725  * @param  TransSeq - next transaction sequence number
// 2726  *
// 2727  * @return  FALSE if error and we are not currently matching, TRUE
// 2728  *          if success.
// 2729  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2730 uint8 ZDMatchSendState( uint8 reason, uint8 status, uint8 TransSeq )
ZDMatchSendState:
          CFI Block cfiBlock870 Using cfiCommon0
          CFI Function ZDMatchSendState
        CODE
// 2731 {
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_BindUnbindReq
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 45, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 45, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, APS_SetEndDeviceBindTimeout
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDP_SendData
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 42, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 42, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDMatchSendState, ZDO_RemoveMatchMemory
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 37, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 37, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 21
        MOV       A,#-0x15
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R2
        MOVX      @DPTR,A
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       ?V2,R1
// 2732   uint8 *dstIEEEAddr = NULL;
        MOV       ?V4,#0x0
        MOV       ?V5,#0x0
// 2733   uint8 dstEP = 0xFF;
        MOV       ?V3,#-0x1
// 2734   zAddrType_t dstAddr;
// 2735   zAddrType_t destinationAddr;
// 2736   uint16 msgType;
// 2737   uint16 clusterID = 0xFFFF;
        MOV       R6,#-0x1
        MOV       R7,#-0x1
// 2738   ZDEndDeviceBind_t *ed = NULL;
        MOV       ?V6,#0x0
        MOV       ?V7,#0x0
// 2739   uint8 rspStatus = ZDP_SUCCESS;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        CLR       A
        LCALL     ?Subroutine35 & 0xFFFF
// 2740 
// 2741   if ( matchED == NULL )
??CrossCallReturnLabel_57:
        JZ        ??ZDMatchSendState_0
// 2742   {
// 2743     return ( FALSE );
// 2744   }
// 2745 
// 2746   // Check sequence number
// 2747   if ( reason == ZDMATCH_REASON_BIND_RSP || reason == ZDMATCH_REASON_UNBIND_RSP )
        MOV       A,#0x3
        XRL       A,?V2
        JZ        ??ZDMatchSendState_1
        MOV       A,#0x2
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_2
// 2748   {
// 2749     if ( TransSeq != matchED->transSeq )
??ZDMatchSendState_1:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       DPTR,#matchED + 1
        MOVX      A,@DPTR
        XCH       A,R0
        ADD       A,#0x30
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_229:
        XRL       A,R1
        JZ        ??ZDMatchSendState_2
// 2750     {
// 2751       return( FALSE ); // ignore the message
??ZDMatchSendState_0:
        MOV       R1,#0x0
        LJMP      ??ZDMatchSendState_3 & 0xFFFF
// 2752     }
// 2753   }
// 2754 
// 2755   // turn off timer
// 2756   APS_SetEndDeviceBindTimeout( 0, ZDO_EndDeviceBindMatchTimeoutCB );
??ZDMatchSendState_2:
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV       R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV       R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV       R2,#0x0
        MOV       R3,#0x0
        LCALL     `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
// 2757 
// 2758   if ( reason == ZDMATCH_REASON_TIMEOUT )
        MOV       A,#0x1
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_4
// 2759   {
// 2760     rspStatus = ZDP_TIMEOUT;    // The process will stop
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOV       A,#-0x7b
        SJMP      ??ZDMatchSendState_5
// 2761   }
// 2762 
// 2763   if ( reason == ZDMATCH_REASON_START || reason == ZDMATCH_REASON_BIND_RSP )
??ZDMatchSendState_4:
        MOV       A,?V2
        JZ        ??ZDMatchSendState_6
        MOV       A,#0x3
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_7
// 2764   {
// 2765     matchED->sending = ZDMATCH_SENDING_UNBIND;
??ZDMatchSendState_6:
        MOV       DPTR,#matchED
        LCALL     ?Subroutine70 & 0xFFFF
??CrossCallReturnLabel_120:
        MOVX      @DPTR,A
// 2766 
// 2767     if ( reason == ZDMATCH_REASON_BIND_RSP && status != ZDP_SUCCESS )
        MOV       A,#0x3
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_8
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JZ        ??ZDMatchSendState_9
// 2768     {
// 2769       rspStatus = status;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        SJMP      ??ZDMatchSendState_5
// 2770     }
// 2771   }
// 2772   else if ( reason == ZDMATCH_REASON_UNBIND_RSP )
??ZDMatchSendState_7:
        MOV       A,#0x2
        XRL       A,?V2
        JNZ       ??ZDMatchSendState_9
// 2773   {
// 2774     if ( status == ZDP_SUCCESS )
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       DPTR,#matchED
        JNZ       ??ZDMatchSendState_10
// 2775     {
// 2776       matchED->sending = ZDMATCH_SENDING_UNBIND;
        LCALL     ?Subroutine70 & 0xFFFF
// 2777     }
??CrossCallReturnLabel_121:
        SJMP      ??ZDMatchSendState_5
// 2778     else
// 2779     {
// 2780       matchED->sending = ZDMATCH_SENDING_BIND;
??ZDMatchSendState_10:
        LCALL     ??Subroutine256_0 & 0xFFFF
// 2781     }
// 2782   }
??CrossCallReturnLabel_665:
        LCALL     ?Subroutine195 & 0xFFFF
??CrossCallReturnLabel_322:
        MOV       A,#0x2
??ZDMatchSendState_5:
        MOVX      @DPTR,A
        SJMP      ??ZDMatchSendState_9
// 2783 
// 2784   if ( reason != ZDMATCH_REASON_START && matchED->sending == ZDMATCH_SENDING_UNBIND )
??ZDMatchSendState_8:
        MOV       A,?V2
        JZ        ??ZDMatchSendState_11
??ZDMatchSendState_9:
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_114:
        JNZ       ??ZDMatchSendState_11
// 2785   {
// 2786     // Move to the next cluster ID
// 2787     if ( matchED->ed1numMatched )
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x31
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_166:
        JNZ       ??ZDMatchSendState_12
// 2788     {
// 2789       matchED->ed1numMatched--;
// 2790     }
// 2791     else if ( matchED->ed2numMatched )
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x34
        LCALL     ?Subroutine106 & 0xFFFF
??CrossCallReturnLabel_167:
        JZ        ??ZDMatchSendState_11
// 2792     {
// 2793       matchED->ed2numMatched--;
??ZDMatchSendState_12:
        ADD       A,R6
        MOVX      @DPTR,A
// 2794     }
// 2795   }
// 2796 
// 2797   // What message do we send now
// 2798   if ( matchED->ed1numMatched )
??ZDMatchSendState_11:
        LCALL     ?Subroutine56 & 0xFFFF
??CrossCallReturnLabel_96:
        MOV       R0,A
        MOV       DPTR,#matchED
        JZ        ??ZDMatchSendState_13
// 2799   {
// 2800     ed = &(matchED->ed1);
        MOVX      A,@DPTR
        MOV       ?V6,A
        INC       DPTR
        MOVX      A,@DPTR
        LCALL     ?Subroutine116 & 0xFFFF
// 2801     clusterID = matchED->ed1Matched[matchED->ed1numMatched-1];
??CrossCallReturnLabel_186:
        ADD       A,#0x32
        LCALL     ?Subroutine54 & 0xFFFF
// 2802     dstIEEEAddr = matchED->ed2.ieeeAddr;
??CrossCallReturnLabel_89:
        ADD       A,#0x1d
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       ?V5,A
// 2803     dstEP = matchED->ed2.endpoint;
        LCALL     ??Subroutine255_0 & 0xFFFF
// 2804   }
??CrossCallReturnLabel_681:
        ADD       A,#0x25
        SJMP      ??ZDMatchSendState_14
// 2805   else if ( matchED->ed2numMatched )
??ZDMatchSendState_13:
        LCALL     ??Subroutine228_0 & 0xFFFF
??CrossCallReturnLabel_505:
        MOV       R0,A
        JZ        ??ZDMatchSendState_15
// 2806   {
// 2807     ed = &(matchED->ed2);
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x17
        MOV       ?V6,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        LCALL     ?Subroutine116 & 0xFFFF
// 2808     clusterID = matchED->ed2Matched[matchED->ed2numMatched-1];
??CrossCallReturnLabel_187:
        ADD       A,#0x35
        LCALL     ?Subroutine54 & 0xFFFF
// 2809     dstIEEEAddr = matchED->ed1.ieeeAddr;
??CrossCallReturnLabel_90:
        ADD       A,#0x6
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       ?V5,A
// 2810     dstEP = matchED->ed1.endpoint;
        LCALL     ??Subroutine255_0 & 0xFFFF
// 2811   }
??CrossCallReturnLabel_682:
        ADD       A,#0xe
??ZDMatchSendState_14:
        LCALL     ?Subroutine135 & 0xFFFF
??CrossCallReturnLabel_230:
        MOV       ?V3,A
// 2812 
// 2813   dstAddr.addrMode = Addr16Bit;
??ZDMatchSendState_15:
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x2
        LCALL     ?Subroutine14 & 0xFFFF
// 2814 
// 2815   // Send the next message
// 2816   if ( (rspStatus == ZDP_SUCCESS) && ed )
??CrossCallReturnLabel_12:
        JZ        $+5
        LJMP      ??ZDMatchSendState_16 & 0xFFFF
        MOV       A,?V6
        ORL       A,?V7
        JNZ       $+5
        LJMP      ??ZDMatchSendState_16 & 0xFFFF
// 2817   {
// 2818     // Send unbind/bind message to source
// 2819     if ( matchED->sending == ZDMATCH_SENDING_UNBIND )
        LCALL     ?Subroutine67 & 0xFFFF
??CrossCallReturnLabel_115:
        JNZ       ??ZDMatchSendState_17
// 2820     {
// 2821       msgType = Unbind_req;
        MOV       ?V0,#0x22
        SJMP      ??ZDMatchSendState_18
// 2822     }
// 2823     else
// 2824     {
// 2825       msgType = Bind_req;
??ZDMatchSendState_17:
        MOV       ?V0,#0x21
??ZDMatchSendState_18:
        MOV       ?V1,#0x0
// 2826     }
// 2827 
// 2828     dstAddr.addr.shortAddr = ed->srcAddr;
        MOV       DPL,?V6
        MOV       DPH,?V7
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_151:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine215_0 & 0xFFFF
// 2829 
// 2830     // Save off the transaction sequence number
// 2831     matchED->transSeq = ZDP_TransID;
??CrossCallReturnLabel_419:
        MOV       DPTR,#ZDP_TransID
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ??Subroutine255_0 & 0xFFFF
??CrossCallReturnLabel_683:
        ADD       A,#0x30
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 2832 
// 2833     destinationAddr.addrMode = Addr64Bit;
        MOV       A,#0x14
        LCALL     ?XSTACK_DISP0_8
        MOV       A,#0x3
        MOVX      @DPTR,A
// 2834     osal_cpyExtAddr( destinationAddr.addr.extAddr, dstIEEEAddr );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       A,#0xc
        LCALL     ?XSTACK_DISP101_8
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2835 
// 2836     ZDP_BindUnbindReq( msgType, &dstAddr, ed->ieeeAddr, ed->endpoint, clusterID,
// 2837         &destinationAddr, dstEP, ed->SecurityUse );
        ; Setup parameters for call to function ZDP_BindUnbindReq
        MOV       DPL,?V6
        MOV       DPH,?V7
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V4,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       R0,#?V3
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 39)
        MOV       A,#0xe
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V4,R0
        MOV       ?V5,R1
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 41)
        MOV       ?V4,R6
        MOV       ?V5,R7
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 43)
        MOV       A,?V6
        ADD       A,#0x6
        MOV       ?V4,A
        CLR       A
        ADDC      A,?V7
        MOV       ?V5,A
        MOV       R0,#?V4
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 45)
        MOV       A,?V6
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_570:
        ADDC      A,?V7
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,#0xb
        LCALL     ?XSTACK_DISP102_8
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??ZDP_BindUnbindReq::?relay`; Banked call to: ZDP_BindUnbindReq
        MOV       A,#0x8
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2838 
// 2839     // Set timeout for response
// 2840     APS_SetEndDeviceBindTimeout( AIB_MaxBindingTime, ZDO_EndDeviceBindMatchTimeoutCB );
        ; Setup parameters for call to function APS_SetEndDeviceBindTimeout
        MOV       R4,#`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` & 0xff
        MOV       R5,#(`??ZDO_EndDeviceBindMatchTimeoutCB::?relay` >> 8) & 0xff
        MOV       DPTR,#AIB_MaxBindingTime
        LCALL     ??Subroutine224_0 & 0xFFFF
// 2841   }
??CrossCallReturnLabel_485:
        LCALL     `??APS_SetEndDeviceBindTimeout::?relay`; Banked call to: APS_SetEndDeviceBindTimeout
        LJMP      ??ZDMatchSendState_19 & 0xFFFF
// 2842   else
// 2843   {
// 2844     // Send the response messages to requesting devices
// 2845     // send response to first requester
// 2846     dstAddr.addr.shortAddr = matchED->ed1.srcAddr;
??ZDMatchSendState_16:
        LCALL     ?Subroutine53 & 0xFFFF
??CrossCallReturnLabel_510:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine11 & 0xFFFF
// 2847     ZDP_EndDeviceBindRsp( matchED->ed1.TransSeq, &dstAddr, rspStatus, matchED->ed1.SecurityUse );
??CrossCallReturnLabel_7:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV       R1,#0x1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP102_8
        MOV       DPTR,#matchED
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_486:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2848 
// 2849     // send response to second requester
// 2850     if ( matchED->state == ZDMATCH_SENDING_BINDS )
        LCALL     ?Subroutine66 & 0xFFFF
??CrossCallReturnLabel_113:
        JNZ       ??ZDMatchSendState_20
// 2851     {
// 2852       dstAddr.addr.shortAddr = matchED->ed2.srcAddr;
        LCALL     ??Subroutine255_0 & 0xFFFF
// 2853       ZDP_EndDeviceBindRsp( matchED->ed2.TransSeq, &dstAddr, rspStatus, matchED->ed2.SecurityUse );
// 2854     }
??CrossCallReturnLabel_684:
        ADD       A,#0x19
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_152:
        LCALL     ?XSTACK_DISP0_8
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ??Subroutine230_0 & 0xFFFF
??CrossCallReturnLabel_518:
        ADD       A,#0x18
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        LCALL     ?Subroutine95 & 0xFFFF
??CrossCallReturnLabel_500:
        LCALL     ?PUSH_XSTACK_I_ONE
          CFI CFA_XSP16 add(XSP16, 38)
        MOV       A,#0x1
        LCALL     ?XSTACK_DISP100_8
        MOV       ?V0,R0
        MOV       ?V1,R1
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 40)
        MOV       ?V0,#0x20
        MOV       ?V1,#-0x80
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_TWO
          CFI CFA_XSP16 add(XSP16, 42)
        MOV       R1,#0x1
        MOV       A,#0x8
        LCALL     ?XSTACK_DISP102_8
        LCALL     ?Subroutine110 & 0xFFFF
??CrossCallReturnLabel_175:
        LCALL     `??ZDP_SendData::?relay`; Banked call to: ZDP_SendData
        MOV       A,#0x5
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 37)
// 2855 
// 2856     // Process ended - release memory used
// 2857     ZDO_RemoveMatchMemory();
??ZDMatchSendState_20:
        ; Setup parameters for call to function ZDO_RemoveMatchMemory
        LCALL     `??ZDO_RemoveMatchMemory::?relay`; Banked call to: ZDO_RemoveMatchMemory
// 2858   }
// 2859 
// 2860   return ( TRUE );
??ZDMatchSendState_19:
        MOV       R1,#0x1
??ZDMatchSendState_3:
        LJMP      ?Subroutine4 & 0xFFFF
// 2861 }
          CFI EndBlock cfiBlock870

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine116:
          CFI Block cfiCond871 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_186
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond872 Using cfiCommon0
          CFI (cfiCond872) Function ZDMatchSendState
          CFI (cfiCond872) Conditional ??CrossCallReturnLabel_187
          CFI (cfiCond872) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond872) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond872) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond872) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond872) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond872) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond872) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond872) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond872) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond872) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond872) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond872) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond872) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond872) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond872) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond872) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond872) CFA_SP SP+-2
          CFI (cfiCond872) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker873 Using cfiCommon1
          CFI (cfiPicker873) NoFunction
          CFI (cfiPicker873) Picker
        MOV       ?V7,A
        LCALL     ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_296:
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        XCH       A,R2
        RET
          CFI EndBlock cfiCond871
          CFI EndBlock cfiCond872
          CFI EndBlock cfiPicker873

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine177:
          CFI Block cfiCond874 Using cfiCommon0
          CFI Function ZDO_CompareClusterLists
          CFI Conditional ??CrossCallReturnLabel_293
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond875) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond875) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond875) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond875) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond875) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond875) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond875) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond875) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond875) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond875) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond875) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond875) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond875) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond875) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond875) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond875) CFA_SP SP+-2
          CFI (cfiCond875) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function ZDMatchSendState
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_186
          CFI (cfiCond876) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond876) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond876) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond876) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond876) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond876) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond876) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond876) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond876) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond876) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond876) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond876) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond876) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond876) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond876) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond876) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond876) CFA_SP SP+-4
          CFI (cfiCond876) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function ZDMatchSendState
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_187
          CFI (cfiCond877) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond877) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond877) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond877) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond877) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond877) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond877) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond877) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond877) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond877) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond877) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond877) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond877) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond877) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond877) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond877) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond877) CFA_SP SP+-4
          CFI (cfiCond877) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond878 Using cfiCommon0
          CFI (cfiCond878) Function ZDO_ParseAddrRsp
          CFI (cfiCond878) Conditional ??CrossCallReturnLabel_295
          CFI (cfiCond878) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond878) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond878) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond878) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond878) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond878) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond878) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond878) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond878) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond878) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond878) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond878) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond878) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond878) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond878) CFA_SP SP+-2
          CFI (cfiCond878) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker879 Using cfiCommon1
          CFI (cfiPicker879) NoFunction
          CFI (cfiPicker879) Picker
        MOV       A,R0
        ADD       A,R0
        MOV       R0,A
        CLR       A
        RLC       A
        MOV       R1,A
        RET
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiCond878
          CFI EndBlock cfiPicker879

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine110:
          CFI Block cfiCond880 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_174
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ZDMatchSendState
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond881) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond881) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond881) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond881) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond881) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond881) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond881) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond881) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond881) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond881) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond881) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond881) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond881) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond881) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond881) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond881) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond881) CFA_SP SP+-2
          CFI (cfiCond881) CFA_XSP16 add(XSP16, 42)
          CFI Block cfiPicker882 Using cfiCommon1
          CFI (cfiPicker882) NoFunction
          CFI (cfiPicker882) Picker
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        ADD       A,#0x17
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        RET
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiPicker882

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine106:
          CFI Block cfiCond883 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_166
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ZDMatchSendState
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond884) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond884) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond884) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond884) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond884) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond884) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond884) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond884) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond884) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond884) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond884) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond884) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond884) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond884) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond884) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond884) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond884) CFA_SP SP+-2
          CFI (cfiCond884) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker885 Using cfiCommon1
          CFI (cfiPicker885) NoFunction
          CFI (cfiPicker885) Picker
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiPicker885

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine70:
          CFI Block cfiCond886 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond887 Using cfiCommon0
          CFI (cfiCond887) Function ZDMatchSendState
          CFI (cfiCond887) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond887) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond887) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond887) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond887) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond887) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond887) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond887) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond887) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond887) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond887) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond887) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond887) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond887) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond887) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond887) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond887) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond887) CFA_SP SP+-2
          CFI (cfiCond887) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker888 Using cfiCommon1
          CFI (cfiPicker888) NoFunction
          CFI (cfiPicker888) Picker
        LCALL     ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_288:
        MOV       A,#0x1
        RET
          CFI EndBlock cfiCond886
          CFI EndBlock cfiCond887
          CFI EndBlock cfiPicker888

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine67:
          CFI Block cfiCond889 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_114
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond890 Using cfiCommon0
          CFI (cfiCond890) Function ZDMatchSendState
          CFI (cfiCond890) Conditional ??CrossCallReturnLabel_115
          CFI (cfiCond890) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond890) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond890) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond890) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond890) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond890) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond890) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond890) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond890) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond890) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond890) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond890) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond890) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond890) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond890) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond890) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond890) CFA_SP SP+-2
          CFI (cfiCond890) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker891 Using cfiCommon1
          CFI (cfiPicker891) NoFunction
          CFI (cfiPicker891) Picker
        MOV       DPTR,#matchED
        LCALL     ?Subroutine166 & 0xFFFF
??CrossCallReturnLabel_287:
        MOVX      A,@DPTR
        XRL       A,#0x1
        RET
          CFI EndBlock cfiCond889
          CFI EndBlock cfiCond890
          CFI EndBlock cfiPicker891

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine166:
          CFI Block cfiCond892 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_120
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function ZDMatchSendState
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_121
          CFI (cfiCond893) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond893) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond893) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond893) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond893) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond893) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond893) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond893) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond893) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond893) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond893) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond893) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond893) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond893) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond893) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond893) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond893) CFA_SP SP+-4
          CFI (cfiCond893) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond894 Using cfiCommon0
          CFI (cfiCond894) Function ZDMatchSendState
          CFI (cfiCond894) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_114
          CFI (cfiCond894) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond894) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond894) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond894) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond894) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond894) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond894) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond894) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond894) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond894) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond894) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond894) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond894) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond894) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond894) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond894) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond894) CFA_SP SP+-4
          CFI (cfiCond894) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond895 Using cfiCommon0
          CFI (cfiCond895) Function ZDMatchSendState
          CFI (cfiCond895) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_115
          CFI (cfiCond895) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond895) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond895) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond895) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond895) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond895) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond895) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond895) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond895) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond895) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond895) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond895) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond895) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond895) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond895) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond895) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond895) CFA_SP SP+-4
          CFI (cfiCond895) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker896 Using cfiCommon1
          CFI (cfiPicker896) NoFunction
          CFI (cfiPicker896) Picker
        LCALL     ?Subroutine193 & 0xFFFF
??CrossCallReturnLabel_697:
        LCALL     ?Subroutine195 & 0xFFFF
??CrossCallReturnLabel_323:
        RET
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiCond894
          CFI EndBlock cfiCond895
          CFI EndBlock cfiPicker896

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine195:
          CFI Block cfiCond897 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_322
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond898 Using cfiCommon0
          CFI (cfiCond898) Function ZDMatchSendState
          CFI (cfiCond898) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_120
          CFI (cfiCond898) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond898) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond898) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond898) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond898) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond898) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond898) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond898) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond898) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond898) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond898) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond898) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond898) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond898) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond898) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond898) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond898) CFA_SP SP+-6
          CFI (cfiCond898) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond899 Using cfiCommon0
          CFI (cfiCond899) Function ZDMatchSendState
          CFI (cfiCond899) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_121
          CFI (cfiCond899) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond899) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond899) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond899) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond899) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond899) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond899) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond899) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond899) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond899) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond899) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond899) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond899) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond899) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond899) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond899) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond899) CFA_SP SP+-6
          CFI (cfiCond899) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function ZDMatchSendState
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_114
          CFI (cfiCond900) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond900) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond900) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond900) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond900) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond900) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond900) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond900) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond900) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond900) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond900) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond900) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond900) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond900) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond900) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond900) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond900) CFA_SP SP+-6
          CFI (cfiCond900) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function ZDMatchSendState
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_323, ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_115
          CFI (cfiCond901) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond901) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond901) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond901) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond901) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond901) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond901) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond901) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond901) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond901) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond901) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond901) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond901) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond901) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond901) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond901) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond901) CFA_SP SP+-6
          CFI (cfiCond901) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker902 Using cfiCommon1
          CFI (cfiPicker902) NoFunction
          CFI (cfiPicker902) Picker
        ADD       A,#0x2f
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond897
          CFI EndBlock cfiCond898
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiPicker902

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine66:
          CFI Block cfiCond903 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond904 Using cfiCommon0
          CFI (cfiCond904) Function ZDMatchSendState
          CFI (cfiCond904) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond904) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond904) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond904) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond904) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond904) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond904) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond904) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond904) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond904) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond904) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond904) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond904) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond904) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond904) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond904) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond904) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond904) CFA_SP SP+-2
          CFI (cfiCond904) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker905 Using cfiCommon1
          CFI (cfiPicker905) NoFunction
          CFI (cfiPicker905) Picker
        LCALL     ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_691:
        ADD       A,#0x2e
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_538:
        XRL       A,#0x2
        RET
          CFI EndBlock cfiCond903
          CFI EndBlock cfiCond904
          CFI EndBlock cfiPicker905

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine56:
          CFI Block cfiCond906 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_94
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond907 Using cfiCommon0
          CFI (cfiCond907) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond907) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond907) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond907) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond907) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond907) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond907) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond907) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond907) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond907) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond907) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond907) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond907) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond907) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond907) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond907) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond907) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond907) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond907) CFA_SP SP+-2
          CFI (cfiCond907) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond908 Using cfiCommon0
          CFI (cfiCond908) Function ZDMatchSendState
          CFI (cfiCond908) Conditional ??CrossCallReturnLabel_96
          CFI (cfiCond908) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond908) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond908) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond908) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond908) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond908) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond908) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond908) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond908) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond908) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond908) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond908) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond908) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond908) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond908) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond908) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond908) CFA_SP SP+-2
          CFI (cfiCond908) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker909 Using cfiCommon1
          CFI (cfiPicker909) NoFunction
          CFI (cfiPicker909) Picker
        LCALL     ?Subroutine167 & 0xFFFF
??CrossCallReturnLabel_690:
        ADD       A,#0x31
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_537:
        RET
          CFI EndBlock cfiCond906
          CFI EndBlock cfiCond907
          CFI EndBlock cfiCond908
          CFI EndBlock cfiPicker909

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine184:
          CFI Block cfiCond910 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_222
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond911 Using cfiCommon0
          CFI (cfiCond911) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond911) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_223
          CFI (cfiCond911) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond911) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond911) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond911) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond911) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond911) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond911) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond911) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond911) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond911) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond911) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond911) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond911) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond911) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond911) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond911) CFA_SP SP+-4
          CFI (cfiCond911) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_224
          CFI (cfiCond912) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond912) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond912) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond912) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond912) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond912) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond912) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond912) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond912) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond912) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond912) CFA_SP SP+-4
          CFI (cfiCond912) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond913 Using cfiCommon0
          CFI (cfiCond913) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond913) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_225
          CFI (cfiCond913) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond913) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond913) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond913) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond913) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond913) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond913) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond913) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond913) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond913) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond913) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond913) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond913) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond913) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond913) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond913) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond913) CFA_SP SP+-4
          CFI (cfiCond913) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond914 Using cfiCommon0
          CFI (cfiCond914) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond914) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_226
          CFI (cfiCond914) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond914) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond914) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond914) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond914) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond914) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond914) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond914) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond914) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond914) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond914) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond914) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond914) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond914) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond914) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond914) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond914) CFA_SP SP+-4
          CFI (cfiCond914) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_227
          CFI (cfiCond915) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond915) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond915) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond915) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond915) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond915) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond915) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond915) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond915) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond915) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond915) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond915) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond915) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond915) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond915) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond915) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond915) CFA_SP SP+-4
          CFI (cfiCond915) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_228
          CFI (cfiCond916) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond916) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond916) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond916) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond916) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond916) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond916) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond916) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond916) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond916) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond916) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond916) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond916) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond916) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond916) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond916) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond916) CFA_SP SP+-4
          CFI (cfiCond916) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond917 Using cfiCommon0
          CFI (cfiCond917) Function ZDMatchSendState
          CFI (cfiCond917) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_229
          CFI (cfiCond917) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond917) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond917) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond917) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond917) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond917) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond917) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond917) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond917) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond917) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond917) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond917) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond917) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond917) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond917) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond917) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond917) CFA_SP SP+-4
          CFI (cfiCond917) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond918 Using cfiCommon0
          CFI (cfiCond918) Function ZDMatchSendState
          CFI (cfiCond918) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_230
          CFI (cfiCond918) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond918) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond918) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond918) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond918) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond918) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond918) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond918) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond918) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond918) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond918) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond918) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond918) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond918) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond918) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond918) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond918) CFA_SP SP+-4
          CFI (cfiCond918) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond919 Using cfiCommon0
          CFI (cfiCond919) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond919) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_506
          CFI (cfiCond919) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond919) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond919) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond919) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond919) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond919) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond919) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond919) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond919) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond919) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond919) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond919) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond919) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond919) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond919) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond919) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond919) CFA_SP SP+-4
          CFI (cfiCond919) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond920 Using cfiCommon0
          CFI (cfiCond920) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond920) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_507
          CFI (cfiCond920) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond920) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond920) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond920) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond920) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond920) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond920) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond920) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond920) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond920) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond920) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond920) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond920) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond920) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond920) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond920) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond920) CFA_SP SP+-4
          CFI (cfiCond920) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond921 Using cfiCommon0
          CFI (cfiCond921) Function ZDMatchSendState
          CFI (cfiCond921) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_505
          CFI (cfiCond921) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond921) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond921) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond921) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond921) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond921) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond921) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond921) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond921) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond921) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond921) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond921) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond921) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond921) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond921) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond921) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond921) CFA_SP SP+-4
          CFI (cfiCond921) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond922 Using cfiCommon0
          CFI (cfiCond922) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond922) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_112
          CFI (cfiCond922) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond922) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond922) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond922) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond922) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond922) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond922) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond922) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond922) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond922) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond922) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond922) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond922) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond922) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond922) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond922) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond922) CFA_SP SP+-4
          CFI (cfiCond922) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond923 Using cfiCommon0
          CFI (cfiCond923) Function ZDMatchSendState
          CFI (cfiCond923) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_113
          CFI (cfiCond923) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond923) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond923) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond923) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond923) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond923) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond923) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond923) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond923) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond923) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond923) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond923) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond923) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond923) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond923) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond923) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond923) CFA_SP SP+-4
          CFI (cfiCond923) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond924 Using cfiCommon0
          CFI (cfiCond924) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond924) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_94
          CFI (cfiCond924) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond924) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond924) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond924) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond924) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond924) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond924) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond924) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond924) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond924) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond924) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond924) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond924) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond924) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond924) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond924) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond924) CFA_SP SP+-4
          CFI (cfiCond924) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond925 Using cfiCommon0
          CFI (cfiCond925) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond925) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_95
          CFI (cfiCond925) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond925) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond925) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond925) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond925) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond925) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond925) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond925) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond925) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond925) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond925) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond925) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond925) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond925) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond925) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond925) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond925) CFA_SP SP+-4
          CFI (cfiCond925) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond926 Using cfiCommon0
          CFI (cfiCond926) Function ZDMatchSendState
          CFI (cfiCond926) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_96
          CFI (cfiCond926) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond926) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond926) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond926) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond926) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond926) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond926) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond926) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond926) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond926) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond926) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond926) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond926) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond926) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond926) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond926) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond926) CFA_SP SP+-4
          CFI (cfiCond926) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond927 Using cfiCommon0
          CFI (cfiCond927) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond927) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_122
          CFI (cfiCond927) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond927) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond927) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond927) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond927) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond927) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond927) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond927) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond927) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond927) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond927) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond927) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond927) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond927) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond927) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond927) CFA_SP SP+-4
          CFI (cfiCond927) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond928 Using cfiCommon0
          CFI (cfiCond928) Function ZDO_ParseAddrRsp
          CFI (cfiCond928) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_123
          CFI (cfiCond928) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond928) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond928) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond928) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond928) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond928) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond928) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond928) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond928) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond928) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond928) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond928) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond928) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond928) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond928) CFA_SP SP+-4
          CFI (cfiCond928) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond929 Using cfiCommon0
          CFI (cfiCond929) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond929) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_685
          CFI (cfiCond929) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond929) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond929) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond929) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond929) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond929) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond929) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond929) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond929) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond929) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond929) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond929) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond929) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond929) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond929) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond929) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond929) CFA_SP SP+-4
          CFI (cfiCond929) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond930 Using cfiCommon0
          CFI (cfiCond930) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond930) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_686
          CFI (cfiCond930) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond930) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond930) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond930) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond930) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond930) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond930) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond930) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond930) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond930) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond930) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond930) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond930) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond930) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond930) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond930) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond930) CFA_SP SP+-4
          CFI (cfiCond930) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker931 Using cfiCommon1
          CFI (cfiPicker931) NoFunction
          CFI (cfiPicker931) Picker
        MOV       DPL,A
        CLR       A
          CFI EndBlock cfiCond910
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiCond913
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiCond917
          CFI EndBlock cfiCond918
          CFI EndBlock cfiCond919
          CFI EndBlock cfiCond920
          CFI EndBlock cfiCond921
          CFI EndBlock cfiCond922
          CFI EndBlock cfiCond923
          CFI EndBlock cfiCond924
          CFI EndBlock cfiCond925
          CFI EndBlock cfiCond926
          CFI EndBlock cfiCond927
          CFI EndBlock cfiCond928
          CFI EndBlock cfiCond929
          CFI EndBlock cfiCond930
          CFI EndBlock cfiPicker931
        REQUIRE ??Subroutine235_0
        ; // Fall through to label ??Subroutine235_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine235_0:
          CFI Block cfiCond932 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_118
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond933 Using cfiCommon0
          CFI (cfiCond933) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond933) Conditional ??CrossCallReturnLabel_536, ??CrossCallReturnLabel_119
          CFI (cfiCond933) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond933) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond933) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond933) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond933) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond933) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond933) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond933) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond933) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond933) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond933) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond933) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond933) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond933) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond933) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond933) CFA_SP SP+-4
          CFI (cfiCond933) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond934 Using cfiCommon0
          CFI (cfiCond934) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond934) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_222
          CFI (cfiCond934) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond934) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond934) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond934) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond934) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond934) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond934) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond934) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond934) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond934) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond934) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond934) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond934) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond934) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond934) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond934) CFA_SP SP+-4
          CFI (cfiCond934) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond935 Using cfiCommon0
          CFI (cfiCond935) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond935) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_223
          CFI (cfiCond935) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond935) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond935) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond935) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond935) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond935) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond935) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond935) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond935) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond935) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond935) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond935) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond935) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond935) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond935) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond935) CFA_SP SP+-4
          CFI (cfiCond935) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond936 Using cfiCommon0
          CFI (cfiCond936) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond936) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_224
          CFI (cfiCond936) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond936) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond936) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond936) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond936) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond936) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond936) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond936) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond936) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond936) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond936) CFA_SP SP+-4
          CFI (cfiCond936) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond937 Using cfiCommon0
          CFI (cfiCond937) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond937) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_225
          CFI (cfiCond937) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond937) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond937) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond937) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond937) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond937) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond937) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond937) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond937) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond937) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond937) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond937) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond937) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond937) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond937) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond937) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond937) CFA_SP SP+-4
          CFI (cfiCond937) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond938 Using cfiCommon0
          CFI (cfiCond938) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond938) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_226
          CFI (cfiCond938) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond938) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond938) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond938) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond938) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond938) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond938) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond938) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond938) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond938) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond938) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond938) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond938) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond938) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond938) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond938) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond938) CFA_SP SP+-4
          CFI (cfiCond938) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond939 Using cfiCommon0
          CFI (cfiCond939) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond939) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_227
          CFI (cfiCond939) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond939) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond939) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond939) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond939) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond939) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond939) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond939) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond939) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond939) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond939) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond939) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond939) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond939) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond939) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond939) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond939) CFA_SP SP+-4
          CFI (cfiCond939) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond940 Using cfiCommon0
          CFI (cfiCond940) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond940) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_228
          CFI (cfiCond940) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond940) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond940) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond940) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond940) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond940) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond940) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond940) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond940) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond940) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond940) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond940) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond940) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond940) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond940) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond940) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond940) CFA_SP SP+-4
          CFI (cfiCond940) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond941 Using cfiCommon0
          CFI (cfiCond941) Function ZDMatchSendState
          CFI (cfiCond941) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_229
          CFI (cfiCond941) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond941) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond941) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond941) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond941) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond941) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond941) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond941) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond941) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond941) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond941) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond941) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond941) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond941) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond941) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond941) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond941) CFA_SP SP+-4
          CFI (cfiCond941) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond942 Using cfiCommon0
          CFI (cfiCond942) Function ZDMatchSendState
          CFI (cfiCond942) Conditional ??CrossCallReturnLabel_541, ??CrossCallReturnLabel_230
          CFI (cfiCond942) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond942) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond942) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond942) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond942) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond942) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond942) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond942) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond942) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond942) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond942) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond942) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond942) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond942) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond942) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond942) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond942) CFA_SP SP+-4
          CFI (cfiCond942) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond943 Using cfiCommon0
          CFI (cfiCond943) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond943) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_506
          CFI (cfiCond943) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond943) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond943) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond943) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond943) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond943) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond943) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond943) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond943) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond943) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond943) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond943) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond943) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond943) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond943) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond943) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond943) CFA_SP SP+-4
          CFI (cfiCond943) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond944 Using cfiCommon0
          CFI (cfiCond944) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond944) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_507
          CFI (cfiCond944) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond944) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond944) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond944) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond944) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond944) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond944) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond944) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond944) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond944) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond944) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond944) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond944) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond944) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond944) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond944) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond944) CFA_SP SP+-4
          CFI (cfiCond944) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond945 Using cfiCommon0
          CFI (cfiCond945) Function ZDMatchSendState
          CFI (cfiCond945) Conditional ??CrossCallReturnLabel_542, ??CrossCallReturnLabel_505
          CFI (cfiCond945) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond945) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond945) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond945) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond945) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond945) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond945) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond945) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond945) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond945) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond945) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond945) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond945) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond945) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond945) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond945) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond945) CFA_SP SP+-4
          CFI (cfiCond945) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond946 Using cfiCommon0
          CFI (cfiCond946) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond946) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_112
          CFI (cfiCond946) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond946) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond946) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond946) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond946) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond946) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond946) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond946) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond946) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond946) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond946) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond946) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond946) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond946) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond946) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond946) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond946) CFA_SP SP+-4
          CFI (cfiCond946) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond947 Using cfiCommon0
          CFI (cfiCond947) Function ZDMatchSendState
          CFI (cfiCond947) Conditional ??CrossCallReturnLabel_538, ??CrossCallReturnLabel_113
          CFI (cfiCond947) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond947) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond947) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond947) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond947) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond947) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond947) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond947) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond947) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond947) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond947) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond947) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond947) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond947) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond947) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond947) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond947) CFA_SP SP+-4
          CFI (cfiCond947) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond948 Using cfiCommon0
          CFI (cfiCond948) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond948) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_94
          CFI (cfiCond948) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond948) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond948) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond948) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond948) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond948) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond948) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond948) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond948) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond948) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond948) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond948) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond948) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond948) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond948) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond948) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond948) CFA_SP SP+-4
          CFI (cfiCond948) CFA_XSP16 add(XSP16, 29)
          CFI Block cfiCond949 Using cfiCommon0
          CFI (cfiCond949) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond949) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_95
          CFI (cfiCond949) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond949) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond949) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond949) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond949) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond949) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond949) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond949) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond949) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond949) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond949) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond949) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond949) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond949) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond949) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond949) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond949) CFA_SP SP+-4
          CFI (cfiCond949) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond950 Using cfiCommon0
          CFI (cfiCond950) Function ZDMatchSendState
          CFI (cfiCond950) Conditional ??CrossCallReturnLabel_537, ??CrossCallReturnLabel_96
          CFI (cfiCond950) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond950) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond950) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond950) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond950) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond950) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond950) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond950) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond950) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond950) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond950) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond950) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond950) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond950) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond950) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond950) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond950) CFA_SP SP+-4
          CFI (cfiCond950) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond951 Using cfiCommon0
          CFI (cfiCond951) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond951) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_122
          CFI (cfiCond951) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond951) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond951) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond951) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond951) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond951) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond951) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond951) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond951) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond951) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond951) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond951) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond951) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond951) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond951) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond951) CFA_SP SP+-4
          CFI (cfiCond951) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond952 Using cfiCommon0
          CFI (cfiCond952) Function ZDO_ParseAddrRsp
          CFI (cfiCond952) Conditional ??CrossCallReturnLabel_539, ??CrossCallReturnLabel_123
          CFI (cfiCond952) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond952) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond952) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond952) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond952) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond952) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond952) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond952) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond952) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond952) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond952) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond952) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond952) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond952) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond952) CFA_SP SP+-4
          CFI (cfiCond952) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond953 Using cfiCommon0
          CFI (cfiCond953) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond953) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_685
          CFI (cfiCond953) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond953) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond953) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond953) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond953) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond953) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond953) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond953) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond953) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond953) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond953) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond953) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond953) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond953) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond953) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond953) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond953) CFA_SP SP+-4
          CFI (cfiCond953) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond954 Using cfiCommon0
          CFI (cfiCond954) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond954) Conditional ??CrossCallReturnLabel_540, ??CrossCallReturnLabel_686
          CFI (cfiCond954) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond954) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond954) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond954) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond954) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond954) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond954) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond954) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond954) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond954) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond954) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond954) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond954) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond954) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond954) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond954) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond954) CFA_SP SP+-4
          CFI (cfiCond954) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker955 Using cfiCommon1
          CFI (cfiPicker955) NoFunction
          CFI (cfiPicker955) Picker
        ADDC      A,R0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond932
          CFI EndBlock cfiCond933
          CFI EndBlock cfiCond934
          CFI EndBlock cfiCond935
          CFI EndBlock cfiCond936
          CFI EndBlock cfiCond937
          CFI EndBlock cfiCond938
          CFI EndBlock cfiCond939
          CFI EndBlock cfiCond940
          CFI EndBlock cfiCond941
          CFI EndBlock cfiCond942
          CFI EndBlock cfiCond943
          CFI EndBlock cfiCond944
          CFI EndBlock cfiCond945
          CFI EndBlock cfiCond946
          CFI EndBlock cfiCond947
          CFI EndBlock cfiCond948
          CFI EndBlock cfiCond949
          CFI EndBlock cfiCond950
          CFI EndBlock cfiCond951
          CFI EndBlock cfiCond952
          CFI EndBlock cfiCond953
          CFI EndBlock cfiCond954
          CFI EndBlock cfiPicker955

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine54:
          CFI Block cfiCond956 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_89
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond957 Using cfiCommon0
          CFI (cfiCond957) Function ZDMatchSendState
          CFI (cfiCond957) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond957) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond957) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond957) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond957) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond957) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond957) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond957) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond957) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond957) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond957) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond957) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond957) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond957) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond957) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond957) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond957) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond957) CFA_SP SP+-2
          CFI (cfiCond957) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker958 Using cfiCommon1
          CFI (cfiPicker958) NoFunction
          CFI (cfiPicker958) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,R2
        MOV       DPH,A
        MOVX      A,@DPTR
        ADD       A,R0
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,R1
        MOV       R1,A
        MOV       A,R0
        ADD       A,#-0x2
        MOV       DPL,A
        MOV       A,R1
        ADDC      A,#-0x1
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_456:
        MOV       DPTR,#matchED
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond956
          CFI EndBlock cfiCond957
          CFI EndBlock cfiPicker958

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine35:
          CFI Block cfiCond959 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond960 Using cfiCommon0
          CFI (cfiCond960) Function ZDMatchSendState
          CFI (cfiCond960) Conditional ??CrossCallReturnLabel_57
          CFI (cfiCond960) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond960) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond960) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond960) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond960) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond960) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond960) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond960) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond960) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond960) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond960) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond960) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond960) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond960) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond960) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond960) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond960) CFA_SP SP+-2
          CFI (cfiCond960) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker961 Using cfiCommon1
          CFI (cfiPicker961) NoFunction
          CFI (cfiPicker961) Picker
        LCALL     ??Subroutine231_0 & 0xFFFF
??CrossCallReturnLabel_521:
        MOV       R1,A
        MOV       A,R0
        ORL       A,R1
        RET
          CFI EndBlock cfiCond959
          CFI EndBlock cfiCond960
          CFI EndBlock cfiPicker961

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine14:
          CFI Block cfiCond962 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond963 Using cfiCommon0
          CFI (cfiCond963) Function ZDO_ProcessParentAnnce
          CFI (cfiCond963) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond963) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond963) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond963) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond963) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond963) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond963) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond963) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond963) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond963) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond963) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond963) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond963) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond963) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond963) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond963) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond963) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond963) CFA_SP SP+-2
          CFI (cfiCond963) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond964 Using cfiCommon0
          CFI (cfiCond964) Function ZDMatchSendState
          CFI (cfiCond964) Conditional ??CrossCallReturnLabel_12
          CFI (cfiCond964) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond964) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond964) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond964) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond964) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond964) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond964) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond964) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond964) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond964) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond964) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond964) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond964) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond964) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond964) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond964) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond964) CFA_SP SP+-2
          CFI (cfiCond964) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond965 Using cfiCommon0
          CFI (cfiCond965) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond965) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond965) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond965) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond965) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond965) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond965) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond965) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond965) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond965) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond965) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond965) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond965) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond965) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond965) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond965) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond965) CFA_SP SP+-2
          CFI (cfiCond965) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond966 Using cfiCommon0
          CFI (cfiCond966) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond966) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond966) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond966) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond966) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond966) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond966) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond966) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond966) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond966) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond966) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond966) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond966) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond966) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond966) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond966) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond966) CFA_SP SP+-2
          CFI (cfiCond966) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker967 Using cfiCommon1
          CFI (cfiPicker967) NoFunction
          CFI (cfiPicker967) Picker
        LCALL     ??Subroutine220_0 & 0xFFFF
??CrossCallReturnLabel_449:
        RET
          CFI EndBlock cfiCond962
          CFI EndBlock cfiCond963
          CFI EndBlock cfiCond964
          CFI EndBlock cfiCond965
          CFI EndBlock cfiCond966
          CFI EndBlock cfiPicker967

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine11:
          CFI Block cfiCond968 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond969 Using cfiCommon0
          CFI (cfiCond969) Function ZDMatchSendState
          CFI (cfiCond969) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond969) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond969) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond969) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond969) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond969) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond969) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond969) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond969) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond969) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond969) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond969) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond969) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond969) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond969) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond969) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond969) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond969) CFA_SP SP+-2
          CFI (cfiCond969) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiPicker970 Using cfiCommon1
          CFI (cfiPicker970) NoFunction
          CFI (cfiPicker970) Picker
        MOV       A,R0
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ?Subroutine150 & 0xFFFF
??CrossCallReturnLabel_520:
        MOV       DPH,A
        MOV       DPL,R0
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond968
          CFI EndBlock cfiCond969
          CFI EndBlock cfiPicker970
// 2862 
// 2863 /*********************************************************************
// 2864  * @fn      ZDO_EndDeviceBindMatchTimeoutCB()
// 2865  *
// 2866  * @brief   End device bind timeout.
// 2867  *
// 2868  * @param  none
// 2869  *
// 2870  * @return  none
// 2871  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2872 static void ZDO_EndDeviceBindMatchTimeoutCB( void )
ZDO_EndDeviceBindMatchTimeoutCB:
          CFI Block cfiBlock971 Using cfiCommon0
          CFI Function ZDO_EndDeviceBindMatchTimeoutCB
        CODE
// 2873 {
        FUNCALL ZDO_EndDeviceBindMatchTimeoutCB, ZDMatchSendState
        LOCFRAME ISTACK, 2, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 0, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 2, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 0, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUSH      DPL
          CFI DPL0 Frame(CFA_SP, 4)
          CFI CFA_SP SP+-4
        PUSH      DPH
          CFI DPH0 Frame(CFA_SP, 5)
          CFI CFA_SP SP+-5
        ; Saved register size: 2
        ; Auto size: 0
// 2874   ZDMatchSendState( ZDMATCH_REASON_TIMEOUT, ZDP_TIMEOUT, 0 );
        ; Setup parameters for call to function ZDMatchSendState
        MOV       R3,#0x0
        MOV       R2,#-0x7b
        MOV       R1,#0x1
        LCALL     `??ZDMatchSendState::?relay`; Banked call to: ZDMatchSendState
// 2875 }
        LJMP      ?Subroutine0 & 0xFFFF
          CFI EndBlock cfiBlock971
// 2876 #endif // ZG_BUILD_COORDINATOR_TYPE
// 2877 
// 2878 /*********************************************************************
// 2879  * ZDO MESSAGE PARSING API FUNCTIONS
// 2880  */
// 2881 
// 2882 #ifdef ZDO_ENDDEVICEBIND_RESPONSE
// 2883 /*********************************************************************
// 2884  * @fn          ZDO_ParseEndDeviceBindReq
// 2885  *
// 2886  * @brief       This function parses the End_Device_Bind_req message.
// 2887  *
// 2888  *     NOTE:  The clusters lists in bindReq are allocated in this
// 2889  *            function and must be freed by that calling function.
// 2890  *
// 2891  * @param       inMsg  - incoming message (request)
// 2892  * @param       bindReq - pointer to place to parse message to
// 2893  *
// 2894  * @return      none
// 2895  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2896 void ZDO_ParseEndDeviceBindReq( zdoIncomingMsg_t *inMsg, ZDEndDeviceBind_t *bindReq )
ZDO_ParseEndDeviceBindReq:
          CFI Block cfiBlock972 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
        CODE
// 2897 {
        FUNCALL ZDO_ParseEndDeviceBindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEndDeviceBindReq, ZDO_ConvertOTAClusters
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       ?V0,R4
        MOV       ?V1,R5
// 2898   uint8 *msg;
// 2899 
// 2900   // Parse the message
// 2901   bindReq->TransSeq = inMsg->TransSeq;
        MOV       A,R2
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_220:
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ?Subroutine42 & 0xFFFF
// 2902   bindReq->srcAddr = inMsg->srcAddr.addr.shortAddr;
??CrossCallReturnLabel_543:
        INC       DPTR
        LCALL     ??Subroutine218_0 & 0xFFFF
??CrossCallReturnLabel_440:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine215_0 & 0xFFFF
// 2903   bindReq->SecurityUse = inMsg->SecurityUse;
??CrossCallReturnLabel_420:
        MOV       A,R2
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_571:
        ADDC      A,R3
        MOV       DPH,A
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_142:
        LCALL     ?Subroutine32 & 0xFFFF
// 2904   msg = inMsg->asdu;
??CrossCallReturnLabel_50:
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
// 2905 
// 2906   bindReq->localCoordinator = BUILD_UINT16( msg[0], msg[1] );
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_128:
        LCALL     ?Subroutine15 & 0xFFFF
// 2907   msg += 2;
??CrossCallReturnLabel_554:
        JNC       ??ZDO_ParseEndDeviceBindReq_0
        INC       R7
// 2908 
// 2909   osal_cpyExtAddr( bindReq->ieeeAddr, msg );
??ZDO_ParseEndDeviceBindReq_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x6
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2910   msg += Z_EXTADDR_LEN;
// 2911 
// 2912   bindReq->endpoint = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_216:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_612:
        JNC       ??ZDO_ParseEndDeviceBindReq_1
        INC       R7
// 2913   bindReq->profileID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseEndDeviceBindReq_1:
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_160:
        LCALL     ??Subroutine208_0 & 0xFFFF
??CrossCallReturnLabel_348:
        LCALL     ??Subroutine215_0 & 0xFFFF
// 2914   msg += 2;
// 2915 
// 2916   bindReq->inClusters = NULL;
??CrossCallReturnLabel_421:
        MOV       A,?V0
        ADD       A,#0x12
        MOV       ?V6,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V7,A
        MOV       DPL,?V6
        MOV       DPH,A
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,?V0
        ADD       A,#0x15
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_579:
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        LCALL     ?Subroutine48 & 0xFFFF
// 2917   bindReq->outClusters = NULL;
// 2918 
// 2919   if ((bindReq->numInClusters = *msg++) &&
// 2920       (bindReq->inClusters = (uint16*)osal_mem_alloc( (bindReq->numInClusters * sizeof( uint16 )))))
??CrossCallReturnLabel_81:
        MOV       R0,A
        MOV       A,?V0
        ADD       A,#0x11
        LCALL     ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_237:
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseEndDeviceBindReq_2
        INC       R7
??ZDO_ParseEndDeviceBindReq_2:
        MOV       A,R0
        JZ        ??ZDO_ParseEndDeviceBindReq_3
        ; Setup parameters for call to function osal_mem_alloc
        ADD       A,R0
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       DPL,?V6
        MOV       DPH,?V7
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,R4
        ORL       A,R5
        JZ        ??ZDO_ParseEndDeviceBindReq_3
// 2921   {
// 2922     msg = ZDO_ConvertOTAClusters( bindReq->numInClusters, msg, bindReq->inClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        MOV       ?V2,R2
        MOV       ?V3,R3
        MOV       R6,?V2
        MOV       R7,?V3
        SJMP      ??ZDO_ParseEndDeviceBindReq_4
// 2923   }
// 2924   else
// 2925   {
// 2926     bindReq->numInClusters = 0;
??ZDO_ParseEndDeviceBindReq_3:
        MOV       DPL,?V2
        MOV       DPH,?V3
        CLR       A
        MOVX      @DPTR,A
// 2927   }
// 2928 
// 2929   if ((bindReq->numOutClusters = *msg++) &&
// 2930       (bindReq->outClusters = (uint16*)osal_mem_alloc((bindReq->numOutClusters * sizeof(uint16)))))
??ZDO_ParseEndDeviceBindReq_4:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R0,A
        MOV       A,?V0
        ADD       A,#0x14
        LCALL     ?Subroutine140 & 0xFFFF
??CrossCallReturnLabel_238:
        LCALL     ?Subroutine17 & 0xFFFF
??CrossCallReturnLabel_17:
        JZ        ??ZDO_ParseEndDeviceBindReq_5
        ; Setup parameters for call to function osal_mem_alloc
        ADD       A,R0
        MOV       R2,A
        CLR       A
        RLC       A
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R4,?V4
        MOV       R5,?V5
        MOV       A,?V0
        ADD       A,#0x15
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_580:
        MOV       A,R4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R5
        MOVX      @DPTR,A
        MOV       A,R4
        ORL       A,R5
        JZ        ??ZDO_ParseEndDeviceBindReq_5
// 2931   {
// 2932     msg = ZDO_ConvertOTAClusters( bindReq->numOutClusters, msg, bindReq->outClusters );
        ; Setup parameters for call to function ZDO_ConvertOTAClusters
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        MOV       DPL,?V2
        MOV       DPH,?V3
        MOVX      A,@DPTR
        MOV       R1,A
        LCALL     `??ZDO_ConvertOTAClusters::?relay`; Banked call to: ZDO_ConvertOTAClusters
        SJMP      ??ZDO_ParseEndDeviceBindReq_6
// 2933   }
// 2934   else
// 2935   {
// 2936     bindReq->numOutClusters = 0;
??ZDO_ParseEndDeviceBindReq_5:
        MOV       DPL,?V2
        MOV       DPH,?V3
        CLR       A
        MOVX      @DPTR,A
// 2937   }
// 2938 }
??ZDO_ParseEndDeviceBindReq_6:
        LJMP      ??Subroutine201_0 & 0xFFFF
          CFI EndBlock cfiBlock972

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine140:
          CFI Block cfiCond973 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_237
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond974 Using cfiCommon0
          CFI (cfiCond974) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond974) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond974) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond974) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond974) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond974) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond974) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond974) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond974) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond974) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond974) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond974) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond974) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond974) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond974) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond974) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond974) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond974) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond974) CFA_SP SP+-2
          CFI (cfiCond974) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker975 Using cfiCommon1
          CFI (cfiPicker975) NoFunction
          CFI (cfiPicker975) Picker
        MOV       ?V2,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V3,A
        MOV       A,R0
        MOV       DPL,?V2
        MOV       DPH,?V3
        RET
          CFI EndBlock cfiCond973
          CFI EndBlock cfiCond974
          CFI EndBlock cfiPicker975

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine133:
          CFI Block cfiCond976 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_218
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond977 Using cfiCommon0
          CFI (cfiCond977) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond977) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond977) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond977) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond977) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond977) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond977) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond977) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond977) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond977) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond977) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond977) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond977) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond977) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond977) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond977) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond977) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond977) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond977) CFA_SP SP+-2
          CFI (cfiCond977) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond978 Using cfiCommon0
          CFI (cfiCond978) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond978) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond978) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond978) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond978) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond978) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond978) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond978) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond978) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond978) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond978) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond978) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond978) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond978) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond978) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond978) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond978) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond978) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond978) CFA_SP SP+-2
          CFI (cfiCond978) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond979 Using cfiCommon0
          CFI (cfiCond979) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond979) Conditional ??CrossCallReturnLabel_221
          CFI (cfiCond979) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond979) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond979) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond979) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond979) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond979) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond979) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond979) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond979) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond979) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond979) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker980 Using cfiCommon1
          CFI (cfiPicker980) NoFunction
          CFI (cfiPicker980) Picker
        LCALL     ?Subroutine180 & 0xFFFF
??CrossCallReturnLabel_353:
        RET
          CFI EndBlock cfiCond976
          CFI EndBlock cfiCond977
          CFI EndBlock cfiCond978
          CFI EndBlock cfiCond979
          CFI EndBlock cfiPicker980

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine180:
          CFI Block cfiCond981 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond982 Using cfiCommon0
          CFI (cfiCond982) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond982) Conditional ??CrossCallReturnLabel_351, ??CrossCallReturnLabel_102
          CFI (cfiCond982) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond982) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond982) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond982) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond982) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond982) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond982) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond982) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond982) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond982) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond982) CFA_SP SP+-4
          CFI (cfiCond982) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond983 Using cfiCommon0
          CFI (cfiCond983) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond983) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_349
          CFI (cfiCond983) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond983) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond983) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond983) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond983) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond983) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond983) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond983) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond983) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond983) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond983) CFA_SP SP+-4
          CFI (cfiCond983) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond984 Using cfiCommon0
          CFI (cfiCond984) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond984) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_350
          CFI (cfiCond984) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond984) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond984) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond984) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond984) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond984) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond984) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond984) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond984) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond984) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond984) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond984) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond984) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond984) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond984) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond984) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond984) CFA_SP SP+-5
          CFI (cfiCond984) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond985 Using cfiCommon0
          CFI (cfiCond985) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond985) Conditional ??CrossCallReturnLabel_354, ??CrossCallReturnLabel_348
          CFI (cfiCond985) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond985) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond985) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond985) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond985) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond985) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond985) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond985) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond985) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond985) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond985) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond985) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond985) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond985) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond985) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond985) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond985) CFA_SP SP+-4
          CFI (cfiCond985) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond986 Using cfiCommon0
          CFI (cfiCond986) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond986) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_118
          CFI (cfiCond986) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond986) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond986) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond986) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond986) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond986) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond986) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond986) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond986) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond986) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond986) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond986) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond986) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond986) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond986) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond986) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond986) CFA_SP SP+-4
          CFI (cfiCond986) CFA_XSP16 add(XSP16, 63)
          CFI Block cfiCond987 Using cfiCommon0
          CFI (cfiCond987) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond987) Conditional ??CrossCallReturnLabel_352, ??CrossCallReturnLabel_119
          CFI (cfiCond987) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond987) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond987) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond987) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond987) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond987) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond987) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond987) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond987) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond987) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond987) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond987) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond987) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond987) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond987) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond987) CFA_SP SP+-4
          CFI (cfiCond987) CFA_XSP16 add(XSP16, 24)
          CFI Block cfiCond988 Using cfiCommon0
          CFI (cfiCond988) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond988) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_218
          CFI (cfiCond988) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond988) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond988) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond988) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond988) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond988) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond988) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond988) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond988) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond988) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond988) CFA_SP SP+-4
          CFI (cfiCond988) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond989 Using cfiCommon0
          CFI (cfiCond989) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond989) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_219
          CFI (cfiCond989) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond989) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond989) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond989) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond989) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond989) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond989) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond989) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond989) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond989) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond989) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond989) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond989) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond989) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond989) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond989) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond989) CFA_SP SP+-4
          CFI (cfiCond989) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond990 Using cfiCommon0
          CFI (cfiCond990) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond990) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_220
          CFI (cfiCond990) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond990) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond990) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond990) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond990) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond990) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond990) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond990) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond990) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond990) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond990) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond990) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond990) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond990) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond990) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond990) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond990) CFA_SP SP+-4
          CFI (cfiCond990) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond991 Using cfiCommon0
          CFI (cfiCond991) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond991) Conditional ??CrossCallReturnLabel_353, ??CrossCallReturnLabel_221
          CFI (cfiCond991) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond991) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond991) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond991) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond991) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond991) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond991) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond991) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond991) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond991) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond991) CFA_SP SP+-5
          CFI (cfiCond991) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker992 Using cfiCommon1
          CFI (cfiPicker992) NoFunction
          CFI (cfiPicker992) Picker
        ADD       A,#0xf
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond981
          CFI EndBlock cfiCond982
          CFI EndBlock cfiCond983
          CFI EndBlock cfiCond984
          CFI EndBlock cfiCond985
          CFI EndBlock cfiCond986
          CFI EndBlock cfiCond987
          CFI EndBlock cfiCond988
          CFI EndBlock cfiCond989
          CFI EndBlock cfiCond990
          CFI EndBlock cfiCond991
          CFI EndBlock cfiPicker992

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine42:
          CFI Block cfiCond993 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_543
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond994 Using cfiCommon0
          CFI (cfiCond994) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond994) Conditional ??CrossCallReturnLabel_545
          CFI (cfiCond994) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond994) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond994) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond994) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond994) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond994) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond994) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond994) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond994) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond994) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond994) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond994) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond994) CFA_SP SP+-2
          CFI (cfiCond994) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker995 Using cfiCommon1
          CFI (cfiPicker995) NoFunction
          CFI (cfiPicker995) Picker
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
          CFI EndBlock cfiCond993
          CFI EndBlock cfiCond994
          CFI EndBlock cfiPicker995
        REQUIRE ??Subroutine236_0
        ; // Fall through to label ??Subroutine236_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine236_0:
          CFI Block cfiCond996 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_544
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond997 Using cfiCommon0
          CFI (cfiCond997) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond997) Conditional ??CrossCallReturnLabel_543
          CFI (cfiCond997) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond997) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond997) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond997) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond997) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond997) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond997) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond997) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond997) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond997) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond997) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond997) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond997) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond997) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond997) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond997) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond997) CFA_SP SP+-2
          CFI (cfiCond997) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond998 Using cfiCommon0
          CFI (cfiCond998) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond998) Conditional ??CrossCallReturnLabel_545
          CFI (cfiCond998) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond998) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond998) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond998) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond998) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond998) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond998) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond998) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond998) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond998) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond998) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond998) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond998) CFA_SP SP+-2
          CFI (cfiCond998) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker999 Using cfiCommon1
          CFI (cfiPicker999) NoFunction
          CFI (cfiPicker999) Picker
        LCALL     ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_546:
        RET
          CFI EndBlock cfiCond996
          CFI EndBlock cfiCond997
          CFI EndBlock cfiCond998
          CFI EndBlock cfiPicker999

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine158:
          CFI Block cfiCond1000 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_543
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1001 Using cfiCommon0
          CFI (cfiCond1001) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1001) Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_545
          CFI (cfiCond1001) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1001) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1001) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1001) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1001) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1001) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1001) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1001) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1001) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1001) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1001) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1001) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1001) CFA_SP SP+-4
          CFI (cfiCond1001) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1002 Using cfiCommon0
          CFI (cfiCond1002) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1002) Conditional ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_544
          CFI (cfiCond1002) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1002) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1002) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1002) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1002) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1002) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1002) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1002) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1002) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1002) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1002) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1002) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1002) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1002) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1002) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1002) CFA_SP SP+-4
          CFI (cfiCond1002) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1003 Using cfiCommon0
          CFI (cfiCond1003) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1003) Conditional ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_15
          CFI (cfiCond1003) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1003) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1003) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1003) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1003) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1003) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1003) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1003) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1003) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1003) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1003) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1003) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1003) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1003) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1003) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1003) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1003) CFA_SP SP+-4
          CFI (cfiCond1003) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1004 Using cfiCommon0
          CFI (cfiCond1004) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1004) Conditional ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_16
          CFI (cfiCond1004) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1004) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1004) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1004) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1004) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1004) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1004) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1004) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1004) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1004) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1004) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1004) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1004) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1004) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1004) CFA_SP SP+-4
          CFI (cfiCond1004) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1005 Using cfiCommon0
          CFI (cfiCond1005) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1005) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_8
          CFI (cfiCond1005) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1005) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1005) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1005) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1005) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1005) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1005) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1005) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1005) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1005) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1005) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1005) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1005) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1005) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1005) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1005) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1005) CFA_SP SP+-4
          CFI (cfiCond1005) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1006 Using cfiCommon0
          CFI (cfiCond1006) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1006) Conditional ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_9
          CFI (cfiCond1006) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1006) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1006) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1006) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1006) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1006) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1006) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1006) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1006) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1006) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1006) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1006) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1006) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1006) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1006) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1006) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1006) CFA_SP SP+-4
          CFI (cfiCond1006) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1007 Using cfiCommon1
          CFI (cfiPicker1007) NoFunction
          CFI (cfiPicker1007) Picker
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_551:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1000
          CFI EndBlock cfiCond1001
          CFI EndBlock cfiCond1002
          CFI EndBlock cfiCond1003
          CFI EndBlock cfiCond1004
          CFI EndBlock cfiCond1005
          CFI EndBlock cfiCond1006
          CFI EndBlock cfiPicker1007

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine15:
          CFI Block cfiCond1008 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_554
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1009 Using cfiCommon0
          CFI (cfiCond1009) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1009) Conditional ??CrossCallReturnLabel_555
          CFI (cfiCond1009) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1009) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1009) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1009) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1009) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1009) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1009) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1009) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1009) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1009) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1009) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1009) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1009) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1009) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1009) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1009) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1009) CFA_SP SP+-2
          CFI (cfiCond1009) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1010 Using cfiCommon1
          CFI (cfiPicker1010) NoFunction
          CFI (cfiPicker1010) Picker
        INC       DPTR
          CFI EndBlock cfiCond1008
          CFI EndBlock cfiCond1009
          CFI EndBlock cfiPicker1010
        REQUIRE ??Subroutine237_0
        ; // Fall through to label ??Subroutine237_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine237_0:
          CFI Block cfiCond1011 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
          CFI Conditional ??CrossCallReturnLabel_556
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1012 Using cfiCommon0
          CFI (cfiCond1012) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1012) Conditional ??CrossCallReturnLabel_557
          CFI (cfiCond1012) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1012) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1012) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1012) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1012) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1012) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1012) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1012) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1012) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1012) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1012) CFA_SP SP+-2
          CFI (cfiCond1012) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1013 Using cfiCommon0
          CFI (cfiCond1013) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1013) Conditional ??CrossCallReturnLabel_554
          CFI (cfiCond1013) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1013) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1013) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1013) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1013) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1013) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1013) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1013) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1013) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1013) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1013) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1013) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1013) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1013) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1013) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1013) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1013) CFA_SP SP+-2
          CFI (cfiCond1013) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1014 Using cfiCommon0
          CFI (cfiCond1014) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1014) Conditional ??CrossCallReturnLabel_555
          CFI (cfiCond1014) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1014) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1014) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1014) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1014) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1014) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1014) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1014) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1014) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1014) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1014) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1014) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1014) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1014) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1014) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1014) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1014) CFA_SP SP+-2
          CFI (cfiCond1014) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1015 Using cfiCommon1
          CFI (cfiPicker1015) NoFunction
          CFI (cfiPicker1015) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_558:
        RET
          CFI EndBlock cfiCond1011
          CFI EndBlock cfiCond1012
          CFI EndBlock cfiCond1013
          CFI EndBlock cfiCond1014
          CFI EndBlock cfiPicker1015

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine155:
          CFI Block cfiCond1016 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_554
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1017 Using cfiCommon0
          CFI (cfiCond1017) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1017) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_555
          CFI (cfiCond1017) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1017) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1017) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1017) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1017) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1017) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1017) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1017) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1017) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1017) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1017) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1017) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1017) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1017) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1017) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1017) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1017) CFA_SP SP+-4
          CFI (cfiCond1017) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1018 Using cfiCommon0
          CFI (cfiCond1018) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1018) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_556
          CFI (cfiCond1018) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1018) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1018) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1018) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1018) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1018) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1018) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1018) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1018) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1018) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1018) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1018) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1018) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1018) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1018) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1018) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1018) CFA_SP SP+-4
          CFI (cfiCond1018) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1019 Using cfiCommon0
          CFI (cfiCond1019) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1019) Conditional ??CrossCallReturnLabel_558, ??CrossCallReturnLabel_557
          CFI (cfiCond1019) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1019) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1019) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1019) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1019) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1019) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1019) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1019) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1019) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1019) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1019) CFA_SP SP+-4
          CFI (cfiCond1019) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1020 Using cfiCommon0
          CFI (cfiCond1020) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1020) Conditional ??CrossCallReturnLabel_559
          CFI (cfiCond1020) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1020) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1020) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1020) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1020) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1020) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1020) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1020) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1020) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1020) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1020) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1020) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1020) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1020) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1020) CFA_SP SP+-2
          CFI (cfiCond1020) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1021 Using cfiCommon0
          CFI (cfiCond1021) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1021) Conditional ??CrossCallReturnLabel_560
          CFI (cfiCond1021) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1021) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1021) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1021) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1021) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1021) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1021) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1021) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1021) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1021) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1021) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1021) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1021) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1021) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1021) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1021) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1021) CFA_SP SP+-2
          CFI (cfiCond1021) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1022 Using cfiCommon0
          CFI (cfiCond1022) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1022) Conditional ??CrossCallReturnLabel_561
          CFI (cfiCond1022) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1022) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1022) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1022) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1022) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1022) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1022) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1022) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1022) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1022) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1022) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1022) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1022) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1022) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1022) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1022) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1022) CFA_SP SP+-2
          CFI (cfiCond1022) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1023 Using cfiCommon1
          CFI (cfiPicker1023) NoFunction
          CFI (cfiPicker1023) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        RET
          CFI EndBlock cfiCond1016
          CFI EndBlock cfiCond1017
          CFI EndBlock cfiCond1018
          CFI EndBlock cfiCond1019
          CFI EndBlock cfiCond1020
          CFI EndBlock cfiCond1021
          CFI EndBlock cfiCond1022
          CFI EndBlock cfiPicker1023
// 2939 #endif
// 2940 
// 2941 /*********************************************************************
// 2942  * @fn          ZDO_ParseBindUnbindReq
// 2943  *
// 2944  * @brief       This function parses the Bind_req or Unbind_req message.
// 2945  *
// 2946  * @param       inMsg  - incoming message (request)
// 2947  * @param       pReq - place to put parsed information
// 2948  *
// 2949  * @return      none
// 2950  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2951 void ZDO_ParseBindUnbindReq( zdoIncomingMsg_t *inMsg, ZDO_BindUnbindReq_t *pReq )
ZDO_ParseBindUnbindReq:
          CFI Block cfiBlock1024 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
        CODE
// 2952 {
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseBindUnbindReq, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine123 & 0xFFFF
// 2953   uint8 *msg;
// 2954 
// 2955   msg = inMsg->asdu;
??CrossCallReturnLabel_634:
        LCALL     ?Subroutine100 & 0xFFFF
// 2956   osal_cpyExtAddr( pReq->srcAddress, msg );
??CrossCallReturnLabel_366:
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2957   msg += Z_EXTADDR_LEN;
// 2958   pReq->srcEndpoint = *msg++;
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_614:
        JNC       ??ZDO_ParseBindUnbindReq_0
        INC       R7
// 2959   pReq->clusterID = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_0:
        LCALL     ?Subroutine10 & 0xFFFF
// 2960   msg += 2;
// 2961   pReq->dstAddress.addrMode = *msg++;
??CrossCallReturnLabel_4:
        JNC       ??ZDO_ParseBindUnbindReq_1
        INC       R7
// 2962   if ( pReq->dstAddress.addrMode == Addr64Bit )
??ZDO_ParseBindUnbindReq_1:
        LCALL     ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_231:
        JNZ       ??ZDO_ParseBindUnbindReq_2
// 2963   {
// 2964     osal_cpyExtAddr( pReq->dstAddress.addr.extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 2965     msg += Z_EXTADDR_LEN;
// 2966     pReq->dstEndpoint = *msg;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x14
        LCALL     ??Subroutine241_0 & 0xFFFF
// 2967   }
??CrossCallReturnLabel_581:
        POP       A
          CFI CFA_SP SP+0
        SJMP      ??ZDO_ParseBindUnbindReq_3
// 2968   else
// 2969   {
// 2970     // copy group address
// 2971     pReq->dstAddress.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseBindUnbindReq_2:
        LCALL     ?Subroutine97 & 0xFFFF
// 2972   }
??CrossCallReturnLabel_156:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDO_ParseBindUnbindReq_3:
        MOVX      @DPTR,A
// 2973 }
        LJMP      ??Subroutine203_0 & 0xFFFF
          CFI EndBlock cfiBlock1024
// 2974 
// 2975 /*********************************************************************
// 2976  * @fn      ZDO_ParseAddrRsp
// 2977  *
// 2978  * @brief   Turns the inMsg (incoming message) into the out parsed
// 2979  *          structure.
// 2980  *
// 2981  * @param   inMsg - incoming message
// 2982  *
// 2983  * @return  pointer to parsed structures.  This structure was
// 2984  *          allocated using osal_mem_alloc, so it must be freed
// 2985  *          by the calling function [osal_mem_free()].
// 2986  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 2987 ZDO_NwkIEEEAddrResp_t *ZDO_ParseAddrRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseAddrRsp:
          CFI Block cfiBlock1025 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
        CODE
// 2988 {
        FUNCALL ZDO_ParseAddrRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseAddrRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 2989   ZDO_NwkIEEEAddrResp_t *rsp;
// 2990   uint8 *msg;
// 2991   byte cnt = 0;
        MOV       ?V2,#0x0
// 2992 
// 2993   // Calculate the number of items in the list
// 2994   if ( inMsg->asduLen > (1 + Z_EXTADDR_LEN + 2) )
        MOV       A,R2
        ADD       A,#0x13
        MOV       R6,A
        CLR       A
        ADDC      A,R3
        MOV       R7,A
        MOV       A,R2
        ADD       A,#0x10
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        CLR       C
        SUBB      A,#0xc
        JC        ??ZDO_ParseAddrRsp_0
// 2995   {
// 2996     cnt = inMsg->asdu[1 + Z_EXTADDR_LEN + 2];
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine73 & 0xFFFF
// 2997   }
??CrossCallReturnLabel_123:
        MOV       ?V2,A
// 2998   else
// 2999   {
// 3000     cnt = 0;
// 3001   }
// 3002 
// 3003   // Make buffer
// 3004   rsp = (ZDO_NwkIEEEAddrResp_t *)osal_mem_alloc( sizeof(ZDO_NwkIEEEAddrResp_t) + (cnt * sizeof ( uint16 )) );
??ZDO_ParseAddrRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       R0,?V2
        LCALL     ?Subroutine177 & 0xFFFF
??CrossCallReturnLabel_295:
        MOV       A,R0
        ADD       A,#0xd
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V0,R2
        MOV       ?V1,R3
// 3005 
// 3006   if ( rsp )
        MOV       A,R2
        ORL       A,?V1
        JNZ       $+5
        LJMP      ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 3007   {
// 3008     msg = inMsg->asdu;
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine244_0 & 0xFFFF
// 3009 
// 3010     rsp->status = *msg++;
??CrossCallReturnLabel_609:
        MOV       R0,A
        MOV       DPL,R2
        MOV       DPH,R3
        LCALL     ?Subroutine17 & 0xFFFF
// 3011     if ( rsp->status == ZDO_SUCCESS )
??CrossCallReturnLabel_18:
        JZ        $+5
        LJMP      ??ZDO_ParseAddrRsp_1 & 0xFFFF
// 3012     {
// 3013       osal_cpyExtAddr( rsp->extAddr, msg );
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,R2
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3014       msg += Z_EXTADDR_LEN;
        MOV       A,R6
        ADD       A,#0x8
        MOV       R6,A
        JNC       ??ZDO_ParseAddrRsp_2
        INC       R7
// 3015       rsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_2:
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_576:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        LCALL     ??Subroutine216_0 & 0xFFFF
// 3016 
// 3017       msg += 2;
// 3018       rsp->numAssocDevs = 0;
??CrossCallReturnLabel_401:
        MOV       A,?V0
        ADD       A,#0xb
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
        MOV       A,R0
        MOV       R2,A
        MOV       A,R1
        MOV       R3,A
        MOV       DPL,R2
        MOV       DPH,R3
        CLR       A
        MOVX      @DPTR,A
// 3019 
// 3020       // StartIndex field is only present if NumAssocDev field is non-zero.
// 3021       if ( cnt > 0 )
        MOV       A,?V2
        JZ        ??ZDO_ParseAddrRsp_1
// 3022       {
// 3023         uint16 *pList = &(rsp->devList[0]);
        MOV       A,?V0
        ADD       A,#0xd
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
// 3024         byte n = cnt;
// 3025 
// 3026         rsp->numAssocDevs = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_565:
        LCALL     ?Subroutine20 & 0xFFFF
// 3027         rsp->startIndex = *msg++;
??CrossCallReturnLabel_27:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_594:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDO_ParseAddrRsp_3
        INC       R7
??ZDO_ParseAddrRsp_3:
        MOV       R4,?V2
// 3028 
// 3029         while ( n != 0 )
// 3030         {
// 3031           *pList++ = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseAddrRsp_4:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,?V2
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ??Subroutine209_0 & 0xFFFF
??CrossCallReturnLabel_355:
        MOV       A,R0
        ADD       A,#0x2
        MOV       R0,A
        JNC       ??ZDO_ParseAddrRsp_5
        INC       R1
// 3032           msg += sizeof( uint16 );
??ZDO_ParseAddrRsp_5:
        MOV       A,R6
        ADD       A,#0x2
        MOV       R6,A
        JNC       ??ZDO_ParseAddrRsp_6
        INC       R7
// 3033           n--;
// 3034         }
??ZDO_ParseAddrRsp_6:
        DEC       R4
        MOV       A,R4
        JNZ       ??ZDO_ParseAddrRsp_4
// 3035       }
// 3036     }
// 3037   }
// 3038 
// 3039   return ( rsp );
??ZDO_ParseAddrRsp_1:
        MOV       R2,?V0
        MOV       R3,?V1
        LJMP      ??Subroutine222_0 & 0xFFFF
// 3040 }
          CFI EndBlock cfiBlock1025

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine73:
          CFI Block cfiCond1026 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1027 Using cfiCommon0
          CFI (cfiCond1027) Function ZDO_ParseAddrRsp
          CFI (cfiCond1027) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond1027) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1027) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1027) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1027) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1027) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1027) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1027) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1027) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1027) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1027) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1027) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1027) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1027) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1027) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1027) CFA_SP SP+-2
          CFI (cfiCond1027) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1028 Using cfiCommon1
          CFI (cfiPicker1028) NoFunction
          CFI (cfiPicker1028) Picker
        LCALL     ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_689:
        ADD       A,#0xb
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_539:
        RET
          CFI EndBlock cfiCond1026
          CFI EndBlock cfiCond1027
          CFI EndBlock cfiPicker1028

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine72:
          CFI Block cfiCond1029 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_567
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1030 Using cfiCommon0
          CFI (cfiCond1030) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1030) Conditional ??CrossCallReturnLabel_568
          CFI (cfiCond1030) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1030) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1030) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1030) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1030) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1030) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1030) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1030) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1030) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1030) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1030) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1030) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1030) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1030) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1030) CFA_SP SP+-2
          CFI (cfiCond1030) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1031 Using cfiCommon1
          CFI (cfiPicker1031) NoFunction
          CFI (cfiPicker1031) Picker
        MOV       ?V2,A
        CLR       A
        ADDC      A,R5
        MOV       ?V3,A
        MOV       DPL,?V2
        MOV       DPH,A
          CFI EndBlock cfiCond1029
          CFI EndBlock cfiCond1030
          CFI EndBlock cfiPicker1031
        REQUIRE ??Subroutine238_0
        ; // Fall through to label ??Subroutine238_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine238_0:
          CFI Block cfiCond1032 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_562
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1033 Using cfiCommon0
          CFI (cfiCond1033) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1033) Conditional ??CrossCallReturnLabel_563
          CFI (cfiCond1033) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1033) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1033) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1033) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1033) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1033) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1033) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1033) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1033) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1033) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1033) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1033) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1033) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1033) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1033) CFA_SP SP+-2
          CFI (cfiCond1033) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1034 Using cfiCommon0
          CFI (cfiCond1034) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1034) Conditional ??CrossCallReturnLabel_564
          CFI (cfiCond1034) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1034) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1034) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1034) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1034) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1034) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1034) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1034) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1034) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1034) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1034) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1034) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1034) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1034) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1034) CFA_SP SP+-2
          CFI (cfiCond1034) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1035 Using cfiCommon0
          CFI (cfiCond1035) Function ZDO_ParseAddrRsp
          CFI (cfiCond1035) Conditional ??CrossCallReturnLabel_565
          CFI (cfiCond1035) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1035) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1035) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1035) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1035) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1035) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1035) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1035) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1035) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1035) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1035) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1035) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1035) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1035) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1035) CFA_SP SP+-2
          CFI (cfiCond1035) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1036 Using cfiCommon0
          CFI (cfiCond1036) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1036) Conditional ??CrossCallReturnLabel_566
          CFI (cfiCond1036) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1036) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1036) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1036) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1036) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1036) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1036) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1036) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1036) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1036) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1036) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1036) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1036) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1036) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1036) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1036) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1036) CFA_SP SP+-2
          CFI (cfiCond1036) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1037 Using cfiCommon0
          CFI (cfiCond1037) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1037) Conditional ??CrossCallReturnLabel_567
          CFI (cfiCond1037) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1037) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1037) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1037) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1037) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1037) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1037) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1037) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1037) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1037) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1037) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1037) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1037) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1037) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1037) CFA_SP SP+-2
          CFI (cfiCond1037) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1038 Using cfiCommon0
          CFI (cfiCond1038) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1038) Conditional ??CrossCallReturnLabel_568
          CFI (cfiCond1038) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1038) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1038) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1038) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1038) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1038) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1038) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1038) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1038) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1038) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1038) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1038) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1038) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1038) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1038) CFA_SP SP+-2
          CFI (cfiCond1038) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1039 Using cfiCommon1
          CFI (cfiPicker1039) NoFunction
          CFI (cfiPicker1039) Picker
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1032
          CFI EndBlock cfiCond1033
          CFI EndBlock cfiCond1034
          CFI EndBlock cfiCond1035
          CFI EndBlock cfiCond1036
          CFI EndBlock cfiCond1037
          CFI EndBlock cfiCond1038
          CFI EndBlock cfiPicker1039

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine17:
          CFI Block cfiCond1040 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1041 Using cfiCommon0
          CFI (cfiCond1041) Function ZDO_ParseAddrRsp
          CFI (cfiCond1041) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond1041) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1041) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1041) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1041) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1041) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1041) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1041) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1041) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1041) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1041) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1041) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1041) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1041) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1041) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1041) CFA_SP SP+-2
          CFI (cfiCond1041) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1042 Using cfiCommon0
          CFI (cfiCond1042) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1042) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond1042) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1042) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1042) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1042) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1042) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1042) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1042) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1042) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1042) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1042) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1042) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1042) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1042) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1042) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1042) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1042) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1042) CFA_SP SP+-2
          CFI (cfiCond1042) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1043 Using cfiCommon1
          CFI (cfiPicker1043) NoFunction
          CFI (cfiPicker1043) Picker
        LCALL     ?Subroutine196 & 0xFFFF
??CrossCallReturnLabel_633:
        MOV       R6,DPL
        MOV       R7,DPH
        RET
          CFI EndBlock cfiCond1040
          CFI EndBlock cfiCond1041
          CFI EndBlock cfiCond1042
          CFI EndBlock cfiPicker1043
// 3041 
// 3042 /*********************************************************************
// 3043  * @fn          ZDO_ParseNodeDescRsp
// 3044  *
// 3045  * @brief       This function parses the Node_Desc_rsp message.
// 3046  *
// 3047  * @param       inMsg - incoming message
// 3048  * @param       pNDRsp - place to parse the message into
// 3049  *
// 3050  * @return      none
// 3051  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3052 void ZDO_ParseNodeDescRsp( zdoIncomingMsg_t *inMsg, ZDO_NodeDescRsp_t *pNDRsp )
ZDO_ParseNodeDescRsp:
          CFI Block cfiBlock1044 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
        CODE
// 3053 {
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
// 3054   uint8 *msg;
// 3055 
// 3056   msg = inMsg->asdu;
        LCALL     ?Subroutine9 & 0xFFFF
// 3057 
// 3058   pNDRsp->status = *msg++;
// 3059   pNDRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 3060 
// 3061   if ( pNDRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_2:
        JZ        $+5
        LJMP      ??ZDO_ParseNodeDescRsp_0 & 0xFFFF
// 3062   {
// 3063     msg += 2;
// 3064     pNDRsp->nodeDesc.LogicalType = *msg & 0x07;
        MOV       A,R0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        MOV       A,R4
        ADD       A,#0x3
        MOV       R6,A
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ANL       A,#0x7
        MOV       ?V0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xf8
        ORL       A,?V0
        MOV       ?V1,A
        LCALL     ?Subroutine43 & 0xFFFF
// 3065 
// 3066     pNDRsp->nodeDesc.ComplexDescAvail = ( *msg & 0x08 ) >> 3;
??CrossCallReturnLabel_68:
        MOV       C,0xE0 /* A   */.3
        CLR       A
        RLC       A
        MOV       ?V0,A
        MOV       C,0xE0 /* A   */.0
        CLR       A
        RLC       A
        RLC       A
        RLC       A
        RLC       A
        MOV       ?V0,A
        MOV       A,#-0x9
        ANL       A,?V1
        ORL       A,?V0
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine43 & 0xFFFF
// 3067     pNDRsp->nodeDesc.UserDescAvail = ( *msg & 0x10 ) >> 4;
??CrossCallReturnLabel_69:
        MOV       C,0xE0 /* A   */.4
        CLR       A
        RLC       A
        MOV       R2,A
        MOV       C,0xE0 /* A   */.0
        CLR       A
        RLC       A
        SWAP      A
        MOV       R2,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xef
        ORL       A,R2
        MOVX      @DPTR,A
// 3068 
// 3069     msg++;  // Reserved bits.
// 3070     pNDRsp->nodeDesc.FrequencyBand = (*msg >> 3) & 0x1f;
        MOV       A,R0
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        MOV       A,R4
        ADD       A,#0x4
        INC       R6
        CLR       A
        ADDC      A,R5
        MOV       R7,A
        MOV       DPL,R2
        MOV       DPH,R3
        MOVX      A,@DPTR
        ANL       A,#0xf8
        MOV       ?V0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0x7
        ORL       A,?V0
        MOV       ?V0,A
        LCALL     ?Subroutine43 & 0xFFFF
// 3071     pNDRsp->nodeDesc.APSFlags = *msg++ & 0x07;
??CrossCallReturnLabel_70:
        ANL       A,#0x7
        MOV       R2,A
        MOV       A,#-0x8
        ANL       A,?V0
        ORL       A,R2
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine37 & 0xFFFF
// 3072     pNDRsp->nodeDesc.CapabilityFlags = *msg++;
??CrossCallReturnLabel_60:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine38 & 0xFFFF
// 3073     pNDRsp->nodeDesc.ManufacturerCode[0] = *msg++;
??CrossCallReturnLabel_63:
        INC       DPTR
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_618:
        LCALL     ?Subroutine33 & 0xFFFF
// 3074     pNDRsp->nodeDesc.ManufacturerCode[1] = *msg++;
??CrossCallReturnLabel_52:
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_143:
        LCALL     ?Subroutine33 & 0xFFFF
// 3075     pNDRsp->nodeDesc.MaxBufferSize = *msg++;
??CrossCallReturnLabel_53:
        LCALL     ?Subroutine111 & 0xFFFF
??CrossCallReturnLabel_619:
        LCALL     ?Subroutine25 & 0xFFFF
// 3076     pNDRsp->nodeDesc.MaxInTransferSize[0] = *msg++;
??CrossCallReturnLabel_40:
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_144:
        LCALL     ?Subroutine25 & 0xFFFF
// 3077     pNDRsp->nodeDesc.MaxInTransferSize[1] = *msg++;
??CrossCallReturnLabel_41:
        INC       DPTR
        LCALL     ?Subroutine87 & 0xFFFF
??CrossCallReturnLabel_145:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        MOV       A,R0
        ADD       A,#0xa
        MOV       R0,A
        JNC       ??ZDO_ParseNodeDescRsp_1
        INC       R1
// 3078     pNDRsp->nodeDesc.ServerMask = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseNodeDescRsp_1:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,R6
        MOV       R2,A
        MOV       A,R4
        ADD       A,#0xb
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        LCALL     ?Subroutine40 & 0xFFFF
// 3079     msg += 2;
// 3080     pNDRsp->nodeDesc.MaxOutTransferSize[0] = *msg++;
??CrossCallReturnLabel_364:
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        ADD       A,#0xd
        MOV       DPL,A
        CLR       A
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine38 & 0xFFFF
// 3081     pNDRsp->nodeDesc.MaxOutTransferSize[1] = *msg++;
// 3082     pNDRsp->nodeDesc.DescriptorCapability = *msg;
// 3083   }
??CrossCallReturnLabel_64:
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        LCALL     ??Subroutine239_0 & 0xFFFF
??CrossCallReturnLabel_572:
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine37 & 0xFFFF
??CrossCallReturnLabel_61:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,R4
        LCALL     ?Subroutine133 & 0xFFFF
??CrossCallReturnLabel_221:
        ADDC      A,R5
        MOV       DPH,A
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3084 }
??ZDO_ParseNodeDescRsp_0:
        LJMP      ??Subroutine203_0 & 0xFFFF
          CFI EndBlock cfiBlock1044

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine132:
          CFI Block cfiCond1045 Using cfiCommon0
          CFI Function ZDO_ProcessActiveEPReq
          CFI Conditional ??CrossCallReturnLabel_573
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1046 Using cfiCommon0
          CFI (cfiCond1046) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1046) Conditional ??CrossCallReturnLabel_574
          CFI (cfiCond1046) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1046) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1046) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1046) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1046) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1046) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1046) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1046) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1046) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1046) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1046) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1046) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1046) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1046) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1046) CFA_SP SP+-2
          CFI (cfiCond1046) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker1047 Using cfiCommon1
          CFI (cfiPicker1047) NoFunction
          CFI (cfiPicker1047) Picker
        MOV       A,?V4
          CFI EndBlock cfiCond1045
          CFI EndBlock cfiCond1046
          CFI EndBlock cfiPicker1047
        REQUIRE ??Subroutine239_0
        ; // Fall through to label ??Subroutine239_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine239_0:
          CFI Block cfiCond1048 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_569
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1049 Using cfiCommon0
          CFI (cfiCond1049) Function ZDMatchSendState
          CFI (cfiCond1049) Conditional ??CrossCallReturnLabel_570
          CFI (cfiCond1049) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1049) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1049) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1049) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1049) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1049) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1049) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1049) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1049) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1049) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1049) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1049) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1049) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1049) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1049) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1049) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1049) CFA_SP SP+-2
          CFI (cfiCond1049) CFA_XSP16 add(XSP16, 45)
          CFI Block cfiCond1050 Using cfiCommon0
          CFI (cfiCond1050) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1050) Conditional ??CrossCallReturnLabel_571
          CFI (cfiCond1050) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1050) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1050) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1050) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1050) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1050) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1050) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1050) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1050) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1050) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1050) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1050) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1050) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1050) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1050) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1050) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1050) CFA_SP SP+-2
          CFI (cfiCond1050) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1051 Using cfiCommon0
          CFI (cfiCond1051) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1051) Conditional ??CrossCallReturnLabel_572
          CFI (cfiCond1051) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1051) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1051) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1051) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1051) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1051) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1051) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1051) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1051) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1051) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1051) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1052 Using cfiCommon0
          CFI (cfiCond1052) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1052) Conditional ??CrossCallReturnLabel_573
          CFI (cfiCond1052) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1052) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1052) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1052) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1052) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1052) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1052) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1052) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1052) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1052) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1052) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1052) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1052) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1052) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1052) CFA_SP SP+-2
          CFI (cfiCond1052) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1053 Using cfiCommon0
          CFI (cfiCond1053) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1053) Conditional ??CrossCallReturnLabel_574
          CFI (cfiCond1053) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1053) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1053) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1053) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1053) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1053) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1053) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1053) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1053) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1053) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1053) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1053) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1053) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1053) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1053) CFA_SP SP+-2
          CFI (cfiCond1053) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiPicker1054 Using cfiCommon1
          CFI (cfiPicker1054) NoFunction
          CFI (cfiPicker1054) Picker
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond1048
          CFI EndBlock cfiCond1049
          CFI EndBlock cfiCond1050
          CFI EndBlock cfiCond1051
          CFI EndBlock cfiCond1052
          CFI EndBlock cfiCond1053
          CFI EndBlock cfiPicker1054

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine87:
          CFI Block cfiCond1055 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_142
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1056 Using cfiCommon0
          CFI (cfiCond1056) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1056) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond1056) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1056) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1056) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1056) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1056) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1056) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1056) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1056) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1056) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1056) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1056) CFA_SP SP+-2
          CFI (cfiCond1056) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1057 Using cfiCommon0
          CFI (cfiCond1057) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1057) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond1057) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1057) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1057) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1057) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1057) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1057) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1057) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1057) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1057) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1057) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1057) CFA_SP SP+-2
          CFI (cfiCond1057) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1058 Using cfiCommon0
          CFI (cfiCond1058) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1058) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond1058) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1058) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1058) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1058) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1058) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1058) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1058) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1058) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1058) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1058) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1058) CFA_SP SP+-2
          CFI (cfiCond1058) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1059 Using cfiCommon1
          CFI (cfiPicker1059) NoFunction
          CFI (cfiPicker1059) Picker
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        RET
          CFI EndBlock cfiCond1055
          CFI EndBlock cfiCond1056
          CFI EndBlock cfiCond1057
          CFI EndBlock cfiCond1058
          CFI EndBlock cfiPicker1059

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine43:
          CFI Block cfiCond1060 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_68
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1061 Using cfiCommon0
          CFI (cfiCond1061) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1061) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond1061) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1061) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1061) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1061) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1061) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1061) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1061) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1061) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1061) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1061) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1061) CFA_SP SP+-2
          CFI (cfiCond1061) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1062 Using cfiCommon0
          CFI (cfiCond1062) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1062) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond1062) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1062) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1062) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1062) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1062) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1062) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1062) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1062) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1062) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1062) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1062) CFA_SP SP+-2
          CFI (cfiCond1062) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1063 Using cfiCommon1
          CFI (cfiPicker1063) NoFunction
          CFI (cfiPicker1063) Picker
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_552:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1060
          CFI EndBlock cfiCond1061
          CFI EndBlock cfiCond1062
          CFI EndBlock cfiPicker1063

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine187:
          CFI Block cfiCond1064 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_549
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1065 Using cfiCommon0
          CFI (cfiCond1065) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1065) Conditional ??CrossCallReturnLabel_550
          CFI (cfiCond1065) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1065) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1065) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1065) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1065) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1065) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1065) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1065) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1065) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1065) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1065) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1065) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1065) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1065) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1065) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1065) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1065) CFA_SP SP+-2
          CFI (cfiCond1065) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1066 Using cfiCommon0
          CFI (cfiCond1066) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1066) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_543
          CFI (cfiCond1066) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1066) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1066) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1066) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1066) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1066) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1066) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1066) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1066) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1066) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1066) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1066) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1066) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1066) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1066) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1066) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1066) CFA_SP SP+-6
          CFI (cfiCond1066) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1067 Using cfiCommon0
          CFI (cfiCond1067) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1067) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_545
          CFI (cfiCond1067) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1067) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1067) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1067) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1067) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1067) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1067) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1067) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1067) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1067) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1067) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1067) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1067) CFA_SP SP+-6
          CFI (cfiCond1067) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1068 Using cfiCommon0
          CFI (cfiCond1068) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1068) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_546, ??CrossCallReturnLabel_544
          CFI (cfiCond1068) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1068) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1068) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1068) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1068) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1068) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1068) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1068) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1068) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1068) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1068) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1068) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1068) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1068) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1068) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1068) CFA_SP SP+-6
          CFI (cfiCond1068) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1069 Using cfiCommon0
          CFI (cfiCond1069) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1069) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_15
          CFI (cfiCond1069) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1069) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1069) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1069) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1069) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1069) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1069) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1069) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1069) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1069) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1069) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1069) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1069) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1069) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1069) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1069) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1069) CFA_SP SP+-6
          CFI (cfiCond1069) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1070 Using cfiCommon0
          CFI (cfiCond1070) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1070) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_547, ??CrossCallReturnLabel_16
          CFI (cfiCond1070) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1070) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1070) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1070) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1070) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1070) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1070) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1070) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1070) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1070) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1070) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1070) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1070) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1070) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1070) CFA_SP SP+-6
          CFI (cfiCond1070) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1071 Using cfiCommon0
          CFI (cfiCond1071) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1071) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_8
          CFI (cfiCond1071) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1071) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1071) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1071) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1071) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1071) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1071) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1071) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1071) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1071) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1071) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1071) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1071) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1071) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1071) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1071) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1071) CFA_SP SP+-6
          CFI (cfiCond1071) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1072 Using cfiCommon0
          CFI (cfiCond1072) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1072) Conditional ??CrossCallReturnLabel_551, ??CrossCallReturnLabel_548, ??CrossCallReturnLabel_9
          CFI (cfiCond1072) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1072) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1072) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1072) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1072) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1072) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1072) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1072) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1072) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1072) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1072) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1072) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1072) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1072) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1072) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1072) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1072) CFA_SP SP+-6
          CFI (cfiCond1072) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1073 Using cfiCommon0
          CFI (cfiCond1073) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1073) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_68
          CFI (cfiCond1073) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1073) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1073) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1073) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1073) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1073) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1073) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1073) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1073) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1073) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1073) CFA_SP SP+-4
          CFI (cfiCond1073) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1074 Using cfiCommon0
          CFI (cfiCond1074) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1074) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_69
          CFI (cfiCond1074) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1074) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1074) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1074) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1074) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1074) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1074) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1074) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1074) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1074) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1074) CFA_SP SP+-4
          CFI (cfiCond1074) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1075 Using cfiCommon0
          CFI (cfiCond1075) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1075) Conditional ??CrossCallReturnLabel_552, ??CrossCallReturnLabel_70
          CFI (cfiCond1075) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1075) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1075) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1075) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1075) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1075) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1075) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1075) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1075) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1075) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1075) CFA_SP SP+-4
          CFI (cfiCond1075) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1076 Using cfiCommon0
          CFI (cfiCond1076) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1076) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_15
          CFI (cfiCond1076) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1076) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1076) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1076) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1076) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1076) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1076) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1076) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1076) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1076) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1076) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1076) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1076) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1076) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1076) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1076) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1076) CFA_SP SP+-6
          CFI (cfiCond1076) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1077 Using cfiCommon0
          CFI (cfiCond1077) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1077) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_16
          CFI (cfiCond1077) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1077) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1077) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1077) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1077) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1077) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1077) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1077) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1077) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1077) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1077) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1077) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1077) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1077) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1077) CFA_SP SP+-6
          CFI (cfiCond1077) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1078 Using cfiCommon0
          CFI (cfiCond1078) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1078) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_8
          CFI (cfiCond1078) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1078) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1078) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1078) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1078) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1078) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1078) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1078) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1078) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1078) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1078) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1078) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1078) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1078) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1078) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1078) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1078) CFA_SP SP+-6
          CFI (cfiCond1078) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1079 Using cfiCommon0
          CFI (cfiCond1079) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1079) Conditional ??CrossCallReturnLabel_553, ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_9
          CFI (cfiCond1079) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1079) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1079) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1079) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1079) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1079) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1079) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1079) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1079) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1079) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1079) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1079) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1079) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1079) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1079) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1079) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1079) CFA_SP SP+-6
          CFI (cfiCond1079) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1080 Using cfiCommon1
          CFI (cfiPicker1080) NoFunction
          CFI (cfiPicker1080) Picker
        MOVX      @DPTR,A
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1064
          CFI EndBlock cfiCond1065
          CFI EndBlock cfiCond1066
          CFI EndBlock cfiCond1067
          CFI EndBlock cfiCond1068
          CFI EndBlock cfiCond1069
          CFI EndBlock cfiCond1070
          CFI EndBlock cfiCond1071
          CFI EndBlock cfiCond1072
          CFI EndBlock cfiCond1073
          CFI EndBlock cfiCond1074
          CFI EndBlock cfiCond1075
          CFI EndBlock cfiCond1076
          CFI EndBlock cfiCond1077
          CFI EndBlock cfiCond1078
          CFI EndBlock cfiCond1079
          CFI EndBlock cfiPicker1080

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine38:
          CFI Block cfiCond1081 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1082 Using cfiCommon0
          CFI (cfiCond1082) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1082) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond1082) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1082) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1082) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1082) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1082) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1082) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1082) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1082) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1082) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1082) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1082) CFA_SP SP+-2
          CFI (cfiCond1082) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1083 Using cfiCommon0
          CFI (cfiCond1083) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1083) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond1083) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1083) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1083) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1083) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1083) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1083) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1083) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1083) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1083) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1083) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1083) CFA_SP SP+-2
          CFI (cfiCond1083) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1084 Using cfiCommon1
          CFI (cfiPicker1084) NoFunction
          CFI (cfiPicker1084) Picker
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_273:
        RET
          CFI EndBlock cfiCond1081
          CFI EndBlock cfiCond1082
          CFI EndBlock cfiCond1083
          CFI EndBlock cfiPicker1084

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine160:
          CFI Block cfiCond1085 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1086 Using cfiCommon0
          CFI (cfiCond1086) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1086) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_63
          CFI (cfiCond1086) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1086) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1086) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1086) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1086) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1086) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1086) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1086) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1086) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1086) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1086) CFA_SP SP+-4
          CFI (cfiCond1086) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1087 Using cfiCommon0
          CFI (cfiCond1087) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1087) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_64
          CFI (cfiCond1087) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1087) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1087) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1087) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1087) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1087) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1087) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1087) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1087) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1087) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1087) CFA_SP SP+-4
          CFI (cfiCond1087) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1088 Using cfiCommon0
          CFI (cfiCond1088) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1088) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_60
          CFI (cfiCond1088) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1088) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1088) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1088) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1088) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1088) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1088) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1088) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1088) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1088) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1088) CFA_SP SP+-4
          CFI (cfiCond1088) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1089 Using cfiCommon0
          CFI (cfiCond1089) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1089) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_61
          CFI (cfiCond1089) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1089) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1089) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1089) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1089) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1089) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1089) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1089) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1089) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1089) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1089) CFA_SP SP+-4
          CFI (cfiCond1089) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1090 Using cfiCommon1
          CFI (cfiPicker1090) NoFunction
          CFI (cfiPicker1090) Picker
        LCALL     ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_316:
        RET
          CFI EndBlock cfiCond1085
          CFI EndBlock cfiCond1086
          CFI EndBlock cfiCond1087
          CFI EndBlock cfiCond1088
          CFI EndBlock cfiCond1089
          CFI EndBlock cfiPicker1090

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine190:
          CFI Block cfiCond1091 Using cfiCommon0
          CFI Function ZDO_ProcessUserDescSet
          CFI Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_62
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1092 Using cfiCommon0
          CFI (cfiCond1092) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1092) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_63
          CFI (cfiCond1092) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1092) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1092) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1092) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1092) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1092) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1092) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1092) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1092) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1092) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1092) CFA_SP SP+-6
          CFI (cfiCond1092) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1093 Using cfiCommon0
          CFI (cfiCond1093) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1093) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_64
          CFI (cfiCond1093) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1093) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1093) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1093) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1093) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1093) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1093) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1093) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1093) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1093) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1093) CFA_SP SP+-6
          CFI (cfiCond1093) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1094 Using cfiCommon0
          CFI (cfiCond1094) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1094) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_60
          CFI (cfiCond1094) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1094) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1094) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1094) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1094) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1094) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1094) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1094) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1094) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1094) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1094) CFA_SP SP+-6
          CFI (cfiCond1094) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1095 Using cfiCommon0
          CFI (cfiCond1095) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1095) Conditional ??CrossCallReturnLabel_316, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_61
          CFI (cfiCond1095) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1095) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1095) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1095) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1095) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1095) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1095) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1095) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1095) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1095) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1095) CFA_SP SP+-6
          CFI (cfiCond1095) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1096 Using cfiCommon0
          CFI (cfiCond1096) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1096) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_52
          CFI (cfiCond1096) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1096) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1096) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1096) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1096) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1096) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1096) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1096) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1096) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1096) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1096) CFA_SP SP+-6
          CFI (cfiCond1096) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1097 Using cfiCommon0
          CFI (cfiCond1097) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1097) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_53
          CFI (cfiCond1097) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1097) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1097) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1097) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1097) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1097) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1097) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1097) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1097) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1097) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1097) CFA_SP SP+-6
          CFI (cfiCond1097) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1098 Using cfiCommon0
          CFI (cfiCond1098) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1098) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_40
          CFI (cfiCond1098) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1098) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1098) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1098) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1098) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1098) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1098) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1098) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1098) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1098) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1098) CFA_SP SP+-6
          CFI (cfiCond1098) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1099 Using cfiCommon0
          CFI (cfiCond1099) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1099) Conditional ??CrossCallReturnLabel_317, ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_41
          CFI (cfiCond1099) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1099) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1099) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1099) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1099) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1099) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1099) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1099) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1099) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1099) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1099) CFA_SP SP+-6
          CFI (cfiCond1099) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1100 Using cfiCommon1
          CFI (cfiPicker1100) NoFunction
          CFI (cfiPicker1100) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1091
          CFI EndBlock cfiCond1092
          CFI EndBlock cfiCond1093
          CFI EndBlock cfiCond1094
          CFI EndBlock cfiCond1095
          CFI EndBlock cfiCond1096
          CFI EndBlock cfiCond1097
          CFI EndBlock cfiCond1098
          CFI EndBlock cfiCond1099
          CFI EndBlock cfiPicker1100

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine37:
          CFI Block cfiCond1101 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_60
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1102 Using cfiCommon0
          CFI (cfiCond1102) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1102) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond1102) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1102) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1102) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1102) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1102) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1102) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1102) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1102) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1102) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1102) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1102) CFA_SP SP+-2
          CFI (cfiCond1102) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1103 Using cfiCommon1
          CFI (cfiPicker1103) NoFunction
          CFI (cfiPicker1103) Picker
        LCALL     ?Subroutine160 & 0xFFFF
??CrossCallReturnLabel_274:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1101
          CFI EndBlock cfiCond1102
          CFI EndBlock cfiPicker1103

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine33:
          CFI Block cfiCond1104 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1105 Using cfiCommon0
          CFI (cfiCond1105) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1105) Conditional ??CrossCallReturnLabel_53
          CFI (cfiCond1105) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1105) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1105) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1105) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1105) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1105) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1105) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1105) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1105) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1105) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1105) CFA_SP SP+-2
          CFI (cfiCond1105) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1106 Using cfiCommon1
          CFI (cfiPicker1106) NoFunction
          CFI (cfiPicker1106) Picker
        LCALL     ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_259:
        RET
          CFI EndBlock cfiCond1104
          CFI EndBlock cfiCond1105
          CFI EndBlock cfiPicker1106

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine152:
          CFI Block cfiCond1107 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_52
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1108 Using cfiCommon0
          CFI (cfiCond1108) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1108) Conditional ??CrossCallReturnLabel_259, ??CrossCallReturnLabel_53
          CFI (cfiCond1108) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1108) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1108) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1108) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1108) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1108) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1108) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1108) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1108) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1108) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1108) CFA_SP SP+-4
          CFI (cfiCond1108) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1109 Using cfiCommon0
          CFI (cfiCond1109) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1109) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_40
          CFI (cfiCond1109) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1109) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1109) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1109) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1109) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1109) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1109) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1109) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1109) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1109) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1109) CFA_SP SP+-4
          CFI (cfiCond1109) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1110 Using cfiCommon0
          CFI (cfiCond1110) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1110) Conditional ??CrossCallReturnLabel_260, ??CrossCallReturnLabel_41
          CFI (cfiCond1110) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1110) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1110) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1110) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1110) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1110) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1110) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1110) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1110) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1110) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1110) CFA_SP SP+-4
          CFI (cfiCond1110) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1111 Using cfiCommon1
          CFI (cfiPicker1111) NoFunction
          CFI (cfiPicker1111) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine190 & 0xFFFF
??CrossCallReturnLabel_317:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1107
          CFI EndBlock cfiCond1108
          CFI EndBlock cfiCond1109
          CFI EndBlock cfiCond1110
          CFI EndBlock cfiPicker1111

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine25:
          CFI Block cfiCond1112 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_40
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1113 Using cfiCommon0
          CFI (cfiCond1113) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1113) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond1113) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1113) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1113) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1113) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1113) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1113) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1113) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1113) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1113) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1113) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1113) CFA_SP SP+-2
          CFI (cfiCond1113) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1114 Using cfiCommon1
          CFI (cfiPicker1114) NoFunction
          CFI (cfiPicker1114) Picker
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine152 & 0xFFFF
??CrossCallReturnLabel_260:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1112
          CFI EndBlock cfiCond1113
          CFI EndBlock cfiPicker1114
// 3085 
// 3086 /*********************************************************************
// 3087  * @fn          ZDO_ParsePowerDescRsp
// 3088  *
// 3089  * @brief       This function parses the Power_Desc_rsp message.
// 3090  *
// 3091  * @param       inMsg  - incoming message
// 3092  * @param       pNPRsp - place to parse the message into
// 3093  *
// 3094  * @return      none
// 3095  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3096 void ZDO_ParsePowerDescRsp( zdoIncomingMsg_t *inMsg, ZDO_PowerRsp_t *pNPRsp )
ZDO_ParsePowerDescRsp:
          CFI Block cfiBlock1115 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
        CODE
// 3097 {
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        MOV       A,#-0xc
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 12)
        ; Saved register size: 12
        ; Auto size: 0
// 3098   uint8 *msg;
// 3099 
// 3100   msg = inMsg->asdu;
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_636:
        LCALL     ?Subroutine98 & 0xFFFF
// 3101   pNPRsp->status = *msg++;
??CrossCallReturnLabel_158:
        LCALL     ?Subroutine42 & 0xFFFF
??CrossCallReturnLabel_545:
        MOV       R2,DPL
        MOV       R3,DPH
// 3102   pNPRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R6
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine24 & 0xFFFF
// 3103 
// 3104   if ( pNPRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_39:
        MOVX      A,@DPTR
        JZ        $+5
        LJMP      ??ZDO_ParsePowerDescRsp_0 & 0xFFFF
// 3105   {
// 3106     msg += 2;
// 3107     pNPRsp->pwrDesc.AvailablePowerSources = *msg >> 4;
        MOV       A,R2
        ADD       A,#0x2
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        MOV       A,R4
        ADD       A,#0x3
        CLR       A
        ADDC      A,R5
        INC       R4
        INC       R4
        INC       R4
        MOV       R5,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       ?V2,A
        INC       DPTR
        MOVX      A,@DPTR
        LCALL     ?Subroutine109 & 0xFFFF
??CrossCallReturnLabel_172:
        MOV       A,#0x4
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,?V2
        ORL       A,?V0
        MOV       R0,A
        MOV       R1,?V3
        MOV       DPL,R4
        MOV       DPH,R5
        LCALL     ??Subroutine216_0 & 0xFFFF
// 3108     pNPRsp->pwrDesc.PowerMode = *msg++ & 0x0F;
??CrossCallReturnLabel_402:
        MOV       A,R0
        ANL       A,#0xf0
        MOV       R0,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        ANL       A,#0xf
        MOV       R6,A
        MOV       A,R0
        ORL       A,R6
        MOV       ?V0,A
        MOV       A,R1
        MOV       ?V1,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       A,?V0
        LCALL     ??Subroutine216_0 & 0xFFFF
// 3109     pNPRsp->pwrDesc.CurrentPowerSourceLevel = *msg >> 4;
??CrossCallReturnLabel_403:
        MOV       A,R2
        ADD       A,#0x3
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       A,R0
        MOV       R6,A
        MOV       A,R1
        MOV       R7,A
        MOV       A,?V0
        MOV       ?V2,A
        MOV       A,?V1
        ANL       A,#0xf
        LCALL     ?Subroutine109 & 0xFFFF
// 3110     pNPRsp->pwrDesc.CurrentPowerSource = *msg++ & 0x0F;
// 3111   }
??CrossCallReturnLabel_173:
        MOV       A,#0xc
        MOV       R0,#?V0
        LCALL     ?S_SHL
        MOV       A,?V3
        ORL       A,?V1
        MOV       R1,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOV       A,?V2
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ??Subroutine243_0 & 0xFFFF
??CrossCallReturnLabel_604:
        ANL       A,#0xf
        MOV       R0,A
        MOV       A,R2
        ADD       A,#0x4
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      A,@DPTR
        ANL       A,#0xf0
        MOVX      @DPTR,A
        MOV       A,R0
        MOV       R1,A
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      A,@DPTR
        ORL       A,R1
        MOVX      @DPTR,A
// 3112 }
??ZDO_ParsePowerDescRsp_0:
        LJMP      ??Subroutine197_0 & 0xFFFF
          CFI EndBlock cfiBlock1115

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine109:
          CFI Block cfiCond1116 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_172
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1117 Using cfiCommon0
          CFI (cfiCond1117) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1117) Conditional ??CrossCallReturnLabel_173
          CFI (cfiCond1117) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1117) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1117) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1117) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1117) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1117) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1117) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1117) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1117) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1117) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1117) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1117) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1117) CFA_SP SP+-2
          CFI (cfiCond1117) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1118 Using cfiCommon1
          CFI (cfiPicker1118) NoFunction
          CFI (cfiPicker1118) Picker
        MOV       ?V3,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        SWAP      A
        ANL       A,#0xf
        MOV       ?V0,A
        MOV       ?V1,#0x0
        RET
          CFI EndBlock cfiCond1116
          CFI EndBlock cfiCond1117
          CFI EndBlock cfiPicker1118

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine98:
          CFI Block cfiCond1119 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtDirectJoinReq
          CFI Conditional ??CrossCallReturnLabel_159
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1120 Using cfiCommon0
          CFI (cfiCond1120) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1120) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond1120) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1120) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1120) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1120) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1120) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1120) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1120) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1120) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1120) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1120) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1120) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1120) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1120) CFA_SP SP+-2
          CFI (cfiCond1120) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiPicker1121 Using cfiCommon1
          CFI (cfiPicker1121) NoFunction
          CFI (cfiPicker1121) Picker
        LCALL     ?Subroutine175 & 0xFFFF
??CrossCallReturnLabel_502:
        ; Setup parameters for call to function NLME_DirectJoinRequest
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1119
          CFI EndBlock cfiCond1120
          CFI EndBlock cfiPicker1121
// 3113 
// 3114 /*********************************************************************
// 3115  * @fn          ZDO_ParseSimpleDescRsp
// 3116  *
// 3117  * @brief       This function parse the Simple_Desc_rsp message.
// 3118  *
// 3119  *   NOTE: The pAppInClusterList and pAppOutClusterList fields
// 3120  *         in the SimpleDescriptionFormat_t structure are allocated
// 3121  *         and the calling function needs to free [osal_msg_free()]
// 3122  *         these buffers.
// 3123  *
// 3124  * @param       inMsg  - incoming message
// 3125  * @param       pSimpleDescRsp - place to parse the message into
// 3126  *
// 3127  * @return      none
// 3128  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3129 void ZDO_ParseSimpleDescRsp( zdoIncomingMsg_t *inMsg, ZDO_SimpleDescRsp_t *pSimpleDescRsp )
ZDO_ParseSimpleDescRsp:
          CFI Block cfiBlock1122 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescRsp
        CODE
// 3130 {
        FUNCALL ZDO_ParseSimpleDescRsp, ZDO_ParseSimpleDescBuf
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 3131   uint8 *msg;
// 3132 
// 3133   msg = inMsg->asdu;
        LCALL     ?Subroutine9 & 0xFFFF
// 3134   pSimpleDescRsp->status = *msg++;
// 3135   pSimpleDescRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
// 3136   msg += sizeof ( uint16 );
// 3137   msg++; // Skip past the length field.
// 3138 
// 3139   if ( pSimpleDescRsp->status == ZDP_SUCCESS )
??CrossCallReturnLabel_3:
        JNZ       ??ZDO_ParseSimpleDescRsp_0
// 3140   {
// 3141     ZDO_ParseSimpleDescBuf( msg, &(pSimpleDescRsp->simpleDesc) );
        ; Setup parameters for call to function ZDO_ParseSimpleDescBuf
        MOV       A,R4
        ADD       A,#0x3
        MOV       R4,A
        JNC       ??ZDO_ParseSimpleDescRsp_1
        INC       R5
??ZDO_ParseSimpleDescRsp_1:
        MOV       A,R0
        ADD       A,#0x3
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     `??ZDO_ParseSimpleDescBuf::?relay`; Banked call to: ZDO_ParseSimpleDescBuf
// 3142   }
// 3143 }
??ZDO_ParseSimpleDescRsp_0:
        LJMP      ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock1122

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine9:
          CFI Block cfiCond1123 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1124 Using cfiCommon0
          CFI (cfiCond1124) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1124) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond1124) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1124) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1124) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1124) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1124) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1124) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1124) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1124) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1124) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1124) CFA_SP SP+-2
          CFI (cfiCond1124) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1125 Using cfiCommon1
          CFI (cfiPicker1125) NoFunction
          CFI (cfiPicker1125) Picker
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_645:
        ADDC      A,R3
        LCALL     ?Subroutine171 & 0xFFFF
??CrossCallReturnLabel_292:
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        MOV       R0,DPL
        MOV       R1,DPH
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R3,A
        MOV       A,R6
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R3
        MOVX      @DPTR,A
        MOV       DPL,R4
        MOV       DPH,R5
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1123
          CFI EndBlock cfiCond1124
          CFI EndBlock cfiPicker1125

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine171:
          CFI Block cfiCond1126 Using cfiCommon0
          CFI Function ZDO_ProcessSimpleDescReq
          CFI Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_131
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1127 Using cfiCommon0
          CFI (cfiCond1127) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1127) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_130
          CFI (cfiCond1127) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1127) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1127) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1127) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1127) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1127) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1127) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1127) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1127) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1127) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1127) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1127) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1127) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1127) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1127) CFA_SP SP+-4
          CFI (cfiCond1127) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1128 Using cfiCommon0
          CFI (cfiCond1128) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1128) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_2
          CFI (cfiCond1128) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1128) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1128) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1128) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1128) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1128) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1128) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1128) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1128) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1128) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1128) CFA_SP SP+-4
          CFI (cfiCond1128) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1129 Using cfiCommon0
          CFI (cfiCond1129) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1129) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_3
          CFI (cfiCond1129) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1129) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1129) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1129) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1129) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1129) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1129) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1129) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1129) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1129) CFA_SP SP+-4
          CFI (cfiCond1129) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1130 Using cfiCommon1
          CFI (cfiPicker1130) NoFunction
          CFI (cfiPicker1130) Picker
        LCALL     ?Subroutine192 & 0xFFFF
??CrossCallReturnLabel_320:
        RET
          CFI EndBlock cfiCond1126
          CFI EndBlock cfiCond1127
          CFI EndBlock cfiCond1128
          CFI EndBlock cfiCond1129
          CFI EndBlock cfiPicker1130

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine192:
          CFI Block cfiCond1131 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-6
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1132 Using cfiCommon0
          CFI (cfiCond1132) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1132) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_281, ??CrossCallReturnLabel_88
          CFI (cfiCond1132) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1132) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1132) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1132) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1132) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1132) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1132) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1132) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1132) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1132) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1132) CFA_SP SP+-6
          CFI (cfiCond1132) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1133 Using cfiCommon0
          CFI (cfiCond1133) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1133) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_97
          CFI (cfiCond1133) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1133) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1133) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1133) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1133) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1133) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1133) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1133) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1133) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1133) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1133) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1133) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1133) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1133) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1133) CFA_SP SP+-6
          CFI (cfiCond1133) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1134 Using cfiCommon0
          CFI (cfiCond1134) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1134) Conditional ??CrossCallReturnLabel_321, ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_98
          CFI (cfiCond1134) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1134) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1134) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1134) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1134) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1134) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1134) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1134) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1134) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1134) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1134) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1134) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1134) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1134) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1134) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1134) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1134) CFA_SP SP+-6
          CFI (cfiCond1134) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1135 Using cfiCommon0
          CFI (cfiCond1135) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1135) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_131
          CFI (cfiCond1135) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1135) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1135) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1135) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1135) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1135) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1135) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1135) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1135) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1135) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1135) CFA_SP SP+-6
          CFI (cfiCond1135) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1136 Using cfiCommon0
          CFI (cfiCond1136) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1136) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_130
          CFI (cfiCond1136) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1136) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1136) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1136) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1136) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1136) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1136) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1136) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1136) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1136) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1136) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1136) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1136) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1136) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1136) CFA_SP SP+-6
          CFI (cfiCond1136) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1137 Using cfiCommon0
          CFI (cfiCond1137) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1137) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_2
          CFI (cfiCond1137) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1137) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1137) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1137) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1137) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1137) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1137) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1137) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1137) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1137) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1137) CFA_SP SP+-6
          CFI (cfiCond1137) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1138 Using cfiCommon0
          CFI (cfiCond1138) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1138) Conditional ??CrossCallReturnLabel_320, ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_3
          CFI (cfiCond1138) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1138) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1138) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1138) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1138) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1138) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1138) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1138) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1138) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1138) CFA_SP SP+-6
          CFI (cfiCond1138) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1139 Using cfiCommon1
          CFI (cfiPicker1139) NoFunction
          CFI (cfiPicker1139) Picker
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1131
          CFI EndBlock cfiCond1132
          CFI EndBlock cfiCond1133
          CFI EndBlock cfiCond1134
          CFI EndBlock cfiCond1135
          CFI EndBlock cfiCond1136
          CFI EndBlock cfiCond1137
          CFI EndBlock cfiCond1138
          CFI EndBlock cfiPicker1139
// 3144 
// 3145 /*********************************************************************
// 3146  * @fn          ZDO_ParseEPListRsp
// 3147  *
// 3148  * @brief       This parse the Active_EP_rsp or Match_Desc_rsp message.
// 3149  *
// 3150  * @param       inMsg  - incoming message
// 3151  *
// 3152  * @return      none
// 3153  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3154 ZDO_ActiveEndpointRsp_t *ZDO_ParseEPListRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseEPListRsp:
          CFI Block cfiBlock1140 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
        CODE
// 3155 {
        FUNCALL ZDO_ParseEPListRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseEPListRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3156   ZDO_ActiveEndpointRsp_t *pRsp;
// 3157   uint8 *msg;
// 3158   uint8 Status;
// 3159   uint8 cnt;
// 3160 
// 3161   msg = inMsg->asdu;
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_637:
        LCALL     ?Subroutine93 & 0xFFFF
// 3162   Status = *msg++;
??CrossCallReturnLabel_624:
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        MOV       ?V7,A
        INC       DPTR
        MOV       ?V0,DPL
        MOV       ?V1,DPH
// 3163   cnt = msg[2];
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V6,A
// 3164 
// 3165   pRsp = (ZDO_ActiveEndpointRsp_t *)osal_mem_alloc( sizeof(  ZDO_ActiveEndpointRsp_t ) + cnt );
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_308:
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
// 3166   if ( pRsp )
        MOV       A,R2
        ORL       A,?V5
        JZ        ??ZDO_ParseEPListRsp_0
// 3167   {
// 3168     pRsp->status = Status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V7
        LCALL     ?Subroutine153 & 0xFFFF
// 3169     pRsp->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_261:
        MOVX      A,@DPTR
        LCALL     ?Subroutine105 & 0xFFFF
??CrossCallReturnLabel_336:
        MOV       DPL,?V4
        MOV       DPH,R3
        INC       DPTR
        LCALL     ??Subroutine216_0 & 0xFFFF
// 3170     msg += sizeof( uint16 );
// 3171     pRsp->cnt = cnt;
??CrossCallReturnLabel_404:
        MOV       DPL,?V4
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,R6
        LCALL     ?Subroutine47 & 0xFFFF
// 3172     msg++; // pass cnt
// 3173     osal_memcpy( pRsp->epList, msg, cnt );
// 3174   }
??CrossCallReturnLabel_80:
        INC       DPTR
        MOV       R1,DPL
        MOV       R2,DPH
        MOV       ?V0,R1
        MOV       ?V1,R2
        MOV       ?V2,R0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R6
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V4
        LCALL     ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_309:
        ADDC      A,?V5
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 3175 
// 3176   return ( pRsp );
??ZDO_ParseEPListRsp_0:
        MOV       R2,?V4
        MOV       R3,?V5
        LJMP      ??Subroutine201_0 & 0xFFFF
// 3177 }
          CFI EndBlock cfiBlock1140

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine47:
          CFI Block cfiCond1141 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_79
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1142 Using cfiCommon0
          CFI (cfiCond1142) Function ZDO_ParseEPListRsp
          CFI (cfiCond1142) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond1142) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1142) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1142) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1142) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1142) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1142) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1142) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1142) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1142) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1142) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1142) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1142) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1142) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1142) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1142) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1142) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1142) CFA_SP SP+-2
          CFI (cfiCond1142) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1143 Using cfiCommon1
          CFI (cfiPicker1143) NoFunction
          CFI (cfiPicker1143) Picker
        LCALL     ?Subroutine153 & 0xFFFF
??CrossCallReturnLabel_262:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1141
          CFI EndBlock cfiCond1142
          CFI EndBlock cfiPicker1143

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine153:
          CFI Block cfiCond1144 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_261
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1145 Using cfiCommon0
          CFI (cfiCond1145) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1145) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_79
          CFI (cfiCond1145) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1145) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1145) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1145) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1145) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1145) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1145) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1145) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1145) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1145) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1145) CFA_SP SP+-4
          CFI (cfiCond1145) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1146 Using cfiCommon0
          CFI (cfiCond1146) Function ZDO_ParseEPListRsp
          CFI (cfiCond1146) Conditional ??CrossCallReturnLabel_262, ??CrossCallReturnLabel_80
          CFI (cfiCond1146) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1146) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1146) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1146) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1146) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1146) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1146) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1146) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1146) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1146) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1146) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1146) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1146) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1146) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1146) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1146) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1146) CFA_SP SP+-4
          CFI (cfiCond1146) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1147 Using cfiCommon0
          CFI (cfiCond1147) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1147) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond1147) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1147) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1147) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1147) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1147) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1147) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1147) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1147) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1147) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1147) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1147) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1147) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1147) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1147) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1147) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1147) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1147) CFA_SP SP+-2
          CFI (cfiCond1147) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1148 Using cfiCommon1
          CFI (cfiPicker1148) NoFunction
          CFI (cfiPicker1148) Picker
        MOVX      @DPTR,A
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?V0
        MOV       DPH,?V1
        RET
          CFI EndBlock cfiCond1144
          CFI EndBlock cfiCond1145
          CFI EndBlock cfiCond1146
          CFI EndBlock cfiCond1147
          CFI EndBlock cfiPicker1148
// 3178 
// 3179 /*********************************************************************
// 3180  * @fn          ZDO_ParseServerDiscRsp
// 3181  *
// 3182  * @brief       Parse the Server_Discovery_rsp message.
// 3183  *
// 3184  * @param       inMsg - incoming message.
// 3185  * @param       pRsp - place to put the parsed information.
// 3186  *
// 3187  * @return      none
// 3188  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3189 void ZDO_ParseServerDiscRsp( zdoIncomingMsg_t *inMsg, ZDO_ServerDiscRsp_t *pRsp )
ZDO_ParseServerDiscRsp:
          CFI Block cfiBlock1149 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
        CODE
// 3190 {
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
// 3191   pRsp->status = inMsg->asdu[0];
        MOV       A,R2
        ADD       A,#0x13
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_176:
        LCALL     ??Subroutine247_0 & 0xFFFF
??CrossCallReturnLabel_616:
        LCALL     ?Subroutine45 & 0xFFFF
// 3192   pRsp->serverMask = BUILD_UINT16( inMsg->asdu[1], inMsg->asdu[2] );
??CrossCallReturnLabel_76:
        LCALL     ??Subroutine199_0 & 0xFFFF
??CrossCallReturnLabel_324:
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        LCALL     ??Subroutine249_0 & 0xFFFF
??CrossCallReturnLabel_625:
        INC       DPTR
        LCALL     ??Subroutine216_0 & 0xFFFF
// 3193 }
??CrossCallReturnLabel_405:
        LJMP      ?Subroutine3 & 0xFFFF
          CFI EndBlock cfiBlock1149

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine45:
          CFI Block cfiCond1150 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLqiReq
          CFI Conditional ??CrossCallReturnLabel_73
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1151 Using cfiCommon0
          CFI (cfiCond1151) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1151) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond1151) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1151) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1151) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1151) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1151) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1151) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1151) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1151) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1151) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1151) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1151) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1151) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1151) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1151) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1151) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1151) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1151) CFA_SP SP+-2
          CFI (cfiCond1151) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1152 Using cfiCommon0
          CFI (cfiCond1152) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1152) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond1152) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1152) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1152) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1152) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1152) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1152) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1152) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1152) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1152) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1152) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1152) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1152) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1152) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1152) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1152) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1152) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1152) CFA_SP SP+-2
          CFI (cfiCond1152) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1153 Using cfiCommon0
          CFI (cfiCond1153) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1153) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond1153) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1153) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1153) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1153) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1153) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1153) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1153) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1153) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1153) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1153) CFA_SP SP+-2
          CFI (cfiCond1153) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiPicker1154 Using cfiCommon1
          CFI (cfiPicker1154) NoFunction
          CFI (cfiPicker1154) Picker
        LCALL     ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_267:
        RET
          CFI EndBlock cfiCond1150
          CFI EndBlock cfiCond1151
          CFI EndBlock cfiCond1152
          CFI EndBlock cfiCond1153
          CFI EndBlock cfiPicker1154

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine156:
          CFI Block cfiCond1155 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_46
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1156 Using cfiCommon0
          CFI (cfiCond1156) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1156) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_47
          CFI (cfiCond1156) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1156) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1156) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1156) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1156) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1156) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1156) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1156) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1156) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1156) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1156) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1156) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1156) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1156) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1156) CFA_SP SP+-4
          CFI (cfiCond1156) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1157 Using cfiCommon0
          CFI (cfiCond1157) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1157) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_73
          CFI (cfiCond1157) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1157) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1157) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1157) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1157) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1157) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1157) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1157) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1157) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1157) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1157) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1157) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1157) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1157) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1157) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1157) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1157) CFA_SP SP+-4
          CFI (cfiCond1157) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1158 Using cfiCommon0
          CFI (cfiCond1158) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1158) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_74
          CFI (cfiCond1158) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1158) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1158) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1158) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1158) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1158) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1158) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1158) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1158) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1158) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1158) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1158) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1158) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1158) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1158) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1158) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1158) CFA_SP SP+-4
          CFI (cfiCond1158) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1159 Using cfiCommon0
          CFI (cfiCond1159) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1159) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_75
          CFI (cfiCond1159) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1159) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1159) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1159) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1159) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1159) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1159) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1159) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1159) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1159) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1159) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1159) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1159) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1159) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1159) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1159) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1159) CFA_SP SP+-4
          CFI (cfiCond1159) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1160 Using cfiCommon0
          CFI (cfiCond1160) Function ZDO_ParseServerDiscRsp
          CFI (cfiCond1160) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_76
          CFI (cfiCond1160) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1160) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1160) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1160) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1160) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1160) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1160) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1160) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1160) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1160) CFA_SP SP+-4
          CFI (cfiCond1160) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1161 Using cfiCommon0
          CFI (cfiCond1161) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1161) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_71
          CFI (cfiCond1161) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1161) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1161) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1161) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1161) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1161) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1161) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1161) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1161) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1161) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1161) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1161) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1161) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1161) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1161) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1161) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1161) CFA_SP SP+-4
          CFI (cfiCond1161) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1162 Using cfiCommon0
          CFI (cfiCond1162) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1162) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_72
          CFI (cfiCond1162) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1162) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1162) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1162) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1162) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1162) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1162) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1162) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1162) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1162) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1162) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1162) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1162) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1162) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1162) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1162) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1162) CFA_SP SP+-4
          CFI (cfiCond1162) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1163 Using cfiCommon1
          CFI (cfiPicker1163) NoFunction
          CFI (cfiPicker1163) Picker
        MOVX      @DPTR,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1155
          CFI EndBlock cfiCond1156
          CFI EndBlock cfiCond1157
          CFI EndBlock cfiCond1158
          CFI EndBlock cfiCond1159
          CFI EndBlock cfiCond1160
          CFI EndBlock cfiCond1161
          CFI EndBlock cfiCond1162
          CFI EndBlock cfiPicker1163
// 3194 
// 3195 /*********************************************************************
// 3196  * @fn          ZDO_ParseMgmtLqiRsp
// 3197  *
// 3198  * @brief       This function parses the incoming Management
// 3199  *              LQI response
// 3200  *
// 3201  * @param       inMsg - incoming message
// 3202  *
// 3203  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3204  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3205  *          by the calling function [osal_mem_free()].
// 3206  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3207 ZDO_MgmtLqiRsp_t *ZDO_ParseMgmtLqiRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtLqiRsp:
          CFI Block cfiBlock1164 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
        CODE
// 3208 {
        FUNCALL ZDO_ParseMgmtLqiRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtLqiRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3209   ZDO_MgmtLqiRsp_t *pRsp;
// 3210   uint8 status;
// 3211   uint8 startIndex = 0;
        MOV       ?V5,#0x0
// 3212   uint8 neighborLqiCount = 0;
        MOV       ?V7,#0x0
// 3213   uint8 neighborLqiEntries = 0;
        MOV       ?V4,#0x0
// 3214   uint8 *msg;
// 3215 
// 3216   msg = inMsg->asdu;
        LCALL     ?Subroutine64 & 0xFFFF
// 3217 
// 3218   status = *msg++;
// 3219   if ( status == ZSuccess )
??CrossCallReturnLabel_110:
        JNZ       ??ZDO_ParseMgmtLqiRsp_0
// 3220   {
// 3221     neighborLqiEntries = *msg++;
        LCALL     ?Subroutine74 & 0xFFFF
// 3222     startIndex = *msg++;
// 3223     neighborLqiCount = *msg++;
// 3224   }
??CrossCallReturnLabel_124:
        MOV       ?V7,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_0
        INC       R7
// 3225 
// 3226   // Allocate a buffer big enough to handle the list.
// 3227   pRsp = (ZDO_MgmtLqiRsp_t *)osal_mem_alloc(
// 3228             sizeof( ZDO_MgmtLqiRsp_t ) + (neighborLqiCount * sizeof( ZDP_MgmtLqiItem_t )) );
??ZDO_ParseMgmtLqiRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V7
        MOV       B,#0x1a
        LCALL     ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_250:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 3229   if ( pRsp )
        MOV       A,R2
        ORL       A,?V3
        JNZ       $+5
        LJMP      ??ZDO_ParseMgmtLqiRsp_1 & 0xFFFF
// 3230   {
// 3231     uint8 x;
// 3232     ZDP_MgmtLqiItem_t *pList = pRsp->list;
        LCALL     ?Subroutine142 & 0xFFFF
// 3233     pRsp->status = status;
??CrossCallReturnLabel_243:
        MOV       A,?V6
        LCALL     ?Subroutine12 & 0xFFFF
// 3234     pRsp->neighborLqiEntries = neighborLqiEntries;
// 3235     pRsp->startIndex = startIndex;
// 3236     pRsp->neighborLqiCount = neighborLqiCount;
??CrossCallReturnLabel_8:
        MOV       A,?V7
        MOVX      @DPTR,A
// 3237 
// 3238     for ( x = 0; x < neighborLqiCount; x++ )
        MOV       ?V4,#0x0
        LJMP      ??ZDO_ParseMgmtLqiRsp_2 & 0xFFFF
// 3239     {
// 3240       uint8 tmp;
// 3241 
// 3242       pList->panID = 0; // This isn't in the record, why is it in the structure?
??ZDO_ParseMgmtLqiRsp_3:
        MOV       DPL,?V0
        MOV       DPH,?V1
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 3243       osal_cpyExtAddr(pList->extPanID, msg);   //Copy extended PAN ID
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3244       msg += Z_EXTADDR_LEN;
        MOV       A,R6
        ADD       A,#0x8
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_4
        INC       R7
// 3245 
// 3246       osal_cpyExtAddr(pList->extAddr, msg);   //Copy extended address
??ZDO_ParseMgmtLqiRsp_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3247       msg += Z_EXTADDR_LEN;
        MOV       A,R6
        ADD       A,#0x8
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_5
        INC       R7
// 3248 
// 3249       pList->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtLqiRsp_5:
        LCALL     ?Subroutine101 & 0xFFFF
??CrossCallReturnLabel_161:
        ADD       A,#0x12
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_582:
        MOV       A,R0
        LCALL     ?Subroutine30 & 0xFFFF
// 3250       msg += 2;
// 3251 
// 3252       tmp = *msg++;
??CrossCallReturnLabel_48:
        MOV       R0,A
// 3253       pList->devType = tmp & 0x03;
        MOV       A,#0x3
        ANL       A,R0
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x14
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_583:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3254       pList->rxOnIdle = (tmp >> 2) & 0x03;
        MOV       A,R0
        RRC       A
        RRC       A
        ANL       A,#0x3f
        ANL       A,#0x3
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x15
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_584:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3255       pList->relation = (tmp >> 4) & 0x07;
        MOV       A,R0
        SWAP      A
        ANL       A,#0xf
        ANL       A,#0x7
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x16
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_585:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine20 & 0xFFFF
// 3256 
// 3257       pList->permit = (*msg++) & 0x03;
??CrossCallReturnLabel_28:
        ANL       A,#0x3
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x17
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_586:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine159 & 0xFFFF
// 3258 
// 3259       pList->depth = *msg++;
??CrossCallReturnLabel_271:
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x18
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_587:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine34 & 0xFFFF
// 3260 
// 3261       pList->lqi = *msg++;
??CrossCallReturnLabel_55:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x19
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_588:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x6
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtLqiRsp_6
        INC       R7
// 3262       pList++;
??ZDO_ParseMgmtLqiRsp_6:
        MOV       A,?V0
        ADD       A,#0x1a
        MOV       ?V0,A
        JNC       ??ZDO_ParseMgmtLqiRsp_7
        INC       ?V1
// 3263     }
??ZDO_ParseMgmtLqiRsp_7:
        INC       ?V4
??ZDO_ParseMgmtLqiRsp_2:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V7
        JNC       $+5
        LJMP      ??ZDO_ParseMgmtLqiRsp_3 & 0xFFFF
// 3264   }
// 3265 
// 3266   return ( pRsp );
??ZDO_ParseMgmtLqiRsp_1:
          CFI EndBlock cfiBlock1164
        REQUIRE ?Subroutine7
        ; // Fall through to label ?Subroutine7
// 3267 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine7:
          CFI Block cfiBlock1165 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        MOV       R2,?V2
        MOV       R3,?V3
        LJMP      ??Subroutine201_0 & 0xFFFF
          CFI EndBlock cfiBlock1165

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine101:
          CFI Block cfiCond1166 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_160
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1167 Using cfiCommon0
          CFI (cfiCond1167) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1167) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond1167) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1167) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1167) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1167) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1167) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1167) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1167) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1167) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1167) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1167) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1167) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1167) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1167) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1167) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1167) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1167) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1167) CFA_SP SP+-2
          CFI (cfiCond1167) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1168 Using cfiCommon1
          CFI (cfiPicker1168) NoFunction
          CFI (cfiPicker1168) Picker
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_578:
        MOV       R0,A
        MOV       A,?V0
        RET
          CFI EndBlock cfiCond1166
          CFI EndBlock cfiCond1167
          CFI EndBlock cfiPicker1168

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine169:
          CFI Block cfiCond1169 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_576
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1170 Using cfiCommon0
          CFI (cfiCond1170) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1170) Conditional ??CrossCallReturnLabel_578, ??CrossCallReturnLabel_160
          CFI (cfiCond1170) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1170) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1170) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1170) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1170) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1170) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1170) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1170) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1170) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1170) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1170) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1170) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1170) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1170) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1170) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1170) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1170) CFA_SP SP+-4
          CFI (cfiCond1170) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1171 Using cfiCommon0
          CFI (cfiCond1171) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1171) Conditional ??CrossCallReturnLabel_578, ??CrossCallReturnLabel_161
          CFI (cfiCond1171) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1171) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1171) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1171) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1171) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1171) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1171) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1171) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1171) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1171) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1171) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1171) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1171) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1171) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1171) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1171) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1171) CFA_SP SP+-4
          CFI (cfiCond1171) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1172 Using cfiCommon0
          CFI (cfiCond1172) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1172) Conditional ??CrossCallReturnLabel_577, ??CrossCallReturnLabel_128
          CFI (cfiCond1172) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1172) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1172) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1172) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1172) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1172) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1172) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1172) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1172) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1172) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1172) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1172) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1172) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1172) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1172) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1172) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1172) CFA_SP SP+-4
          CFI (cfiCond1172) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1173 Using cfiCommon0
          CFI (cfiCond1173) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1173) Conditional ??CrossCallReturnLabel_577, ??CrossCallReturnLabel_129
          CFI (cfiCond1173) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1173) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1173) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1173) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1173) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1173) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1173) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1173) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1173) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1173) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1173) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1173) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1173) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1173) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1173) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1173) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1173) CFA_SP SP+-4
          CFI (cfiCond1173) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1174 Using cfiCommon1
          CFI (cfiPicker1174) NoFunction
          CFI (cfiPicker1174) Picker
        MOV       DPL,R6
        MOV       DPH,R7
          CFI EndBlock cfiCond1169
          CFI EndBlock cfiCond1170
          CFI EndBlock cfiCond1171
          CFI EndBlock cfiCond1172
          CFI EndBlock cfiCond1173
          CFI EndBlock cfiPicker1174
        REQUIRE ??Subroutine240_0
        ; // Fall through to label ??Subroutine240_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine240_0:
          CFI Block cfiCond1175 Using cfiCommon0
          CFI Function ZDO_ProcessServerDiscReq
          CFI Conditional ??CrossCallReturnLabel_575
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1176 Using cfiCommon0
          CFI (cfiCond1176) Function ZDO_ParseAddrRsp
          CFI (cfiCond1176) Conditional ??CrossCallReturnLabel_576
          CFI (cfiCond1176) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1176) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1176) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1176) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1176) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1176) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1176) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1176) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1176) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1176) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1176) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1176) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1176) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1176) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1176) CFA_SP SP+-2
          CFI (cfiCond1176) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1177 Using cfiCommon0
          CFI (cfiCond1177) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1177) Conditional ??CrossCallReturnLabel_578, ??CrossCallReturnLabel_160
          CFI (cfiCond1177) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1177) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1177) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1177) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1177) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1177) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1177) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1177) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1177) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1177) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1177) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1177) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1177) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1177) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1177) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1177) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1177) CFA_SP SP+-4
          CFI (cfiCond1177) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1178 Using cfiCommon0
          CFI (cfiCond1178) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1178) Conditional ??CrossCallReturnLabel_578, ??CrossCallReturnLabel_161
          CFI (cfiCond1178) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1178) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1178) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1178) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1178) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1178) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1178) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1178) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1178) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1178) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1178) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1178) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1178) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1178) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1178) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1178) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1178) CFA_SP SP+-4
          CFI (cfiCond1178) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1179 Using cfiCommon0
          CFI (cfiCond1179) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1179) Conditional ??CrossCallReturnLabel_577, ??CrossCallReturnLabel_128
          CFI (cfiCond1179) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1179) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1179) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1179) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1179) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1179) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1179) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1179) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1179) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1179) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1179) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1179) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1179) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1179) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1179) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1179) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1179) CFA_SP SP+-4
          CFI (cfiCond1179) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1180 Using cfiCommon0
          CFI (cfiCond1180) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1180) Conditional ??CrossCallReturnLabel_577, ??CrossCallReturnLabel_129
          CFI (cfiCond1180) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1180) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1180) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1180) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1180) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1180) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1180) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1180) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1180) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1180) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1180) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1180) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1180) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1180) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1180) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1180) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1180) CFA_SP SP+-4
          CFI (cfiCond1180) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1181 Using cfiCommon1
          CFI (cfiPicker1181) NoFunction
          CFI (cfiPicker1181) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        RET
          CFI EndBlock cfiCond1175
          CFI EndBlock cfiCond1176
          CFI EndBlock cfiCond1177
          CFI EndBlock cfiCond1178
          CFI EndBlock cfiCond1179
          CFI EndBlock cfiCond1180
          CFI EndBlock cfiPicker1181

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine34:
          CFI Block cfiCond1182 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1183 Using cfiCommon0
          CFI (cfiCond1183) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1183) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond1183) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1183) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1183) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1183) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1183) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1183) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1183) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1183) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1183) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1183) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1183) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1183) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1183) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1183) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1183) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1183) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1183) CFA_SP SP+-2
          CFI (cfiCond1183) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1184 Using cfiCommon1
          CFI (cfiPicker1184) NoFunction
          CFI (cfiPicker1184) Picker
        LCALL     ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_264:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1182
          CFI EndBlock cfiCond1183
          CFI EndBlock cfiPicker1184

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine20:
          CFI Block cfiCond1185 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_27
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1186 Using cfiCommon0
          CFI (cfiCond1186) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1186) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond1186) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1186) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1186) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1186) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1186) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1186) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1186) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1186) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1186) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1186) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1186) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1186) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1186) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1186) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1186) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1186) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1186) CFA_SP SP+-2
          CFI (cfiCond1186) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1187 Using cfiCommon0
          CFI (cfiCond1187) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1187) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond1187) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1187) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1187) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1187) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1187) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1187) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1187) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1187) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1187) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1187) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1187) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1187) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1187) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1187) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1187) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1187) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1187) CFA_SP SP+-2
          CFI (cfiCond1187) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1188 Using cfiCommon1
          CFI (cfiPicker1188) NoFunction
          CFI (cfiPicker1188) Picker
        LCALL     ?Subroutine159 & 0xFFFF
??CrossCallReturnLabel_272:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1185
          CFI EndBlock cfiCond1186
          CFI EndBlock cfiCond1187
          CFI EndBlock cfiPicker1188

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine159:
          CFI Block cfiCond1189 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_271
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1190 Using cfiCommon0
          CFI (cfiCond1190) Function ZDO_ParseAddrRsp
          CFI (cfiCond1190) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_27
          CFI (cfiCond1190) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1190) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1190) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1190) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1190) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1190) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1190) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1190) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1190) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1190) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1190) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1190) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1190) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1190) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1190) CFA_SP SP+-4
          CFI (cfiCond1190) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1191 Using cfiCommon0
          CFI (cfiCond1191) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1191) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_28
          CFI (cfiCond1191) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1191) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1191) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1191) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1191) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1191) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1191) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1191) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1191) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1191) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1191) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1191) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1191) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1191) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1191) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1191) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1191) CFA_SP SP+-4
          CFI (cfiCond1191) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1192 Using cfiCommon0
          CFI (cfiCond1192) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1192) Conditional ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_29
          CFI (cfiCond1192) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1192) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1192) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1192) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1192) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1192) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1192) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1192) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1192) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1192) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1192) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1192) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1192) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1192) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1192) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1192) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1192) CFA_SP SP+-4
          CFI (cfiCond1192) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1193 Using cfiCommon1
          CFI (cfiPicker1193) NoFunction
          CFI (cfiPicker1193) Picker
        LCALL     ?Subroutine189 & 0xFFFF
??CrossCallReturnLabel_314:
        RET
          CFI EndBlock cfiCond1189
          CFI EndBlock cfiCond1190
          CFI EndBlock cfiCond1191
          CFI EndBlock cfiCond1192
          CFI EndBlock cfiPicker1193

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine189:
          CFI Block cfiCond1194 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_271
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1195 Using cfiCommon0
          CFI (cfiCond1195) Function ZDO_ParseAddrRsp
          CFI (cfiCond1195) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_27
          CFI (cfiCond1195) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1195) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1195) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1195) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1195) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1195) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1195) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1195) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1195) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1195) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1195) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1195) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1195) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1195) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1195) CFA_SP SP+-6
          CFI (cfiCond1195) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1196 Using cfiCommon0
          CFI (cfiCond1196) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1196) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_28
          CFI (cfiCond1196) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1196) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1196) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1196) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1196) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1196) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1196) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1196) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1196) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1196) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1196) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1196) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1196) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1196) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1196) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1196) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1196) CFA_SP SP+-6
          CFI (cfiCond1196) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1197 Using cfiCommon0
          CFI (cfiCond1197) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1197) Conditional ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_29
          CFI (cfiCond1197) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1197) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1197) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1197) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1197) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1197) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1197) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1197) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1197) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1197) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1197) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1197) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1197) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1197) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1197) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1197) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1197) CFA_SP SP+-6
          CFI (cfiCond1197) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1198 Using cfiCommon0
          CFI (cfiCond1198) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1198) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_54
          CFI (cfiCond1198) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1198) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1198) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1198) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1198) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1198) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1198) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1198) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1198) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1198) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1198) CFA_SP SP+-6
          CFI (cfiCond1198) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1199 Using cfiCommon0
          CFI (cfiCond1199) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1199) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_55
          CFI (cfiCond1199) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1199) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1199) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1199) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1199) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1199) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1199) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1199) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1199) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1199) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1199) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1199) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1199) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1199) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1199) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1199) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1199) CFA_SP SP+-6
          CFI (cfiCond1199) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1200 Using cfiCommon0
          CFI (cfiCond1200) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1200) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_30
          CFI (cfiCond1200) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1200) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1200) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1200) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1200) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1200) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1200) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1200) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1200) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1200) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1200) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1200) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1200) CFA_SP SP+-6
          CFI (cfiCond1200) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1201 Using cfiCommon0
          CFI (cfiCond1201) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1201) Conditional ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_31
          CFI (cfiCond1201) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1201) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1201) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1201) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1201) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1201) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1201) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1201) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1201) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1201) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1201) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1201) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1201) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1201) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1201) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1201) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1201) CFA_SP SP+-6
          CFI (cfiCond1201) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1202 Using cfiCommon1
          CFI (cfiPicker1202) NoFunction
          CFI (cfiPicker1202) Picker
        LCALL     ?Subroutine196 & 0xFFFF
??CrossCallReturnLabel_631:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1194
          CFI EndBlock cfiCond1195
          CFI EndBlock cfiCond1196
          CFI EndBlock cfiCond1197
          CFI EndBlock cfiCond1198
          CFI EndBlock cfiCond1199
          CFI EndBlock cfiCond1200
          CFI EndBlock cfiCond1201
          CFI EndBlock cfiPicker1202

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine196:
          CFI Block cfiCond1203 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_17
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1204 Using cfiCommon0
          CFI (cfiCond1204) Function ZDO_ParseAddrRsp
          CFI (cfiCond1204) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_18
          CFI (cfiCond1204) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1204) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1204) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1204) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1204) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1204) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1204) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1204) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1204) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1204) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1204) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1204) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1204) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1204) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1204) CFA_SP SP+-4
          CFI (cfiCond1204) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1205 Using cfiCommon0
          CFI (cfiCond1205) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1205) Conditional ??CrossCallReturnLabel_633, ??CrossCallReturnLabel_19
          CFI (cfiCond1205) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1205) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1205) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1205) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1205) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1205) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1205) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1205) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1205) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1205) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1205) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1205) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1205) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1205) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1205) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1205) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1205) CFA_SP SP+-4
          CFI (cfiCond1205) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1206 Using cfiCommon0
          CFI (cfiCond1206) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1206) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_271
          CFI (cfiCond1206) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1206) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1206) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1206) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1206) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1206) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1206) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1206) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1206) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1206) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1206) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1206) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1206) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1206) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1206) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1206) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1206) CFA_SP SP+-6
          CFI (cfiCond1206) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1207 Using cfiCommon0
          CFI (cfiCond1207) Function ZDO_ParseAddrRsp
          CFI (cfiCond1207) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_27
          CFI (cfiCond1207) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1207) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1207) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1207) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1207) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1207) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1207) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1207) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1207) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1207) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1207) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1207) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1207) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1207) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1207) CFA_SP SP+-8
          CFI (cfiCond1207) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1208 Using cfiCommon0
          CFI (cfiCond1208) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1208) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_28
          CFI (cfiCond1208) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1208) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1208) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1208) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1208) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1208) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1208) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1208) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1208) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1208) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1208) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1208) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1208) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1208) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1208) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1208) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1208) CFA_SP SP+-8
          CFI (cfiCond1208) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1209 Using cfiCommon0
          CFI (cfiCond1209) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1209) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_314, ??CrossCallReturnLabel_272, ??CrossCallReturnLabel_29
          CFI (cfiCond1209) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1209) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1209) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1209) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1209) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1209) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1209) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1209) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1209) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1209) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1209) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1209) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1209) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1209) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1209) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1209) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1209) CFA_SP SP+-8
          CFI (cfiCond1209) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1210 Using cfiCommon0
          CFI (cfiCond1210) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1210) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_54
          CFI (cfiCond1210) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1210) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1210) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1210) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1210) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1210) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1210) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1210) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1210) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1210) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1210) CFA_SP SP+-8
          CFI (cfiCond1210) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1211 Using cfiCommon0
          CFI (cfiCond1211) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1211) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_55
          CFI (cfiCond1211) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1211) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1211) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1211) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1211) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1211) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1211) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1211) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1211) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1211) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1211) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1211) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1211) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1211) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1211) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1211) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1211) CFA_SP SP+-8
          CFI (cfiCond1211) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1212 Using cfiCommon0
          CFI (cfiCond1212) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1212) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_30
          CFI (cfiCond1212) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1212) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1212) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1212) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1212) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1212) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1212) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1212) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1212) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1212) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1212) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1212) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1212) CFA_SP SP+-8
          CFI (cfiCond1212) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1213 Using cfiCommon0
          CFI (cfiCond1213) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1213) Conditional ??CrossCallReturnLabel_631, ??CrossCallReturnLabel_315, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_31
          CFI (cfiCond1213) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1213) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1213) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1213) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1213) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1213) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1213) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1213) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1213) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1213) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1213) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1213) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1213) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1213) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1213) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1213) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1213) CFA_SP SP+-8
          CFI (cfiCond1213) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1214 Using cfiCommon0
          CFI (cfiCond1214) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1214) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_4
          CFI (cfiCond1214) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1214) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1214) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1214) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1214) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1214) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1214) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1214) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1214) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1214) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1214) CFA_SP SP+-6
          CFI (cfiCond1214) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1215 Using cfiCommon0
          CFI (cfiCond1215) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1215) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_5
          CFI (cfiCond1215) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1215) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1215) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1215) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1215) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1215) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1215) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1215) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1215) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1215) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1215) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1215) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1215) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1215) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1215) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1215) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1215) CFA_SP SP+-6
          CFI (cfiCond1215) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1216 Using cfiCommon0
          CFI (cfiCond1216) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1216) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_48
          CFI (cfiCond1216) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1216) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1216) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1216) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1216) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1216) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1216) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1216) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1216) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1216) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1216) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1216) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1216) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1216) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1216) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1216) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1216) CFA_SP SP+-6
          CFI (cfiCond1216) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1217 Using cfiCommon0
          CFI (cfiCond1217) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1217) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_49
          CFI (cfiCond1217) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1217) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1217) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1217) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1217) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1217) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1217) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1217) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1217) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1217) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1217) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1217) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1217) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1217) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1217) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1217) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1217) CFA_SP SP+-6
          CFI (cfiCond1217) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1218 Using cfiCommon0
          CFI (cfiCond1218) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1218) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_81
          CFI (cfiCond1218) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1218) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1218) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1218) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1218) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1218) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1218) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1218) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1218) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1218) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1218) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1218) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1218) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1218) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1218) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1218) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1218) CFA_SP SP+-6
          CFI (cfiCond1218) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1219 Using cfiCommon0
          CFI (cfiCond1219) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1219) Conditional ??CrossCallReturnLabel_632, ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_82
          CFI (cfiCond1219) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1219) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1219) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1219) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1219) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1219) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1219) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1219) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1219) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1219) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1219) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1219) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1219) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1219) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1219) CFA_SP SP+-6
          CFI (cfiCond1219) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1220 Using cfiCommon1
          CFI (cfiPicker1220) NoFunction
          CFI (cfiPicker1220) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        RET
          CFI EndBlock cfiCond1203
          CFI EndBlock cfiCond1204
          CFI EndBlock cfiCond1205
          CFI EndBlock cfiCond1206
          CFI EndBlock cfiCond1207
          CFI EndBlock cfiCond1208
          CFI EndBlock cfiCond1209
          CFI EndBlock cfiCond1210
          CFI EndBlock cfiCond1211
          CFI EndBlock cfiCond1212
          CFI EndBlock cfiCond1213
          CFI EndBlock cfiCond1214
          CFI EndBlock cfiCond1215
          CFI EndBlock cfiCond1216
          CFI EndBlock cfiCond1217
          CFI EndBlock cfiCond1218
          CFI EndBlock cfiCond1219
          CFI EndBlock cfiPicker1220
// 3268 
// 3269 /*********************************************************************
// 3270  * @fn          ZDO_ParseMgmNwkDiscRsp
// 3271  *
// 3272  * @brief       This function parses the incoming Management
// 3273  *              Network Discover response.
// 3274  *
// 3275  * @param       inMsg - incoming message
// 3276  *
// 3277  * @return      pointer to parsed response.  This structure was
// 3278  *          allocated using osal_mem_alloc, so it must be freed
// 3279  *          by the calling function [osal_mem_free()].
// 3280  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3281 ZDO_MgmNwkDiscRsp_t *ZDO_ParseMgmNwkDiscRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmNwkDiscRsp:
          CFI Block cfiBlock1221 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
        CODE
// 3282 {
        FUNCALL ZDO_ParseMgmNwkDiscRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmNwkDiscRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3283   ZDO_MgmNwkDiscRsp_t *pRsp;
// 3284   uint8 status;
// 3285   uint8 networkCount = 0;
        MOV       ?V0,#0x0
// 3286   uint8 startIndex = 0;
        MOV       ?V1,#0x0
// 3287   uint8 networkListCount = 0;
        MOV       ?V7,#0x0
// 3288   uint8 *msg;
// 3289 
// 3290   msg = inMsg->asdu;
        LCALL     ?Subroutine64 & 0xFFFF
// 3291   status = *msg++;
// 3292 
// 3293   if ( status == ZSuccess )
??CrossCallReturnLabel_111:
        JNZ       ??ZDO_ParseMgmNwkDiscRsp_0
// 3294   {
// 3295     networkCount = *msg++;
        LCALL     ??Subroutine248_0 & 0xFFFF
// 3296     startIndex = *msg++;
??CrossCallReturnLabel_620:
        MOV       ?V1,A
// 3297     networkListCount = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V7,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_0
        INC       R7
// 3298   }
// 3299 
// 3300   // Allocate a buffer big enough to handle the list.
// 3301   pRsp = (ZDO_MgmNwkDiscRsp_t *)osal_mem_alloc( sizeof( ZDO_MgmNwkDiscRsp_t )
// 3302                                   + (networkListCount * sizeof( mgmtNwkDiscItem_t )) );
??ZDO_ParseMgmNwkDiscRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V7
        MOV       ?V2,A
        MOV       ?V3,#0x0
        MOV       A,#0x4
        MOV       R0,#?V2
        LCALL     ?S_SHL
        MOV       A,?V2
        LCALL     ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_310:
        ADDC      A,?V3
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 3303   if ( pRsp )
        MOV       A,R2
        ORL       A,?V3
        JNZ       $+5
        LJMP      ??ZDO_ParseMgmNwkDiscRsp_1 & 0xFFFF
// 3304   {
// 3305     uint8 x;
// 3306     mgmtNwkDiscItem_t *pList;
// 3307 
// 3308     pRsp->status = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V6
        MOVX      @DPTR,A
// 3309     pRsp->networkCount = networkCount;
        INC       DPTR
        MOV       A,?V0
        LCALL     ?Subroutine16 & 0xFFFF
// 3310     pRsp->startIndex = startIndex;
// 3311     pRsp->networkListCount = networkListCount;
??CrossCallReturnLabel_15:
        MOV       A,?V7
        MOVX      @DPTR,A
// 3312     pList = pRsp->list;
        LCALL     ?Subroutine185 & 0xFFFF
// 3313 
// 3314     for ( x = 0; x < networkListCount; x++ )
??CrossCallReturnLabel_306:
        MOV       ?V4,#0x0
        SJMP      ??ZDO_ParseMgmNwkDiscRsp_2
// 3315     {
// 3316       osal_cpyExtAddr(pList->extendedPANID, msg);   //Copy extended PAN ID
??ZDO_ParseMgmNwkDiscRsp_3:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3317       pList->PANId = BUILD_UINT16( msg[0], msg[1] );
        LCALL     ?Subroutine63 & 0xFFFF
??CrossCallReturnLabel_108:
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
        LCALL     ?Subroutine22 & 0xFFFF
// 3318       msg += Z_EXTADDR_LEN;
// 3319 
// 3320       pList->logicalChannel = *msg++;
??CrossCallReturnLabel_31:
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3321       pList->stackProfile = (*msg) & 0x0F;
        MOV       A,R6
        ADD       A,#0x9
        MOV       R0,A
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_206:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0xb
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_589:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine44 & 0xFFFF
// 3322       pList->version = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_71:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine139 & 0xFFFF
??CrossCallReturnLabel_595:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3323       pList->beaconOrder = (*msg) & 0x0F;
        MOV       A,R6
        ADD       A,#0xa
        INC       R0
        LCALL     ?Subroutine124 & 0xFFFF
??CrossCallReturnLabel_207:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0xd
        LCALL     ??Subroutine241_0 & 0xFFFF
??CrossCallReturnLabel_590:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine44 & 0xFFFF
// 3324       pList->superFrameOrder = (*msg++ >> 4) & 0x0F;
??CrossCallReturnLabel_72:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine131 & 0xFFFF
??CrossCallReturnLabel_217:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3325       pList->permitJoining = *msg++;
        LCALL     ?Subroutine137 & 0xFFFF
??CrossCallReturnLabel_234:
        PUSH      A
          CFI CFA_SP SP+-1
        LCALL     ?Subroutine128 & 0xFFFF
??CrossCallReturnLabel_350:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0xc
        MOV       R6,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_4
        INC       R7
// 3326       pList++;
??ZDO_ParseMgmNwkDiscRsp_4:
        MOV       A,?V0
        ADD       A,#0x10
        MOV       ?V0,A
        JNC       ??ZDO_ParseMgmNwkDiscRsp_5
        INC       ?V1
// 3327     }
??ZDO_ParseMgmNwkDiscRsp_5:
        INC       ?V4
??ZDO_ParseMgmNwkDiscRsp_2:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V7
        JNC       $+5
        LJMP      ??ZDO_ParseMgmNwkDiscRsp_3 & 0xFFFF
// 3328   }
// 3329 
// 3330   return ( pRsp );
??ZDO_ParseMgmNwkDiscRsp_1:
        LJMP      ?Subroutine7 & 0xFFFF
// 3331 }
          CFI EndBlock cfiBlock1221

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine139:
          CFI Block cfiCond1222 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_592
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1223 Using cfiCommon0
          CFI (cfiCond1223) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1223) Conditional ??CrossCallReturnLabel_593
          CFI (cfiCond1223) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1223) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1223) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1223) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1223) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1223) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1223) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1223) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1223) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1223) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1223) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1223) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1223) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1223) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1223) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1223) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1223) CFA_SP SP+-2
          CFI (cfiCond1223) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1224 Using cfiCommon0
          CFI (cfiCond1224) Function ZDO_ParseAddrRsp
          CFI (cfiCond1224) Conditional ??CrossCallReturnLabel_594
          CFI (cfiCond1224) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1224) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1224) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1224) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1224) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1224) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1224) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1224) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1224) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1224) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1224) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1224) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1224) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1224) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1224) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1225 Using cfiCommon0
          CFI (cfiCond1225) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1225) Conditional ??CrossCallReturnLabel_595
          CFI (cfiCond1225) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1225) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1225) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1225) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1225) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1225) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1225) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1225) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1225) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1225) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1225) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1225) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1225) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1225) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1225) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1225) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1225) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1226 Using cfiCommon1
          CFI (cfiPicker1226) NoFunction
          CFI (cfiPicker1226) Picker
        MOV       A,?V0
        ADD       A,#0xc
          CFI EndBlock cfiCond1222
          CFI EndBlock cfiCond1223
          CFI EndBlock cfiCond1224
          CFI EndBlock cfiCond1225
          CFI EndBlock cfiPicker1226
        REQUIRE ??Subroutine241_0
        ; // Fall through to label ??Subroutine241_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine241_0:
          CFI Block cfiCond1227 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_579
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1228 Using cfiCommon0
          CFI (cfiCond1228) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1228) Conditional ??CrossCallReturnLabel_580
          CFI (cfiCond1228) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1228) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1228) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1228) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1228) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1228) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1228) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1228) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1228) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1228) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1228) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1228) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1228) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1228) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1228) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1228) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1228) CFA_SP SP+-2
          CFI (cfiCond1228) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1229 Using cfiCommon0
          CFI (cfiCond1229) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1229) Conditional ??CrossCallReturnLabel_581
          CFI (cfiCond1229) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1229) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1229) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1229) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1229) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1229) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1229) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1229) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1229) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1229) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1229) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1230 Using cfiCommon0
          CFI (cfiCond1230) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1230) Conditional ??CrossCallReturnLabel_582
          CFI (cfiCond1230) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1230) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1230) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1230) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1230) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1230) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1230) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1230) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1230) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1230) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1230) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1230) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1230) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1230) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1230) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1230) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1230) CFA_SP SP+-2
          CFI (cfiCond1230) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1231 Using cfiCommon0
          CFI (cfiCond1231) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1231) Conditional ??CrossCallReturnLabel_583
          CFI (cfiCond1231) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1231) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1231) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1231) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1231) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1231) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1231) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1231) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1231) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1231) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1231) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1231) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1231) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1231) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1231) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1231) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1231) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1232 Using cfiCommon0
          CFI (cfiCond1232) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1232) Conditional ??CrossCallReturnLabel_584
          CFI (cfiCond1232) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1232) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1232) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1232) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1232) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1232) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1232) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1232) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1232) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1232) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1232) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1232) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1232) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1232) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1232) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1232) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1232) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1233 Using cfiCommon0
          CFI (cfiCond1233) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1233) Conditional ??CrossCallReturnLabel_585
          CFI (cfiCond1233) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1233) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1233) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1233) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1233) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1233) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1233) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1233) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1233) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1233) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1233) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1233) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1233) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1233) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1233) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1233) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1233) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1234 Using cfiCommon0
          CFI (cfiCond1234) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1234) Conditional ??CrossCallReturnLabel_586
          CFI (cfiCond1234) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1234) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1234) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1234) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1234) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1234) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1234) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1234) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1234) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1234) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1234) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1234) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1234) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1234) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1234) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1234) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1234) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1235 Using cfiCommon0
          CFI (cfiCond1235) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1235) Conditional ??CrossCallReturnLabel_587
          CFI (cfiCond1235) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1235) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1235) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1235) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1235) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1235) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1235) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1235) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1235) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1235) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1235) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1235) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1235) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1235) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1235) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1235) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1235) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1236 Using cfiCommon0
          CFI (cfiCond1236) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1236) Conditional ??CrossCallReturnLabel_588
          CFI (cfiCond1236) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1236) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1236) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1236) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1236) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1236) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1236) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1236) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1236) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1236) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1236) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1236) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1236) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1236) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1236) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1236) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1236) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1237 Using cfiCommon0
          CFI (cfiCond1237) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1237) Conditional ??CrossCallReturnLabel_589
          CFI (cfiCond1237) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1237) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1237) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1237) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1237) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1237) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1237) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1237) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1237) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1237) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1237) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1237) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1237) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1237) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1237) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1237) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1237) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1238 Using cfiCommon0
          CFI (cfiCond1238) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1238) Conditional ??CrossCallReturnLabel_590
          CFI (cfiCond1238) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1238) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1238) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1238) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1238) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1238) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1238) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1238) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1238) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1238) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1238) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1238) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1238) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1238) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1238) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1238) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1238) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1239 Using cfiCommon0
          CFI (cfiCond1239) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1239) Conditional ??CrossCallReturnLabel_591
          CFI (cfiCond1239) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1239) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1239) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1239) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1239) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1239) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1239) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1239) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1239) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1239) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1239) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1239) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1239) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1239) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1239) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1239) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1239) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1240 Using cfiCommon0
          CFI (cfiCond1240) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1240) Conditional ??CrossCallReturnLabel_592
          CFI (cfiCond1240) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1240) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1240) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1240) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1240) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1240) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1240) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1240) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1240) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1240) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1240) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1240) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1240) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1240) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1240) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1240) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1240) CFA_SP SP+-2
          CFI (cfiCond1240) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1241 Using cfiCommon0
          CFI (cfiCond1241) Function ZDO_ProcessBindUnbindReq
          CFI (cfiCond1241) Conditional ??CrossCallReturnLabel_593
          CFI (cfiCond1241) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1241) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1241) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1241) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1241) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1241) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1241) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1241) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1241) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1241) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1241) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1241) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1241) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1241) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1241) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1241) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1241) CFA_SP SP+-2
          CFI (cfiCond1241) CFA_XSP16 add(XSP16, 31)
          CFI Block cfiCond1242 Using cfiCommon0
          CFI (cfiCond1242) Function ZDO_ParseAddrRsp
          CFI (cfiCond1242) Conditional ??CrossCallReturnLabel_594
          CFI (cfiCond1242) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1242) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1242) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1242) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1242) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1242) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1242) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1242) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1242) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1242) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1242) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1242) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1242) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1242) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1242) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1243 Using cfiCommon0
          CFI (cfiCond1243) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1243) Conditional ??CrossCallReturnLabel_595
          CFI (cfiCond1243) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1243) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1243) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1243) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1243) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1243) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1243) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1243) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1243) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1243) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1243) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1243) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1243) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1243) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1243) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1243) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1243) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1244 Using cfiCommon1
          CFI (cfiPicker1244) NoFunction
          CFI (cfiPicker1244) Picker
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1227
          CFI EndBlock cfiCond1228
          CFI EndBlock cfiCond1229
          CFI EndBlock cfiCond1230
          CFI EndBlock cfiCond1231
          CFI EndBlock cfiCond1232
          CFI EndBlock cfiCond1233
          CFI EndBlock cfiCond1234
          CFI EndBlock cfiCond1235
          CFI EndBlock cfiCond1236
          CFI EndBlock cfiCond1237
          CFI EndBlock cfiCond1238
          CFI EndBlock cfiCond1239
          CFI EndBlock cfiCond1240
          CFI EndBlock cfiCond1241
          CFI EndBlock cfiCond1242
          CFI EndBlock cfiCond1243
          CFI EndBlock cfiPicker1244

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine137:
          CFI Block cfiCond1245 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtPermitJoinReq
          CFI Conditional ??CrossCallReturnLabel_233
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1246 Using cfiCommon0
          CFI (cfiCond1246) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1246) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond1246) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1246) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1246) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1246) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1246) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1246) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1246) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1246) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1246) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1246) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1246) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1246) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1246) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1246) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1246) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1246) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1246) CFA_SP SP+-2
          CFI (cfiCond1246) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1247 Using cfiCommon1
          CFI (cfiPicker1247) NoFunction
          CFI (cfiPicker1247) Picker
        MOV       A,R6
        ADD       A,#0xb
        LCALL     ?Subroutine181 & 0xFFFF
??CrossCallReturnLabel_601:
        RET
          CFI EndBlock cfiCond1245
          CFI EndBlock cfiCond1246
          CFI EndBlock cfiPicker1247

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine181:
          CFI Block cfiCond1248 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1249 Using cfiCommon0
          CFI (cfiCond1249) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1249) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_102
          CFI (cfiCond1249) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1249) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1249) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1249) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1249) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1249) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1249) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1249) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1249) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1249) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1249) CFA_SP SP+-4
          CFI (cfiCond1249) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1250 Using cfiCommon0
          CFI (cfiCond1250) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1250) Conditional ??CrossCallReturnLabel_599
          CFI (cfiCond1250) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1250) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1250) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1250) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1250) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1250) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1250) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1250) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1250) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1250) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1250) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1250) CFA_SP SP+-2
          CFI (cfiCond1250) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond1251 Using cfiCommon0
          CFI (cfiCond1251) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1251) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_233
          CFI (cfiCond1251) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1251) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1251) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1251) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1251) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1251) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1251) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1251) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1251) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1251) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1251) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1251) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1251) CFA_SP SP+-4
          CFI (cfiCond1251) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1252 Using cfiCommon0
          CFI (cfiCond1252) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1252) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_234
          CFI (cfiCond1252) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1252) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1252) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1252) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1252) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1252) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1252) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1252) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1252) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1252) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1252) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1252) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1252) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1252) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1252) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1252) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1252) CFA_SP SP+-4
          CFI (cfiCond1252) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1253 Using cfiCommon1
          CFI (cfiPicker1253) NoFunction
          CFI (cfiPicker1253) Picker
        MOV       DPL,A
        CLR       A
          CFI EndBlock cfiCond1248
          CFI EndBlock cfiCond1249
          CFI EndBlock cfiCond1250
          CFI EndBlock cfiCond1251
          CFI EndBlock cfiCond1252
          CFI EndBlock cfiPicker1253
        REQUIRE ??Subroutine242_0
        ; // Fall through to label ??Subroutine242_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine242_0:
          CFI Block cfiCond1254 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_101
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1255 Using cfiCommon0
          CFI (cfiCond1255) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1255) Conditional ??CrossCallReturnLabel_598, ??CrossCallReturnLabel_102
          CFI (cfiCond1255) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1255) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1255) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1255) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1255) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1255) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1255) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1255) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1255) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1255) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1255) CFA_SP SP+-4
          CFI (cfiCond1255) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1256 Using cfiCommon0
          CFI (cfiCond1256) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1256) Conditional ??CrossCallReturnLabel_596
          CFI (cfiCond1256) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1256) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1256) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1256) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1256) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1256) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1256) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1256) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1256) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1256) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1256) CFA_SP SP+-2
          CFI (cfiCond1256) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1257 Using cfiCommon0
          CFI (cfiCond1257) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1257) Conditional ??CrossCallReturnLabel_597
          CFI (cfiCond1257) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1257) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1257) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1257) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1257) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1257) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1257) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1257) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1257) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1257) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1257) CFA_SP SP+-2
          CFI (cfiCond1257) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1258 Using cfiCommon0
          CFI (cfiCond1258) Function ZDO_ProcessNodeDescReq
          CFI (cfiCond1258) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_101
          CFI (cfiCond1258) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1258) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1258) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1258) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1258) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1258) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1258) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1258) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1258) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1258) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1258) CFA_SP SP+-4
          CFI (cfiCond1258) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1259 Using cfiCommon0
          CFI (cfiCond1259) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1259) Conditional ??CrossCallReturnLabel_600, ??CrossCallReturnLabel_102
          CFI (cfiCond1259) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1259) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1259) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1259) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1259) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1259) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1259) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1259) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1259) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1259) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1259) CFA_SP SP+-4
          CFI (cfiCond1259) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1260 Using cfiCommon0
          CFI (cfiCond1260) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1260) Conditional ??CrossCallReturnLabel_599
          CFI (cfiCond1260) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1260) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1260) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1260) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1260) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1260) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1260) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1260) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1260) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1260) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1260) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1260) CFA_SP SP+-2
          CFI (cfiCond1260) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond1261 Using cfiCommon0
          CFI (cfiCond1261) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1261) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_233
          CFI (cfiCond1261) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1261) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1261) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1261) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1261) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1261) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1261) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1261) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1261) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1261) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1261) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1261) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1261) CFA_SP SP+-4
          CFI (cfiCond1261) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1262 Using cfiCommon0
          CFI (cfiCond1262) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1262) Conditional ??CrossCallReturnLabel_601, ??CrossCallReturnLabel_234
          CFI (cfiCond1262) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1262) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1262) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1262) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1262) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1262) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1262) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1262) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1262) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1262) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1262) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1262) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1262) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1262) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1262) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1262) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1262) CFA_SP SP+-4
          CFI (cfiCond1262) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1263 Using cfiCommon1
          CFI (cfiPicker1263) NoFunction
          CFI (cfiPicker1263) Picker
        ADDC      A,R7
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1254
          CFI EndBlock cfiCond1255
          CFI EndBlock cfiCond1256
          CFI EndBlock cfiCond1257
          CFI EndBlock cfiCond1258
          CFI EndBlock cfiCond1259
          CFI EndBlock cfiCond1260
          CFI EndBlock cfiCond1261
          CFI EndBlock cfiCond1262
          CFI EndBlock cfiPicker1263

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine131:
          CFI Block cfiCond1264 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_216
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1265 Using cfiCommon0
          CFI (cfiCond1265) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1265) Conditional ??CrossCallReturnLabel_217
          CFI (cfiCond1265) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1265) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1265) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1265) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1265) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1265) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1265) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1265) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1265) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1265) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1265) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1265) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1265) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1265) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1265) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1265) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1265) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1266 Using cfiCommon1
          CFI (cfiPicker1266) NoFunction
          CFI (cfiPicker1266) Picker
        LCALL     ?Subroutine178 & 0xFFFF
??CrossCallReturnLabel_298:
        RET
          CFI EndBlock cfiCond1264
          CFI EndBlock cfiCond1265
          CFI EndBlock cfiPicker1266

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine178:
          CFI Block cfiCond1267 Using cfiCommon0
          CFI Function ZDO_ProcessBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_214
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1268 Using cfiCommon0
          CFI (cfiCond1268) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1268) Conditional ??CrossCallReturnLabel_297, ??CrossCallReturnLabel_215
          CFI (cfiCond1268) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1268) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1268) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1268) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1268) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1268) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1268) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1268) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1268) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1268) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1268) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1268) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1268) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1268) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1268) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1268) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1268) CFA_SP SP+-4
          CFI (cfiCond1268) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1269 Using cfiCommon0
          CFI (cfiCond1269) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1269) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_216
          CFI (cfiCond1269) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1269) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1269) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1269) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1269) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1269) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1269) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1269) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1269) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1269) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1269) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1269) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1269) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1269) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1269) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1269) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1269) CFA_SP SP+-5
          CFI (cfiCond1269) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1270 Using cfiCommon0
          CFI (cfiCond1270) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1270) Conditional ??CrossCallReturnLabel_298, ??CrossCallReturnLabel_217
          CFI (cfiCond1270) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1270) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1270) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1270) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1270) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1270) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1270) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1270) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1270) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1270) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1270) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1270) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1270) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1270) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1270) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1270) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1270) CFA_SP SP+-5
          CFI (cfiCond1270) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1271 Using cfiCommon1
          CFI (cfiPicker1271) NoFunction
          CFI (cfiPicker1271) Picker
        MOV       A,?V0
        ADD       A,#0xe
        MOV       DPL,A
        CLR       A
        ADDC      A,?V1
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1267
          CFI EndBlock cfiCond1268
          CFI EndBlock cfiCond1269
          CFI EndBlock cfiCond1270
          CFI EndBlock cfiPicker1271

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine124:
          CFI Block cfiCond1272 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_206
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1273 Using cfiCommon0
          CFI (cfiCond1273) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1273) Conditional ??CrossCallReturnLabel_207
          CFI (cfiCond1273) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1273) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1273) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1273) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1273) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1273) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1273) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1273) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1273) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1273) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1273) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1273) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1273) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1273) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1273) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1273) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1273) CFA_SP SP+-2
          CFI (cfiCond1273) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1274 Using cfiCommon1
          CFI (cfiPicker1274) NoFunction
          CFI (cfiPicker1274) Picker
        CLR       A
        ADDC      A,R7
        MOV       R1,A
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        ANL       A,#0xf
        RET
          CFI EndBlock cfiCond1272
          CFI EndBlock cfiCond1273
          CFI EndBlock cfiPicker1274

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine64:
          CFI Block cfiCond1275 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1276 Using cfiCommon0
          CFI (cfiCond1276) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1276) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond1276) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1276) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1276) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1276) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1276) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1276) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1276) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1276) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1276) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1276) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1276) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1276) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1276) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1276) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1276) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1276) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1276) CFA_SP SP+-2
          CFI (cfiCond1276) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1277 Using cfiCommon1
          CFI (cfiPicker1277) NoFunction
          CFI (cfiPicker1277) Picker
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_303:
        LCALL     ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_610:
        MOV       ?V6,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        RET
          CFI EndBlock cfiCond1275
          CFI EndBlock cfiCond1276
          CFI EndBlock cfiPicker1277

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine44:
          CFI Block cfiCond1278 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_71
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1279 Using cfiCommon0
          CFI (cfiCond1279) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1279) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond1279) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1279) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1279) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1279) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1279) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1279) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1279) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1279) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1279) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1279) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1279) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1279) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1279) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1279) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1279) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1279) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1279) CFA_SP SP+-2
          CFI (cfiCond1279) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1280 Using cfiCommon1
          CFI (cfiPicker1280) NoFunction
          CFI (cfiPicker1280) Picker
        LCALL     ?Subroutine156 & 0xFFFF
??CrossCallReturnLabel_268:
        SWAP      A
        ANL       A,#0xf
        RET
          CFI EndBlock cfiCond1278
          CFI EndBlock cfiCond1279
          CFI EndBlock cfiPicker1280

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine22:
          CFI Block cfiCond1281 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtLeaveReq
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1282 Using cfiCommon0
          CFI (cfiCond1282) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1282) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond1282) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1282) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1282) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1282) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1282) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1282) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1282) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1282) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1282) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1282) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1282) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1282) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1282) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1282) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1282) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1282) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1282) CFA_SP SP+-2
          CFI (cfiCond1282) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1283 Using cfiCommon1
          CFI (cfiPicker1283) NoFunction
          CFI (cfiPicker1283) Picker
        LCALL     ?Subroutine154 & 0xFFFF
??CrossCallReturnLabel_265:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1281
          CFI EndBlock cfiCond1282
          CFI EndBlock cfiPicker1283

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine154:
          CFI Block cfiCond1284 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_54
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1285 Using cfiCommon0
          CFI (cfiCond1285) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1285) Conditional ??CrossCallReturnLabel_264, ??CrossCallReturnLabel_55
          CFI (cfiCond1285) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1285) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1285) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1285) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1285) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1285) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1285) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1285) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1285) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1285) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1285) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1285) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1285) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1285) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1285) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1285) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1285) CFA_SP SP+-4
          CFI (cfiCond1285) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1286 Using cfiCommon0
          CFI (cfiCond1286) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1286) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_30
          CFI (cfiCond1286) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1286) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1286) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1286) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1286) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1286) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1286) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1286) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1286) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1286) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1286) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1286) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1286) CFA_SP SP+-4
          CFI (cfiCond1286) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1287 Using cfiCommon0
          CFI (cfiCond1287) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1287) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_31
          CFI (cfiCond1287) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1287) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1287) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1287) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1287) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1287) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1287) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1287) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1287) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1287) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1287) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1287) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1287) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1287) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1287) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1287) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1287) CFA_SP SP+-4
          CFI (cfiCond1287) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1288 Using cfiCommon1
          CFI (cfiPicker1288) NoFunction
          CFI (cfiPicker1288) Picker
        LCALL     ?Subroutine189 & 0xFFFF
??CrossCallReturnLabel_315:
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1284
          CFI EndBlock cfiCond1285
          CFI EndBlock cfiCond1286
          CFI EndBlock cfiCond1287
          CFI EndBlock cfiPicker1288
// 3332 
// 3333 /*********************************************************************
// 3334  * @fn          ZDO_ParseMgmtRtgRsp
// 3335  *
// 3336  * @brief       This function parses the incoming Management
// 3337  *              Routing response.
// 3338  *
// 3339  * @param       inMsg - incoming message
// 3340  *
// 3341  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3342  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3343  *          by the calling function [osal_mem_free()].
// 3344  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3345 ZDO_MgmtRtgRsp_t *ZDO_ParseMgmtRtgRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtRtgRsp:
          CFI Block cfiBlock1289 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
        CODE
// 3346 {
        FUNCALL ZDO_ParseMgmtRtgRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3347   ZDO_MgmtRtgRsp_t *pRsp;
// 3348   uint8 status;
// 3349   uint8 rtgCount = 0;
        MOV       ?V4,#0x0
// 3350   uint8 startIndex = 0;
        MOV       ?V1,#0x0
// 3351   uint8 rtgListCount = 0;
        MOV       ?V0,#0x0
// 3352   uint8 *msg;
// 3353 
// 3354   msg = inMsg->asdu;
        LCALL     ?Subroutine65 & 0xFFFF
// 3355 
// 3356   status = *msg++;
??CrossCallReturnLabel_606:
        MOV       ?V5,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3357   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmtRtgRsp_0
// 3358   {
// 3359     rtgCount = *msg++;
        MOVX      A,@DPTR
        MOV       ?V4,A
// 3360     startIndex = *msg++;
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
// 3361     rtgListCount = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V0,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtRtgRsp_0
        INC       R7
// 3362   }
// 3363 
// 3364   // Allocate a buffer big enough to handle the list
// 3365   pRsp = (ZDO_MgmtRtgRsp_t *)osal_mem_alloc(
// 3366           sizeof( ZDO_MgmtRtgRsp_t ) + (rtgListCount * sizeof( rtgItem_t )) );
??ZDO_ParseMgmtRtgRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V0
        MOV       B,#0x7
        LCALL     ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_251:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
// 3367   if ( pRsp )
        MOV       A,R2
        ORL       A,R3
        JZ        ??ZDO_ParseMgmtRtgRsp_1
// 3368   {
// 3369     uint8 x;
// 3370     rtgItem_t *pList = pRsp->list;
        MOV       A,R2
        ADD       A,#0x4
        MOV       R0,A
        CLR       A
        ADDC      A,R3
        MOV       R1,A
// 3371     pRsp->status = status;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V5
        MOVX      @DPTR,A
// 3372     pRsp->rtgCount = rtgCount;
        INC       DPTR
        MOV       A,?V4
        LCALL     ?Subroutine16 & 0xFFFF
// 3373     pRsp->startIndex = startIndex;
// 3374     pRsp->rtgListCount = rtgListCount;
??CrossCallReturnLabel_16:
        MOV       A,?V0
        MOVX      @DPTR,A
// 3375 
// 3376     for ( x = 0; x < rtgListCount; x++ )
        MOV       R4,#0x0
        SJMP      ??ZDO_ParseMgmtRtgRsp_2
// 3377     {
// 3378       uint8 statOpt;
// 3379 
// 3380       pList->dstAddress = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtRtgRsp_3:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_164:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        LCALL     ?Subroutine48 & 0xFFFF
// 3381       msg += 2;
// 3382       statOpt = *msg++;
??CrossCallReturnLabel_82:
        MOV       R5,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtRtgRsp_4
        INC       R7
// 3383       pList->status = (statOpt & 0x07);
??ZDO_ParseMgmtRtgRsp_4:
        MOV       A,#0x7
        ANL       A,R5
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3384       pList->options = ((statOpt >> 3) & 0x07);
        MOV       A,R5
        RRC       A
        RRC       A
        RRC       A
        ANL       A,#0x1f
        ANL       A,#0x7
        MOV       DPL,R0
        MOV       DPH,R1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine243_0 & 0xFFFF
// 3385       pList->nextHopAddress = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_605:
        LCALL     ?Subroutine104 & 0xFFFF
??CrossCallReturnLabel_165:
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V3
        LCALL     ?Subroutine155 & 0xFFFF
// 3386       msg += 2;
??CrossCallReturnLabel_559:
        JNC       ??ZDO_ParseMgmtRtgRsp_5
        INC       R7
// 3387       pList++;
??ZDO_ParseMgmtRtgRsp_5:
        MOV       A,R0
        ADD       A,#0x7
        MOV       R0,A
        JNC       ??ZDO_ParseMgmtRtgRsp_6
        INC       R1
// 3388     }
??ZDO_ParseMgmtRtgRsp_6:
        INC       R4
??ZDO_ParseMgmtRtgRsp_2:
        MOV       A,R4
        CLR       C
        SUBB      A,?V0
        JC        ??ZDO_ParseMgmtRtgRsp_3
// 3389   }
// 3390 
// 3391   return ( pRsp );
??ZDO_ParseMgmtRtgRsp_1:
        LJMP      ??Subroutine222_0 & 0xFFFF
// 3392 }
          CFI EndBlock cfiBlock1289

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine145:
          CFI Block cfiCond1290 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_250
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1291 Using cfiCommon0
          CFI (cfiCond1291) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1291) Conditional ??CrossCallReturnLabel_251
          CFI (cfiCond1291) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1291) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1291) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1291) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1291) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1291) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1291) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1291) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1291) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1291) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1291) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1291) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1291) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1291) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1291) CFA_SP SP+-2
          CFI (cfiCond1291) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1292 Using cfiCommon0
          CFI (cfiCond1292) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1292) Conditional ??CrossCallReturnLabel_252
          CFI (cfiCond1292) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1292) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1292) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1292) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1292) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1292) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1292) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1292) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1292) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1292) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1292) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1292) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1292) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1292) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1292) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1292) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1292) CFA_SP SP+-2
          CFI (cfiCond1292) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1293 Using cfiCommon1
          CFI (cfiPicker1293) NoFunction
          CFI (cfiPicker1293) Picker
        MUL       AB
        MOV       R1,B
        LCALL     ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_313:
        ADDC      A,R1
        MOV       R3,A
        RET
          CFI EndBlock cfiCond1290
          CFI EndBlock cfiCond1291
          CFI EndBlock cfiCond1292
          CFI EndBlock cfiPicker1293

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine186:
          CFI Block cfiCond1294 Using cfiCommon0
          CFI Function ZDO_ParseEPListRsp
          CFI Conditional ??CrossCallReturnLabel_308
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1295 Using cfiCommon0
          CFI (cfiCond1295) Function ZDO_ParseEPListRsp
          CFI (cfiCond1295) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond1295) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1295) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1295) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1295) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1295) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1295) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1295) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1295) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1295) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1295) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1295) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1295) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1295) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1295) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1295) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1295) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1295) CFA_SP SP+-2
          CFI (cfiCond1295) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1296 Using cfiCommon0
          CFI (cfiCond1296) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1296) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond1296) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1296) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1296) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1296) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1296) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1296) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1296) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1296) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1296) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1296) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1296) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1296) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1296) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1296) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1296) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1296) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1296) CFA_SP SP+-2
          CFI (cfiCond1296) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1297 Using cfiCommon0
          CFI (cfiCond1297) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1297) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_250
          CFI (cfiCond1297) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1297) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1297) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1297) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1297) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1297) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1297) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1297) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1297) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1297) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1297) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1297) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1297) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1297) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1297) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1297) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1297) CFA_SP SP+-4
          CFI (cfiCond1297) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1298 Using cfiCommon0
          CFI (cfiCond1298) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1298) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_251
          CFI (cfiCond1298) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1298) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1298) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1298) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1298) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1298) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1298) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1298) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1298) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1298) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1298) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1298) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1298) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1298) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1298) CFA_SP SP+-4
          CFI (cfiCond1298) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1299 Using cfiCommon0
          CFI (cfiCond1299) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1299) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_252
          CFI (cfiCond1299) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1299) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1299) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1299) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1299) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1299) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1299) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1299) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1299) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1299) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1299) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1299) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1299) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1299) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1299) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1299) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1299) CFA_SP SP+-4
          CFI (cfiCond1299) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1300 Using cfiCommon0
          CFI (cfiCond1300) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1300) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond1300) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1300) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1300) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1300) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1300) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1300) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1300) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1300) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1300) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1300) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1300) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1300) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1300) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1300) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1300) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1300) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1300) CFA_SP SP+-2
          CFI (cfiCond1300) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1301 Using cfiCommon0
          CFI (cfiCond1301) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1301) Conditional ??CrossCallReturnLabel_312
          CFI (cfiCond1301) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1301) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1301) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1301) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1301) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1301) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1301) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1301) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1301) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1301) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1301) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1301) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1301) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1301) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1301) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1301) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1301) CFA_SP SP+-2
          CFI (cfiCond1301) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiPicker1302 Using cfiCommon1
          CFI (cfiPicker1302) NoFunction
          CFI (cfiPicker1302) Picker
        ADD       A,#0x4
        MOV       R2,A
        CLR       A
        RET
          CFI EndBlock cfiCond1294
          CFI EndBlock cfiCond1295
          CFI EndBlock cfiCond1296
          CFI EndBlock cfiCond1297
          CFI EndBlock cfiCond1298
          CFI EndBlock cfiCond1299
          CFI EndBlock cfiCond1300
          CFI EndBlock cfiCond1301
          CFI EndBlock cfiPicker1302

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine104:
          CFI Block cfiCond1303 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1304 Using cfiCommon0
          CFI (cfiCond1304) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1304) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond1304) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1304) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1304) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1304) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1304) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1304) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1304) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1304) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1304) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1304) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1304) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1304) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1304) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1304) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1304) CFA_SP SP+-2
          CFI (cfiCond1304) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1305 Using cfiCommon1
          CFI (cfiPicker1305) NoFunction
          CFI (cfiPicker1305) Picker
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V3,A
        MOV       A,?V4
        MOV       DPL,R0
        MOV       DPH,R1
        RET
          CFI EndBlock cfiCond1303
          CFI EndBlock cfiCond1304
          CFI EndBlock cfiPicker1305

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine48:
          CFI Block cfiCond1306 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1307 Using cfiCommon0
          CFI (cfiCond1307) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1307) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond1307) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1307) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1307) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1307) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1307) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1307) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1307) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1307) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1307) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1307) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1307) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1307) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1307) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1307) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1307) CFA_SP SP+-2
          CFI (cfiCond1307) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1308 Using cfiCommon1
          CFI (cfiPicker1308) NoFunction
          CFI (cfiPicker1308) Picker
        LCALL     ??Subroutine250_0 & 0xFFFF
??CrossCallReturnLabel_630:
        RET
          CFI EndBlock cfiCond1306
          CFI EndBlock cfiCond1307
          CFI EndBlock cfiPicker1308

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine29:
          CFI Block cfiCond1309 Using cfiCommon0
          CFI Function ZDO_BuildSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_602
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1310 Using cfiCommon0
          CFI (cfiCond1310) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1310) Conditional ??CrossCallReturnLabel_603
          CFI (cfiCond1310) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1310) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1310) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1310) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1310) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1310) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1310) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1310) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1310) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1310) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1310) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1310) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1310) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1310) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1310) CFA_SP SP+-2
          CFI (cfiCond1310) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1311 Using cfiCommon1
          CFI (cfiPicker1311) NoFunction
          CFI (cfiPicker1311) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,R2
        MOV       DPH,R3
          CFI EndBlock cfiCond1309
          CFI EndBlock cfiCond1310
          CFI EndBlock cfiPicker1311
        REQUIRE ??Subroutine243_0
        ; // Fall through to label ??Subroutine243_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine243_0:
          CFI Block cfiCond1312 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_604
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1313 Using cfiCommon0
          CFI (cfiCond1313) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1313) Conditional ??CrossCallReturnLabel_605
          CFI (cfiCond1313) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1313) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1313) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1313) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1313) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1313) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1313) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1313) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1313) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1313) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1313) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1313) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1313) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1313) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1313) CFA_SP SP+-2
          CFI (cfiCond1313) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1314 Using cfiCommon0
          CFI (cfiCond1314) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1314) Conditional ??CrossCallReturnLabel_602
          CFI (cfiCond1314) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1314) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1314) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1314) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1314) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1314) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1314) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1314) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1314) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1314) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1314) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1314) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1314) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1314) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1314) CFA_SP SP+-2
          CFI (cfiCond1314) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1315 Using cfiCommon0
          CFI (cfiCond1315) Function ZDO_BuildSimpleDescBuf
          CFI (cfiCond1315) Conditional ??CrossCallReturnLabel_603
          CFI (cfiCond1315) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1315) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1315) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1315) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1315) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1315) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1315) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1315) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1315) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1315) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1315) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1315) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1315) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1315) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1315) CFA_SP SP+-2
          CFI (cfiCond1315) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1316 Using cfiCommon1
          CFI (cfiPicker1316) NoFunction
          CFI (cfiPicker1316) Picker
        MOVX      @DPTR,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1312
          CFI EndBlock cfiCond1313
          CFI EndBlock cfiCond1314
          CFI EndBlock cfiCond1315
          CFI EndBlock cfiPicker1316

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine16:
          CFI Block cfiCond1317 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1318 Using cfiCommon0
          CFI (cfiCond1318) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1318) Conditional ??CrossCallReturnLabel_16
          CFI (cfiCond1318) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1318) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1318) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1318) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1318) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1318) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1318) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1318) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1318) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1318) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1318) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1318) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1318) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1318) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1318) CFA_SP SP+-2
          CFI (cfiCond1318) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1319 Using cfiCommon1
          CFI (cfiPicker1319) NoFunction
          CFI (cfiPicker1319) Picker
        LCALL     ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_547:
        INC       DPTR
        MOV       A,?V1
        LCALL     ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_269:
        RET
          CFI EndBlock cfiCond1317
          CFI EndBlock cfiCond1318
          CFI EndBlock cfiPicker1319
// 3393 
// 3394 /*********************************************************************
// 3395  * @fn          ZDO_ParseMgmtBindRsp
// 3396  *
// 3397  * @brief       This function parses the incoming Management
// 3398  *              Binding response.
// 3399  *
// 3400  * @param       inMsg - pointer to message to parse
// 3401  *
// 3402  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3403  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3404  *          by the calling function [osal_mem_free()].
// 3405  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3406 ZDO_MgmtBindRsp_t *ZDO_ParseMgmtBindRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtBindRsp:
          CFI Block cfiBlock1320 Using cfiCommon0
          CFI Function ZDO_ParseMgmtBindRsp
        CODE
// 3407 {
        FUNCALL ZDO_ParseMgmtBindRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtBindRsp, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3408   ZDO_MgmtBindRsp_t *pRsp;
// 3409   uint8 status;
// 3410   uint8 bindingCount = 0;
        MOV       ?V4,#0x0
// 3411   uint8 startIndex = 0;
        MOV       ?V5,#0x0
// 3412   uint8 bindingListCount = 0;
        MOV       ?V6,#0x0
// 3413   uint8 *msg;
// 3414 
// 3415   msg = inMsg->asdu;
        LCALL     ?Subroutine65 & 0xFFFF
// 3416 
// 3417   status = *msg++;
??CrossCallReturnLabel_607:
        MOV       ?V7,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3418   if ( status == ZSuccess )
        JNZ       ??ZDO_ParseMgmtBindRsp_0
// 3419   {
// 3420     bindingCount = *msg++;
        LCALL     ?Subroutine74 & 0xFFFF
// 3421     startIndex = *msg++;
// 3422     bindingListCount = *msg++;
// 3423   }
??CrossCallReturnLabel_125:
        MOV       ?V6,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtBindRsp_0
        INC       R7
// 3424 
// 3425   // Allocate a buffer big enough to handle the list
// 3426   pRsp = (ZDO_MgmtBindRsp_t *)osal_mem_alloc(
// 3427           (sizeof ( ZDO_MgmtBindRsp_t ) + (bindingListCount * sizeof( apsBindingItem_t ))) );
??ZDO_ParseMgmtBindRsp_0:
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,?V6
        MOV       B,#0x15
        LCALL     ?Subroutine145 & 0xFFFF
??CrossCallReturnLabel_252:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V2,R2
        MOV       ?V3,R3
// 3428   if ( pRsp )
        MOV       A,R2
        ORL       A,?V3
        JZ        ??ZDO_ParseMgmtBindRsp_1
// 3429   {
// 3430     uint8 x;
// 3431     apsBindingItem_t *pList = pRsp->list;
        LCALL     ?Subroutine142 & 0xFFFF
// 3432     pRsp->status = status;
??CrossCallReturnLabel_244:
        MOV       A,?V7
        LCALL     ?Subroutine12 & 0xFFFF
// 3433     pRsp->bindingCount = bindingCount;
// 3434     pRsp->startIndex = startIndex;
// 3435     pRsp->bindingListCount = bindingListCount;
??CrossCallReturnLabel_9:
        MOV       A,?V6
        MOVX      @DPTR,A
// 3436 
// 3437     for ( x = 0; x < bindingListCount; x++ )
        MOV       ?V4,#0x0
        SJMP      ??ZDO_ParseMgmtBindRsp_2
// 3438     {
// 3439       osal_cpyExtAddr( pList->srcAddr, msg );
// 3440       msg += Z_EXTADDR_LEN;
// 3441       pList->srcEP = *msg++;
// 3442 
// 3443       // Get the Cluster ID
// 3444 
// 3445       pList->clusterID = BUILD_UINT16( msg[0], msg[1] );
// 3446       msg += 2;
// 3447       pList->dstAddr.addrMode = *msg++;
// 3448       if ( pList->dstAddr.addrMode == Addr64Bit )
// 3449       {
// 3450         osal_cpyExtAddr( pList->dstAddr.addr.extAddr, msg );
// 3451         msg += Z_EXTADDR_LEN;
// 3452         pList->dstEP = *msg++;
// 3453       }
// 3454       else
// 3455       {
// 3456         pList->dstAddr.addr.shortAddr = BUILD_UINT16( msg[0], msg[1] );
??ZDO_ParseMgmtBindRsp_3:
        LCALL     ?Subroutine97 & 0xFFFF
// 3457         msg += 2;
// 3458       }
??CrossCallReturnLabel_157:
        LCALL     ??Subroutine237_0 & 0xFFFF
??CrossCallReturnLabel_556:
        JNC       ??ZDO_ParseMgmtBindRsp_4
        INC       R7
// 3459 
// 3460       pList++;
??ZDO_ParseMgmtBindRsp_4:
        MOV       A,?V0
        ADD       A,#0x15
        MOV       ?V0,A
        JNC       ??ZDO_ParseMgmtBindRsp_5
        INC       ?V1
??ZDO_ParseMgmtBindRsp_5:
        INC       ?V4
??ZDO_ParseMgmtBindRsp_2:
        MOV       A,?V4
        CLR       C
        SUBB      A,?V6
        JNC       ??ZDO_ParseMgmtBindRsp_1
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        LCALL     ?Subroutine41 & 0xFFFF
??CrossCallReturnLabel_615:
        JNC       ??ZDO_ParseMgmtBindRsp_6
        INC       R7
??ZDO_ParseMgmtBindRsp_6:
        LCALL     ?Subroutine10 & 0xFFFF
??CrossCallReturnLabel_5:
        JNC       ??ZDO_ParseMgmtBindRsp_7
        INC       R7
??ZDO_ParseMgmtBindRsp_7:
        LCALL     ?Subroutine136 & 0xFFFF
??CrossCallReturnLabel_232:
        JNZ       ??ZDO_ParseMgmtBindRsp_3
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,?V0
        ADD       A,#0x14
        LCALL     ??Subroutine241_0 & 0xFFFF
// 3461     }
// 3462   }
??CrossCallReturnLabel_591:
        POP       A
          CFI CFA_SP SP+0
        LCALL     ??Subroutine245_0 & 0xFFFF
??CrossCallReturnLabel_613:
        JNC       ??ZDO_ParseMgmtBindRsp_4
        INC       R7
??ZDO_ParseMgmtBindRsp_8:
        SJMP      ??ZDO_ParseMgmtBindRsp_4
// 3463 
// 3464   return ( pRsp );
??ZDO_ParseMgmtBindRsp_1:
        LJMP      ?Subroutine7 & 0xFFFF
// 3465 }
          CFI EndBlock cfiBlock1320

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine142:
          CFI Block cfiCond1321 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_243
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1322 Using cfiCommon0
          CFI (cfiCond1322) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1322) Conditional ??CrossCallReturnLabel_244
          CFI (cfiCond1322) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1322) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1322) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1322) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1322) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1322) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1322) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1322) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1322) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1322) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1322) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1322) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1322) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1322) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1322) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1322) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1322) CFA_SP SP+-2
          CFI (cfiCond1322) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1323 Using cfiCommon1
          CFI (cfiPicker1323) NoFunction
          CFI (cfiPicker1323) Picker
        LCALL     ?Subroutine185 & 0xFFFF
??CrossCallReturnLabel_307:
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1321
          CFI EndBlock cfiCond1322
          CFI EndBlock cfiPicker1323

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine185:
          CFI Block cfiCond1324 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_306
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1325 Using cfiCommon0
          CFI (cfiCond1325) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1325) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_243
          CFI (cfiCond1325) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1325) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1325) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1325) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1325) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1325) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1325) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1325) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1325) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1325) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1325) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1325) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1325) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1325) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1325) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1325) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1325) CFA_SP SP+-4
          CFI (cfiCond1325) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1326 Using cfiCommon0
          CFI (cfiCond1326) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1326) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_244
          CFI (cfiCond1326) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1326) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1326) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1326) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1326) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1326) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1326) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1326) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1326) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1326) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1326) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1326) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1326) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1326) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1326) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1326) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1326) CFA_SP SP+-4
          CFI (cfiCond1326) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1327 Using cfiCommon1
          CFI (cfiPicker1327) NoFunction
          CFI (cfiPicker1327) Picker
        MOV       A,R2
        ADD       A,#0x4
        MOV       ?V0,A
        CLR       A
        ADDC      A,?V3
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond1324
          CFI EndBlock cfiCond1325
          CFI EndBlock cfiCond1326
          CFI EndBlock cfiPicker1327

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine136:
          CFI Block cfiCond1328 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_231
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1329 Using cfiCommon0
          CFI (cfiCond1329) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1329) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond1329) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1329) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1329) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1329) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1329) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1329) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1329) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1329) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1329) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1329) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1329) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1329) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1329) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1329) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1329) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1329) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1329) CFA_SP SP+-2
          CFI (cfiCond1329) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1330 Using cfiCommon1
          CFI (cfiPicker1330) NoFunction
          CFI (cfiPicker1330) Picker
        MOV       A,?V0
        ADD       A,#0xb
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        MOV       A,#0x3
        XRL       A,R0
        RET
          CFI EndBlock cfiCond1328
          CFI EndBlock cfiCond1329
          CFI EndBlock cfiPicker1330

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine97:
          CFI Block cfiCond1331 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1332 Using cfiCommon0
          CFI (cfiCond1332) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1332) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond1332) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1332) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1332) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1332) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1332) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1332) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1332) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1332) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1332) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1332) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1332) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1332) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1332) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1332) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1332) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1332) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1332) CFA_SP SP+-2
          CFI (cfiCond1332) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1333 Using cfiCommon1
          CFI (cfiPicker1333) NoFunction
          CFI (cfiPicker1333) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R4
        MOV       DPL,R2
        MOV       DPH,R3
        RET
          CFI EndBlock cfiCond1331
          CFI EndBlock cfiCond1332
          CFI EndBlock cfiPicker1333

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine74:
          CFI Block cfiCond1334 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_124
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1335 Using cfiCommon0
          CFI (cfiCond1335) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1335) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond1335) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1335) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1335) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1335) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1335) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1335) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1335) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1335) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1335) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1335) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1335) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1335) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1335) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1335) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1335) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1335) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1335) CFA_SP SP+-2
          CFI (cfiCond1335) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1336 Using cfiCommon1
          CFI (cfiPicker1336) NoFunction
          CFI (cfiPicker1336) Picker
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V5,A
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1334
          CFI EndBlock cfiCond1335
          CFI EndBlock cfiPicker1336

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine65:
          CFI Block cfiCond1337 Using cfiCommon0
          CFI Function ZDO_ParseMgmtRtgRsp
          CFI Conditional ??CrossCallReturnLabel_606
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1338 Using cfiCommon0
          CFI (cfiCond1338) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1338) Conditional ??CrossCallReturnLabel_607
          CFI (cfiCond1338) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1338) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1338) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1338) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1338) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1338) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1338) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1338) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1338) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1338) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1338) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1338) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1338) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1338) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1338) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1338) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1338) CFA_SP SP+-2
          CFI (cfiCond1338) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1339 Using cfiCommon0
          CFI (cfiCond1339) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1339) Conditional ??CrossCallReturnLabel_608
          CFI (cfiCond1339) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1339) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1339) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1339) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1339) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1339) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1339) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1339) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1339) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1339) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1339) CFA_SP SP+-2
          CFI (cfiCond1339) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1340 Using cfiCommon1
          CFI (cfiPicker1340) NoFunction
          CFI (cfiPicker1340) Picker
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_304:
          CFI EndBlock cfiCond1337
          CFI EndBlock cfiCond1338
          CFI EndBlock cfiCond1339
          CFI EndBlock cfiPicker1340
        REQUIRE ??Subroutine244_0
        ; // Fall through to label ??Subroutine244_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine244_0:
          CFI Block cfiCond1341 Using cfiCommon0
          CFI Function ZDO_ParseAddrRsp
          CFI Conditional ??CrossCallReturnLabel_609
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1342 Using cfiCommon0
          CFI (cfiCond1342) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1342) Conditional ??CrossCallReturnLabel_606
          CFI (cfiCond1342) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1342) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1342) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1342) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1342) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1342) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1342) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1342) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1342) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1342) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1342) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1342) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1342) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1342) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1342) CFA_SP SP+-2
          CFI (cfiCond1342) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1343 Using cfiCommon0
          CFI (cfiCond1343) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1343) Conditional ??CrossCallReturnLabel_607
          CFI (cfiCond1343) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1343) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1343) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1343) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1343) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1343) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1343) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1343) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1343) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1343) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1343) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1343) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1343) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1343) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1343) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1343) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1343) CFA_SP SP+-2
          CFI (cfiCond1343) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1344 Using cfiCommon0
          CFI (cfiCond1344) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1344) Conditional ??CrossCallReturnLabel_608
          CFI (cfiCond1344) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1344) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1344) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1344) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1344) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1344) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1344) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1344) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1344) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1344) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1344) CFA_SP SP+-2
          CFI (cfiCond1344) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1345 Using cfiCommon1
          CFI (cfiPicker1345) NoFunction
          CFI (cfiPicker1345) Picker
        LCALL     ?Subroutine173 & 0xFFFF
??CrossCallReturnLabel_611:
        RET
          CFI EndBlock cfiCond1341
          CFI EndBlock cfiCond1342
          CFI EndBlock cfiCond1343
          CFI EndBlock cfiCond1344
          CFI EndBlock cfiPicker1345

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine182:
          CFI Block cfiCond1346 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_204
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1347 Using cfiCommon0
          CFI (cfiCond1347) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond1347) Conditional ??CrossCallReturnLabel_305, ??CrossCallReturnLabel_205
          CFI (cfiCond1347) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1347) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1347) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1347) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1347) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1347) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1347) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1347) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1347) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1347) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1347) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1347) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1347) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1347) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1347) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1347) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1347) CFA_SP SP+-4
          CFI (cfiCond1347) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1348 Using cfiCommon0
          CFI (cfiCond1348) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1348) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_110
          CFI (cfiCond1348) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1348) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1348) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1348) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1348) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1348) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1348) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1348) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1348) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1348) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1348) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1348) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1348) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1348) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1348) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1348) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1348) CFA_SP SP+-4
          CFI (cfiCond1348) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1349 Using cfiCommon0
          CFI (cfiCond1349) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1349) Conditional ??CrossCallReturnLabel_303, ??CrossCallReturnLabel_111
          CFI (cfiCond1349) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1349) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1349) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1349) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1349) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1349) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1349) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1349) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1349) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1349) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1349) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1349) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1349) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1349) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1349) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1349) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1349) CFA_SP SP+-4
          CFI (cfiCond1349) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1350 Using cfiCommon0
          CFI (cfiCond1350) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1350) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_606
          CFI (cfiCond1350) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1350) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1350) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1350) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1350) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1350) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1350) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1350) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1350) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1350) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1350) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1350) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1350) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1350) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1350) CFA_SP SP+-4
          CFI (cfiCond1350) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1351 Using cfiCommon0
          CFI (cfiCond1351) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1351) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_607
          CFI (cfiCond1351) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1351) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1351) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1351) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1351) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1351) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1351) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1351) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1351) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1351) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1351) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1351) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1351) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1351) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1351) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1351) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1351) CFA_SP SP+-4
          CFI (cfiCond1351) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1352 Using cfiCommon0
          CFI (cfiCond1352) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1352) Conditional ??CrossCallReturnLabel_304, ??CrossCallReturnLabel_608
          CFI (cfiCond1352) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1352) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1352) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1352) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1352) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1352) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1352) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1352) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1352) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1352) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1352) CFA_SP SP+-4
          CFI (cfiCond1352) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1353 Using cfiCommon0
          CFI (cfiCond1353) Function ZDO_ParseEndDeviceBindReq
          CFI (cfiCond1353) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_50
          CFI (cfiCond1353) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1353) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1353) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1353) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1353) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1353) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1353) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1353) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1353) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1353) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1353) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1353) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1353) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1353) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1353) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1353) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1353) CFA_SP SP+-4
          CFI (cfiCond1353) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1354 Using cfiCommon0
          CFI (cfiCond1354) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1354) Conditional ??CrossCallReturnLabel_302, ??CrossCallReturnLabel_51
          CFI (cfiCond1354) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1354) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1354) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1354) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1354) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1354) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1354) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1354) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1354) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1354) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1354) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1354) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1354) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1354) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1354) CFA_SP SP+-4
          CFI (cfiCond1354) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1355 Using cfiCommon1
          CFI (cfiPicker1355) NoFunction
          CFI (cfiPicker1355) Picker
        MOV       A,R2
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1346
          CFI EndBlock cfiCond1347
          CFI EndBlock cfiCond1348
          CFI EndBlock cfiCond1349
          CFI EndBlock cfiCond1350
          CFI EndBlock cfiCond1351
          CFI EndBlock cfiCond1352
          CFI EndBlock cfiCond1353
          CFI EndBlock cfiCond1354
          CFI EndBlock cfiPicker1355

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine173:
          CFI Block cfiCond1356 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_110
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1357 Using cfiCommon0
          CFI (cfiCond1357) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1357) Conditional ??CrossCallReturnLabel_610, ??CrossCallReturnLabel_111
          CFI (cfiCond1357) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1357) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1357) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1357) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1357) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1357) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1357) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1357) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1357) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1357) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1357) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1357) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1357) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1357) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1357) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1357) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1357) CFA_SP SP+-4
          CFI (cfiCond1357) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1358 Using cfiCommon0
          CFI (cfiCond1358) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1358) Conditional ??CrossCallReturnLabel_611, ??CrossCallReturnLabel_606
          CFI (cfiCond1358) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1358) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1358) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1358) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1358) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1358) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1358) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1358) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1358) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1358) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1358) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1358) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1358) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1358) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1358) CFA_SP SP+-4
          CFI (cfiCond1358) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1359 Using cfiCommon0
          CFI (cfiCond1359) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1359) Conditional ??CrossCallReturnLabel_611, ??CrossCallReturnLabel_607
          CFI (cfiCond1359) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1359) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1359) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1359) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1359) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1359) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1359) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1359) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1359) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1359) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1359) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1359) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1359) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1359) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1359) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1359) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1359) CFA_SP SP+-4
          CFI (cfiCond1359) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1360 Using cfiCommon0
          CFI (cfiCond1360) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1360) Conditional ??CrossCallReturnLabel_611, ??CrossCallReturnLabel_608
          CFI (cfiCond1360) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1360) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1360) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1360) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1360) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1360) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1360) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1360) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1360) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1360) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1360) CFA_SP SP+-4
          CFI (cfiCond1360) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1361 Using cfiCommon0
          CFI (cfiCond1361) Function ZDO_ParseAddrRsp
          CFI (cfiCond1361) Conditional ??CrossCallReturnLabel_611, ??CrossCallReturnLabel_609
          CFI (cfiCond1361) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1361) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1361) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1361) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1361) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1361) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1361) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1361) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1361) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1361) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1361) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1361) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1361) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1361) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1361) CFA_SP SP+-4
          CFI (cfiCond1361) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1362 Using cfiCommon1
          CFI (cfiPicker1362) NoFunction
          CFI (cfiPicker1362) Picker
        MOVX      A,@DPTR
        MOV       R6,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R7,A
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1356
          CFI EndBlock cfiCond1357
          CFI EndBlock cfiCond1358
          CFI EndBlock cfiCond1359
          CFI EndBlock cfiCond1360
          CFI EndBlock cfiCond1361
          CFI EndBlock cfiPicker1362

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine41:
          CFI Block cfiCond1363 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_614
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1364 Using cfiCommon0
          CFI (cfiCond1364) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1364) Conditional ??CrossCallReturnLabel_615
          CFI (cfiCond1364) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1364) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1364) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1364) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1364) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1364) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1364) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1364) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1364) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1364) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1364) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1364) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1364) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1364) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1364) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1364) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1364) CFA_SP SP+-2
          CFI (cfiCond1364) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1365 Using cfiCommon1
          CFI (cfiPicker1365) NoFunction
          CFI (cfiPicker1365) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_289:
        INC       DPTR
        INC       DPTR
          CFI EndBlock cfiCond1363
          CFI EndBlock cfiCond1364
          CFI EndBlock cfiPicker1365
        REQUIRE ??Subroutine245_0
        ; // Fall through to label ??Subroutine245_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine245_0:
          CFI Block cfiCond1366 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_612
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1367 Using cfiCommon0
          CFI (cfiCond1367) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1367) Conditional ??CrossCallReturnLabel_613
          CFI (cfiCond1367) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1367) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1367) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1367) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1367) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1367) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1367) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1367) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1367) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1367) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1367) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1367) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1367) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1367) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1367) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1367) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1367) CFA_SP SP+-2
          CFI (cfiCond1367) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1368 Using cfiCommon0
          CFI (cfiCond1368) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1368) Conditional ??CrossCallReturnLabel_614
          CFI (cfiCond1368) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1368) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1368) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1368) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1368) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1368) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1368) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1368) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1368) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1368) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1368) CFA_SP SP+-2
          CFI (cfiCond1368) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1369 Using cfiCommon0
          CFI (cfiCond1369) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1369) Conditional ??CrossCallReturnLabel_615
          CFI (cfiCond1369) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1369) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1369) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1369) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1369) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1369) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1369) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1369) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1369) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1369) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1369) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1369) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1369) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1369) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1369) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1369) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1369) CFA_SP SP+-2
          CFI (cfiCond1369) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1370 Using cfiCommon1
          CFI (cfiPicker1370) NoFunction
          CFI (cfiPicker1370) Picker
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x9
        MOV       R6,A
        RET
          CFI EndBlock cfiCond1366
          CFI EndBlock cfiCond1367
          CFI EndBlock cfiCond1368
          CFI EndBlock cfiCond1369
          CFI EndBlock cfiPicker1370

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine12:
          CFI Block cfiCond1371 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1372 Using cfiCommon0
          CFI (cfiCond1372) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1372) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond1372) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1372) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1372) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1372) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1372) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1372) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1372) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1372) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1372) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1372) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1372) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1372) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1372) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1372) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1372) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1372) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1372) CFA_SP SP+-2
          CFI (cfiCond1372) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1373 Using cfiCommon1
          CFI (cfiPicker1373) NoFunction
          CFI (cfiPicker1373) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V4
        LCALL     ?Subroutine158 & 0xFFFF
??CrossCallReturnLabel_548:
        INC       DPTR
        MOV       A,?V5
        LCALL     ?Subroutine157 & 0xFFFF
??CrossCallReturnLabel_270:
        RET
          CFI EndBlock cfiCond1371
          CFI EndBlock cfiCond1372
          CFI EndBlock cfiPicker1373

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine157:
          CFI Block cfiCond1374 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_15
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1375 Using cfiCommon0
          CFI (cfiCond1375) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1375) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_16
          CFI (cfiCond1375) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1375) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1375) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1375) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1375) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1375) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1375) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1375) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1375) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1375) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1375) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1375) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1375) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1375) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1375) CFA_SP SP+-4
          CFI (cfiCond1375) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1376 Using cfiCommon0
          CFI (cfiCond1376) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1376) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_8
          CFI (cfiCond1376) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1376) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1376) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1376) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1376) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1376) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1376) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1376) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1376) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1376) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1376) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1376) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1376) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1376) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1376) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1376) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1376) CFA_SP SP+-4
          CFI (cfiCond1376) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1377 Using cfiCommon0
          CFI (cfiCond1377) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1377) Conditional ??CrossCallReturnLabel_270, ??CrossCallReturnLabel_9
          CFI (cfiCond1377) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1377) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1377) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1377) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1377) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1377) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1377) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1377) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1377) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1377) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1377) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1377) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1377) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1377) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1377) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1377) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1377) CFA_SP SP+-4
          CFI (cfiCond1377) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1378 Using cfiCommon1
          CFI (cfiPicker1378) NoFunction
          CFI (cfiPicker1378) Picker
        LCALL     ?Subroutine187 & 0xFFFF
??CrossCallReturnLabel_553:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1374
          CFI EndBlock cfiCond1375
          CFI EndBlock cfiCond1376
          CFI EndBlock cfiCond1377
          CFI EndBlock cfiPicker1378

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine10:
          CFI Block cfiCond1379 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1380 Using cfiCommon0
          CFI (cfiCond1380) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1380) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond1380) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1380) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1380) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1380) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1380) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1380) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1380) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1380) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1380) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1380) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1380) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1380) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1380) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1380) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1380) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1380) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1380) CFA_SP SP+-2
          CFI (cfiCond1380) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1381 Using cfiCommon1
          CFI (cfiPicker1381) NoFunction
          CFI (cfiPicker1381) Picker
        LCALL     ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_279:
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_628:
        MOV       R0,A
        MOV       A,?V0
        LCALL     ??Subroutine246_0 & 0xFFFF
??CrossCallReturnLabel_640:
        ADDC      A,?V1
        MOV       DPH,A
        MOV       A,R0
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x3
        MOV       R6,A
        RET
          CFI EndBlock cfiCond1379
          CFI EndBlock cfiCond1380
          CFI EndBlock cfiPicker1381

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine183:
          CFI Block cfiCond1382 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_201
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1383 Using cfiCommon0
          CFI (cfiCond1383) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1383) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_202
          CFI (cfiCond1383) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1383) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1383) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1383) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1383) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1383) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1383) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1383) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1383) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1383) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1383) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1383) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1383) CFA_SP SP+-4
          CFI (cfiCond1383) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1384 Using cfiCommon0
          CFI (cfiCond1384) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1384) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_203
          CFI (cfiCond1384) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1384) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1384) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1384) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1384) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1384) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1384) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1384) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1384) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1384) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1384) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1384) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1384) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1384) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1384) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1384) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1384) CFA_SP SP+-4
          CFI (cfiCond1384) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1385 Using cfiCommon0
          CFI (cfiCond1385) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1385) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_2
          CFI (cfiCond1385) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1385) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1385) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1385) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1385) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1385) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1385) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1385) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1385) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1385) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1385) CFA_SP SP+-4
          CFI (cfiCond1385) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1386 Using cfiCommon0
          CFI (cfiCond1386) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1386) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_3
          CFI (cfiCond1386) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1386) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1386) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1386) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1386) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1386) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1386) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1386) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1386) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1386) CFA_SP SP+-4
          CFI (cfiCond1386) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1387 Using cfiCommon0
          CFI (cfiCond1387) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1387) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_634
          CFI (cfiCond1387) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1387) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1387) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1387) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1387) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1387) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1387) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1387) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1387) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1387) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1387) CFA_SP SP+-4
          CFI (cfiCond1387) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1388 Using cfiCommon0
          CFI (cfiCond1388) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1388) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_635
          CFI (cfiCond1388) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1388) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1388) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1388) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1388) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1388) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1388) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1388) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1388) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1388) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1388) CFA_SP SP+-4
          CFI (cfiCond1388) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1389 Using cfiCommon0
          CFI (cfiCond1389) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1389) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_636
          CFI (cfiCond1389) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1389) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1389) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1389) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1389) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1389) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1389) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1389) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1389) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1389) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1389) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1389) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1389) CFA_SP SP+-4
          CFI (cfiCond1389) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1390 Using cfiCommon0
          CFI (cfiCond1390) Function ZDO_ParseEPListRsp
          CFI (cfiCond1390) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_637
          CFI (cfiCond1390) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1390) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1390) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1390) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1390) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1390) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1390) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1390) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1390) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1390) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1390) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1390) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1390) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1390) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1390) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1390) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1390) CFA_SP SP+-4
          CFI (cfiCond1390) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1391 Using cfiCommon0
          CFI (cfiCond1391) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1391) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_638
          CFI (cfiCond1391) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1391) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1391) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1391) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1391) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1391) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1391) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1391) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1391) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1391) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1391) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1391) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1391) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1391) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1391) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1391) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1391) CFA_SP SP+-4
          CFI (cfiCond1391) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1392 Using cfiCommon0
          CFI (cfiCond1392) Function ZDO_ParseParentAnnce
          CFI (cfiCond1392) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_639
          CFI (cfiCond1392) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1392) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1392) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1392) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1392) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1392) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1392) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1392) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1392) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1392) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1392) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1392) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1392) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1392) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1392) CFA_SP SP+-4
          CFI (cfiCond1392) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1393 Using cfiCommon1
          CFI (cfiPicker1393) NoFunction
          CFI (cfiPicker1393) Picker
        MOV       A,R2
          CFI EndBlock cfiCond1382
          CFI EndBlock cfiCond1383
          CFI EndBlock cfiCond1384
          CFI EndBlock cfiCond1385
          CFI EndBlock cfiCond1386
          CFI EndBlock cfiCond1387
          CFI EndBlock cfiCond1388
          CFI EndBlock cfiCond1389
          CFI EndBlock cfiCond1390
          CFI EndBlock cfiCond1391
          CFI EndBlock cfiCond1392
          CFI EndBlock cfiPicker1393
        REQUIRE ??Subroutine246_0
        ; // Fall through to label ??Subroutine246_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine246_0:
          CFI Block cfiCond1394 Using cfiCommon0
          CFI Function ZDO_ProcessNodeDescReq
          CFI Conditional ??CrossCallReturnLabel_641, ??CrossCallReturnLabel_87
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1395 Using cfiCommon0
          CFI (cfiCond1395) Function ZDO_ProcessPowerDescReq
          CFI (cfiCond1395) Conditional ??CrossCallReturnLabel_641, ??CrossCallReturnLabel_88
          CFI (cfiCond1395) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1395) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1395) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1395) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1395) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1395) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1395) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1395) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1395) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1395) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1395) CFA_SP SP+-4
          CFI (cfiCond1395) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1396 Using cfiCommon0
          CFI (cfiCond1396) Function ZDO_ProcessActiveEPReq
          CFI (cfiCond1396) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_331
          CFI (cfiCond1396) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1396) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1396) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1396) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1396) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1396) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1396) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1396) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1396) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1396) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1396) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1396) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1396) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1396) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1396) CFA_SP SP+-4
          CFI (cfiCond1396) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1397 Using cfiCommon0
          CFI (cfiCond1397) Function ZDO_ProcessMgmtRtgReq
          CFI (cfiCond1397) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_332
          CFI (cfiCond1397) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1397) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1397) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1397) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1397) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1397) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1397) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1397) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1397) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1397) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1397) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1397) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1397) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1397) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1397) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1397) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1397) CFA_SP SP+-4
          CFI (cfiCond1397) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1398 Using cfiCommon0
          CFI (cfiCond1398) Function ZDO_ProcessUserDescSet
          CFI (cfiCond1398) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_333
          CFI (cfiCond1398) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1398) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1398) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1398) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1398) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1398) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1398) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1398) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1398) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1398) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1398) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1398) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1398) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1398) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1398) CFA_SP SP+-4
          CFI (cfiCond1398) CFA_XSP16 add(XSP16, 35)
          CFI Block cfiCond1399 Using cfiCommon0
          CFI (cfiCond1399) Function ZDO_ProcessSimpleDescReq
          CFI (cfiCond1399) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_328
          CFI (cfiCond1399) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1399) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1399) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1399) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1399) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1399) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1399) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1399) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1399) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1399) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1399) CFA_SP SP+-4
          CFI (cfiCond1399) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1400 Using cfiCommon0
          CFI (cfiCond1400) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1400) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_329
          CFI (cfiCond1400) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1400) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1400) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1400) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1400) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1400) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1400) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1400) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1400) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1400) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1400) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1400) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1400) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1400) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1400) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1400) CFA_SP SP+-4
          CFI (cfiCond1400) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1401 Using cfiCommon0
          CFI (cfiCond1401) Function ZDO_ProcessMgmtDirectJoinReq
          CFI (cfiCond1401) Conditional ??CrossCallReturnLabel_644, ??CrossCallReturnLabel_330
          CFI (cfiCond1401) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1401) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1401) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1401) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1401) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1401) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1401) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1401) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1401) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1401) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1401) CFA_SP SP+-4
          CFI (cfiCond1401) CFA_XSP16 add(XSP16, 11)
          CFI Block cfiCond1402 Using cfiCommon0
          CFI (cfiCond1402) Function ZDO_ProcessMgmtLqiReq
          CFI (cfiCond1402) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_99
          CFI (cfiCond1402) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1402) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1402) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1402) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1402) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1402) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1402) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1402) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1402) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1402) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1402) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1402) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1402) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1402) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1402) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1402) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1402) CFA_SP SP+-4
          CFI (cfiCond1402) CFA_XSP16 add(XSP16, 58)
          CFI Block cfiCond1403 Using cfiCommon0
          CFI (cfiCond1403) Function ZDO_ProcessMgmtBindReq
          CFI (cfiCond1403) Conditional ??CrossCallReturnLabel_642, ??CrossCallReturnLabel_100
          CFI (cfiCond1403) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1403) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1403) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1403) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1403) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1403) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1403) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1403) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1403) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1403) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1403) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1403) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1403) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1403) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1403) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1403) CFA_SP SP+-4
          CFI (cfiCond1403) CFA_XSP16 add(XSP16, 19)
          CFI Block cfiCond1404 Using cfiCommon0
          CFI (cfiCond1404) Function ZDO_ProcessServerDiscReq
          CFI (cfiCond1404) Conditional ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_208
          CFI (cfiCond1404) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1404) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1404) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1404) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1404) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1404) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1404) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1404) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1404) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1404) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1404) CFA_SP SP+-4
          CFI (cfiCond1404) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1405 Using cfiCommon0
          CFI (cfiCond1405) Function ZDO_ProcessMgmtPermitJoinReq
          CFI (cfiCond1405) Conditional ??CrossCallReturnLabel_643, ??CrossCallReturnLabel_209
          CFI (cfiCond1405) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1405) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1405) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1405) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1405) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1405) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1405) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1405) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1405) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1405) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1405) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1405) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1405) CFA_SP SP+-4
          CFI (cfiCond1405) CFA_XSP16 add(XSP16, 13)
          CFI Block cfiCond1406 Using cfiCommon0
          CFI (cfiCond1406) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1406) Conditional ??CrossCallReturnLabel_640, ??CrossCallReturnLabel_4
          CFI (cfiCond1406) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1406) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1406) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1406) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1406) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1406) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1406) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1406) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1406) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1406) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1406) CFA_SP SP+-4
          CFI (cfiCond1406) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1407 Using cfiCommon0
          CFI (cfiCond1407) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1407) Conditional ??CrossCallReturnLabel_640, ??CrossCallReturnLabel_5
          CFI (cfiCond1407) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1407) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1407) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1407) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1407) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1407) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1407) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1407) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1407) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1407) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1407) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1407) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1407) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1407) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1407) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1407) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1407) CFA_SP SP+-4
          CFI (cfiCond1407) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1408 Using cfiCommon0
          CFI (cfiCond1408) Function ZDO_ProcessMgmtNwkDiscReq
          CFI (cfiCond1408) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_201
          CFI (cfiCond1408) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1408) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1408) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1408) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1408) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1408) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1408) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1408) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1408) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1408) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1408) CFA_SP SP+-4
          CFI (cfiCond1408) CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1409 Using cfiCommon0
          CFI (cfiCond1409) Function ZDO_ProcessMgmtLeaveReq
          CFI (cfiCond1409) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_202
          CFI (cfiCond1409) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1409) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1409) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1409) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1409) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1409) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1409) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1409) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1409) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1409) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1409) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1409) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1409) CFA_SP SP+-4
          CFI (cfiCond1409) CFA_XSP16 add(XSP16, 18)
          CFI Block cfiCond1410 Using cfiCommon0
          CFI (cfiCond1410) Function ZDO_ProcessUserDescReq
          CFI (cfiCond1410) Conditional ??CrossCallReturnLabel_646, ??CrossCallReturnLabel_203
          CFI (cfiCond1410) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1410) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1410) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1410) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1410) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1410) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1410) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1410) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1410) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1410) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1410) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1410) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1410) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1410) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1410) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1410) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1410) CFA_SP SP+-4
          CFI (cfiCond1410) CFA_XSP16 add(XSP16, 33)
          CFI Block cfiCond1411 Using cfiCommon0
          CFI (cfiCond1411) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1411) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_2
          CFI (cfiCond1411) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1411) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1411) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1411) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1411) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1411) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1411) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1411) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1411) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1411) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1411) CFA_SP SP+-4
          CFI (cfiCond1411) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1412 Using cfiCommon0
          CFI (cfiCond1412) Function ZDO_ParseSimpleDescRsp
          CFI (cfiCond1412) Conditional ??CrossCallReturnLabel_645, ??CrossCallReturnLabel_3
          CFI (cfiCond1412) R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1412) VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1412) V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1412) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1412) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1412) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1412) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1412) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1412) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1412) CFA_SP SP+-4
          CFI (cfiCond1412) CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1413 Using cfiCommon0
          CFI (cfiCond1413) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1413) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_634
          CFI (cfiCond1413) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1413) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1413) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1413) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1413) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1413) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1413) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1413) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1413) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1413) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1413) CFA_SP SP+-4
          CFI (cfiCond1413) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1414 Using cfiCommon0
          CFI (cfiCond1414) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1414) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_635
          CFI (cfiCond1414) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1414) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1414) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1414) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1414) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1414) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1414) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1414) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1414) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1414) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1414) CFA_SP SP+-4
          CFI (cfiCond1414) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1415 Using cfiCommon0
          CFI (cfiCond1415) Function ZDO_ParsePowerDescRsp
          CFI (cfiCond1415) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_636
          CFI (cfiCond1415) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1415) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1415) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1415) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1415) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1415) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1415) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1415) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1415) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1415) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1415) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1415) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1415) CFA_SP SP+-4
          CFI (cfiCond1415) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1416 Using cfiCommon0
          CFI (cfiCond1416) Function ZDO_ParseEPListRsp
          CFI (cfiCond1416) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_637
          CFI (cfiCond1416) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1416) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1416) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1416) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1416) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1416) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1416) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1416) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1416) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1416) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1416) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1416) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1416) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1416) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1416) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1416) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1416) CFA_SP SP+-4
          CFI (cfiCond1416) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1417 Using cfiCommon0
          CFI (cfiCond1417) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1417) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_638
          CFI (cfiCond1417) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1417) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1417) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1417) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1417) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1417) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1417) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1417) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1417) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1417) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1417) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1417) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1417) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1417) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1417) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1417) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1417) CFA_SP SP+-4
          CFI (cfiCond1417) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1418 Using cfiCommon0
          CFI (cfiCond1418) Function ZDO_ParseParentAnnce
          CFI (cfiCond1418) Conditional ??CrossCallReturnLabel_647, ??CrossCallReturnLabel_639
          CFI (cfiCond1418) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1418) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1418) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1418) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1418) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1418) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1418) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1418) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1418) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1418) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1418) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1418) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1418) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1418) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1418) CFA_SP SP+-4
          CFI (cfiCond1418) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiPicker1419 Using cfiCommon1
          CFI (cfiPicker1419) NoFunction
          CFI (cfiPicker1419) Picker
        ADD       A,#0x13
        MOV       DPL,A
        CLR       A
        RET
          CFI EndBlock cfiCond1394
          CFI EndBlock cfiCond1395
          CFI EndBlock cfiCond1396
          CFI EndBlock cfiCond1397
          CFI EndBlock cfiCond1398
          CFI EndBlock cfiCond1399
          CFI EndBlock cfiCond1400
          CFI EndBlock cfiCond1401
          CFI EndBlock cfiCond1402
          CFI EndBlock cfiCond1403
          CFI EndBlock cfiCond1404
          CFI EndBlock cfiCond1405
          CFI EndBlock cfiCond1406
          CFI EndBlock cfiCond1407
          CFI EndBlock cfiCond1408
          CFI EndBlock cfiCond1409
          CFI EndBlock cfiCond1410
          CFI EndBlock cfiCond1411
          CFI EndBlock cfiCond1412
          CFI EndBlock cfiCond1413
          CFI EndBlock cfiCond1414
          CFI EndBlock cfiCond1415
          CFI EndBlock cfiCond1416
          CFI EndBlock cfiCond1417
          CFI EndBlock cfiCond1418
          CFI EndBlock cfiPicker1419
// 3466 
// 3467 /*********************************************************************
// 3468  * @fn          ZDO_ParseUserDescRsp
// 3469  *
// 3470  * @brief       This function parses the incoming User
// 3471  *              Descriptor Response.
// 3472  *
// 3473  * @param       inMsg - incoming response message
// 3474  *
// 3475  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3476  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3477  *          by the calling function [osal_mem_free()].
// 3478  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3479 ZDO_UserDescRsp_t *ZDO_ParseUserDescRsp( zdoIncomingMsg_t *inMsg )
ZDO_ParseUserDescRsp:
          CFI Block cfiBlock1420 Using cfiCommon0
          CFI Function ZDO_ParseUserDescRsp
        CODE
// 3480 {
        FUNCALL ZDO_ParseUserDescRsp, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseUserDescRsp, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 19, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 19, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
// 3481   ZDO_UserDescRsp_t *pRsp;
// 3482   uint8 *msg;
// 3483   uint8 descLen = 0;
        MOV       ?V2,#0x0
// 3484 
// 3485   msg = inMsg->asdu;
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_638:
        LCALL     ?Subroutine83 & 0xFFFF
// 3486 
// 3487   if ( msg[0] == ZSuccess )
??CrossCallReturnLabel_139:
        JNZ       ??ZDO_ParseUserDescRsp_0
// 3488   {
// 3489     descLen = msg[3];
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V2,A
// 3490   }
// 3491 
// 3492   pRsp = (ZDO_UserDescRsp_t *)osal_mem_alloc( sizeof ( ZDO_UserDescRsp_t ) + descLen );
??ZDO_ParseUserDescRsp_0:
        MOV       R6,?V2
        ; Setup parameters for call to function osal_mem_alloc
        MOV       A,R6
        LCALL     ?Subroutine186 & 0xFFFF
??CrossCallReturnLabel_311:
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V6,R2
        MOV       ?V7,R3
// 3493   if ( pRsp )
        MOV       A,R2
        ORL       A,?V7
        JZ        ??ZDO_ParseUserDescRsp_1
// 3494   {
// 3495     pRsp->status = msg[0];
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ??Subroutine238_0 & 0xFFFF
??CrossCallReturnLabel_566:
        LCALL     ?Subroutine153 & 0xFFFF
// 3496     pRsp->nwkAddr = BUILD_UINT16( msg[1], msg[2] );
??CrossCallReturnLabel_263:
        LCALL     ?Subroutine96 & 0xFFFF
??CrossCallReturnLabel_155:
        LCALL     ??Subroutine205_0 & 0xFFFF
??CrossCallReturnLabel_334:
        MOV       DPL,?V6
        MOV       DPH,R3
        INC       DPTR
        LCALL     ??Subroutine216_0 & 0xFFFF
// 3497     pRsp->length = descLen;
??CrossCallReturnLabel_406:
        MOV       DPL,?V6
        MOV       DPH,R3
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,R6
        MOVX      @DPTR,A
// 3498     if ( descLen )
        JZ        ??ZDO_ParseUserDescRsp_1
// 3499     {
// 3500       osal_memcpy( pRsp->desc, &msg[4], descLen );
        ; Setup parameters for call to function osal_memcpy
        MOV       A,?V0
        ADD       A,#0x4
        MOV       ?V0,A
        JNC       ??ZDO_ParseUserDescRsp_2
        INC       ?V1
??ZDO_ParseUserDescRsp_2:
        MOV       ?V2,R0
        MOV       R0,#?V0
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 19)
        MOV       A,R6
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,?V6
        LCALL     ?Subroutine186 & 0xFFFF
// 3501     }
// 3502   }
??CrossCallReturnLabel_312:
        ADDC      A,?V7
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 16)
// 3503 
// 3504   return ( pRsp );
??ZDO_ParseUserDescRsp_1:
        MOV       R2,?V6
        MOV       R3,?V7
        LJMP      ??Subroutine201_0 & 0xFFFF
// 3505 }
          CFI EndBlock cfiBlock1420

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine96:
          CFI Block cfiCond1421 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1422 Using cfiCommon0
          CFI (cfiCond1422) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1422) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond1422) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1422) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1422) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1422) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1422) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1422) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1422) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1422) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1422) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1422) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1422) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1422) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1422) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1422) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1422) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1422) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1422) CFA_SP SP+-2
          CFI (cfiCond1422) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1423 Using cfiCommon1
          CFI (cfiPicker1423) NoFunction
          CFI (cfiPicker1423) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1421
          CFI EndBlock cfiCond1422
          CFI EndBlock cfiPicker1423

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine83:
          CFI Block cfiCond1424 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_138
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1425 Using cfiCommon0
          CFI (cfiCond1425) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1425) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond1425) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1425) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1425) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1425) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1425) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1425) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1425) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1425) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1425) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1425) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1425) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1425) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1425) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1425) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1425) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1425) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1425) CFA_SP SP+-2
          CFI (cfiCond1425) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1426 Using cfiCommon1
          CFI (cfiPicker1426) NoFunction
          CFI (cfiPicker1426) Picker
        MOV       DPH,A
        LCALL     ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_530:
        MOV       DPL,?V0
        MOV       DPH,A
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1424
          CFI EndBlock cfiCond1425
          CFI EndBlock cfiPicker1426

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine170:
          CFI Block cfiCond1427 Using cfiCommon0
          CFI Function ZDO_CopyMatchInfo
          CFI Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_527
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1428 Using cfiCommon0
          CFI (cfiCond1428) Function ZDO_CopyMatchInfo
          CFI (cfiCond1428) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_528
          CFI (cfiCond1428) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1428) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1428) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1428) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1428) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1428) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1428) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1428) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1428) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1428) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1428) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1428) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1428) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1428) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1428) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1428) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1428) CFA_SP SP+-4
          CFI (cfiCond1428) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1429 Using cfiCommon0
          CFI (cfiCond1429) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1429) Conditional ??CrossCallReturnLabel_531, ??CrossCallReturnLabel_526
          CFI (cfiCond1429) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1429) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1429) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1429) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1429) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1429) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1429) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1429) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1429) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1429) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1429) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1429) CFA_SP SP+-4
          CFI (cfiCond1429) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond1430 Using cfiCommon0
          CFI (cfiCond1430) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1430) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_138
          CFI (cfiCond1430) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1430) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1430) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1430) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1430) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1430) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1430) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1430) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1430) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1430) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1430) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1430) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1430) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1430) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1430) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1430) CFA_SP SP+-4
          CFI (cfiCond1430) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1431 Using cfiCommon0
          CFI (cfiCond1431) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1431) Conditional ??CrossCallReturnLabel_530, ??CrossCallReturnLabel_139
          CFI (cfiCond1431) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1431) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1431) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1431) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1431) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1431) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1431) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1431) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1431) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1431) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1431) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1431) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1431) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1431) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1431) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1431) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1431) CFA_SP SP+-4
          CFI (cfiCond1431) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1432 Using cfiCommon0
          CFI (cfiCond1432) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1432) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_103
          CFI (cfiCond1432) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1432) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1432) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1432) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1432) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1432) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1432) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1432) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1432) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1432) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1432) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1432) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1432) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1432) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1432) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1432) CFA_SP SP+-4
          CFI (cfiCond1432) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1433 Using cfiCommon0
          CFI (cfiCond1433) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1433) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_104
          CFI (cfiCond1433) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1433) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1433) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1433) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1433) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1433) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1433) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1433) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1433) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1433) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1433) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1433) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1433) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1433) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1433) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1433) CFA_SP SP+-4
          CFI (cfiCond1433) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1434 Using cfiCommon0
          CFI (cfiCond1434) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1434) Conditional ??CrossCallReturnLabel_529, ??CrossCallReturnLabel_105
          CFI (cfiCond1434) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1434) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1434) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1434) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1434) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1434) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1434) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1434) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1434) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1434) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1434) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1434) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1434) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1434) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1434) CFA_SP SP+-4
          CFI (cfiCond1434) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1435 Using cfiCommon1
          CFI (cfiPicker1435) NoFunction
          CFI (cfiPicker1435) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       ?V1,A
        RET
          CFI EndBlock cfiCond1427
          CFI EndBlock cfiCond1428
          CFI EndBlock cfiCond1429
          CFI EndBlock cfiCond1430
          CFI EndBlock cfiCond1431
          CFI EndBlock cfiCond1432
          CFI EndBlock cfiCond1433
          CFI EndBlock cfiCond1434
          CFI EndBlock cfiPicker1435
// 3506 
// 3507 /*********************************************************************
// 3508  * @fn          ZDO_ParseSimpleDescBuf
// 3509  *
// 3510  * @brief       Parse a byte sequence representation of a Simple Descriptor.
// 3511  *
// 3512  * @param       buf  - pointer to a byte array representing a Simple Desc.
// 3513  * @param       desc - SimpleDescriptionFormat_t *
// 3514  *
// 3515  *              This routine allocates storage for the cluster IDs because
// 3516  *              they are 16-bit and need to be aligned to be properly processed.
// 3517  *              This routine returns non-zero if an allocation fails.
// 3518  *
// 3519  *              NOTE: This means that the caller or user of the input structure
// 3520  *                    is responsible for freeing the memory
// 3521  *
// 3522  * @return      0: success
// 3523  *              1: failure due to malloc failure.
// 3524  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3525 uint8 ZDO_ParseSimpleDescBuf( uint8 *buf, SimpleDescriptionFormat_t *desc )
ZDO_ParseSimpleDescBuf:
          CFI Block cfiBlock1436 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
        CODE
// 3526 {
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseSimpleDescBuf, osal_mem_free
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 16, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 16, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V4
        REQUIRE ?V5
        REQUIRE ?V6
        REQUIRE ?V7
        MOV       A,#-0x10
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 16)
        ; Saved register size: 16
        ; Auto size: 0
        MOV       A,R2
        MOV       R6,A
        MOV       A,R3
        MOV       R7,A
        MOV       ?V0,R4
        MOV       ?V1,R5
// 3527   uint8 num, i;
// 3528 
// 3529   desc->EndPoint = *buf++;
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine247_0 & 0xFFFF
??CrossCallReturnLabel_617:
        LCALL     ?Subroutine17 & 0xFFFF
// 3530   desc->AppProfId = BUILD_UINT16( buf[0], buf[1] );
??CrossCallReturnLabel_19:
        MOVX      A,@DPTR
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_626:
        LCALL     ?Subroutine15 & 0xFFFF
// 3531   buf += 2;
??CrossCallReturnLabel_555:
        JNC       ??ZDO_ParseSimpleDescBuf_0
        INC       R7
// 3532   desc->AppDeviceId = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_0:
        LCALL     ?Subroutine76 & 0xFFFF
??CrossCallReturnLabel_129:
        LCALL     ?Subroutine30 & 0xFFFF
// 3533   buf += 2;
// 3534   desc->AppDevVer = *buf >> 4;
??CrossCallReturnLabel_49:
        SWAP      A
        ANL       A,#0xf
// 3535 
// 3536   desc->Reserved = 0;
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine20 & 0xFFFF
// 3537   buf++;
// 3538 
// 3539   // move in input cluster list (if any). allocate aligned memory.
// 3540   num = desc->AppNumInClusters = *buf++;
??CrossCallReturnLabel_29:
        MOV       ?V2,A
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDO_ParseSimpleDescBuf_1
        INC       R7
??ZDO_ParseSimpleDescBuf_1:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOV       A,?V2
        MOVX      @DPTR,A
// 3541   if ( num )
        MOV       A,R4
        ADD       A,#0x7
        MOV       ?V6,A
        CLR       A
        ADDC      A,?V1
        MOV       ?V7,A
        MOV       A,?V2
        JZ        ??ZDO_ParseSimpleDescBuf_2
// 3542   {
// 3543     if (!(desc->pAppInClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_194:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R0,?V4
        MOV       R1,?V5
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_422:
        MOV       A,R0
        ORL       A,R1
        JNZ       $+5
        LJMP      ??ZDO_ParseSimpleDescBuf_3 & 0xFFFF
// 3544     {
// 3545       // malloc failed. we're done.
// 3546       return 1;
// 3547     }
// 3548     for (i=0; i<num; ++i)
        MOV       R2,#0x0
        SJMP      ??ZDO_ParseSimpleDescBuf_4
// 3549     {
// 3550       desc->pAppInClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_5:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V4,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R4,A
        CLR       A
        XCH       A,R4
        MOV       R5,A
        MOV       A,?V4
        ADD       A,R4
        CLR       A
        ADDC      A,R5
        MOV       ?V5,A
        LCALL     ?Subroutine118 & 0xFFFF
// 3551       buf += 2;
// 3552     }
??CrossCallReturnLabel_196:
        MOV       A,?V4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V5
        LCALL     ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_560:
        JNC       ??ZDO_ParseSimpleDescBuf_6
        INC       R7
??ZDO_ParseSimpleDescBuf_6:
        INC       R2
??ZDO_ParseSimpleDescBuf_4:
        MOV       A,R2
        CLR       C
        SUBB      A,?V2
        JC        ??ZDO_ParseSimpleDescBuf_5
// 3553   }
// 3554 
// 3555   // move in output cluster list (if any). allocate aligned memory.
// 3556   num = desc->AppNumOutClusters = *buf++;
??ZDO_ParseSimpleDescBuf_2:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V2,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3557   if (num)
        JZ        ??ZDO_ParseSimpleDescBuf_7
// 3558   {
// 3559     if (!(desc->pAppOutClusterList = (uint16 *)osal_mem_alloc(num*sizeof(uint16))))
        ; Setup parameters for call to function osal_mem_alloc
        LCALL     ?Subroutine117 & 0xFFFF
??CrossCallReturnLabel_195:
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
        MOV       R0,?V4
        MOV       R1,?V5
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine215_0 & 0xFFFF
??CrossCallReturnLabel_423:
        MOV       A,R0
        ORL       A,R1
        JNZ       ??ZDO_ParseSimpleDescBuf_8
// 3560     {
// 3561       // malloc failed. free input cluster list memory if there is any
// 3562       if ( desc->pAppInClusterList != NULL )
        MOV       DPL,?V6
        MOV       DPH,?V7
        LCALL     ??Subroutine207_0 & 0xFFFF
??CrossCallReturnLabel_337:
        JZ        ??ZDO_ParseSimpleDescBuf_3
// 3563       {
// 3564         osal_mem_free(desc->pAppInClusterList);
        ; Setup parameters for call to function osal_mem_free
        LCALL     `??osal_mem_free::?relay`; Banked call to: osal_mem_free
// 3565 
// 3566         desc->pAppInClusterList = NULL;
        MOV       DPL,?V6
        MOV       DPH,?V7
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 3567       }
// 3568       return 1;
??ZDO_ParseSimpleDescBuf_3:
        MOV       R1,#0x1
        SJMP      ??ZDO_ParseSimpleDescBuf_9
// 3569     }
// 3570     for (i=0; i<num; ++i)
??ZDO_ParseSimpleDescBuf_8:
        MOV       R2,#0x0
        SJMP      ??ZDO_ParseSimpleDescBuf_10
// 3571     {
// 3572       desc->pAppOutClusterList[i] = BUILD_UINT16( buf[0], buf[1] );
??ZDO_ParseSimpleDescBuf_11:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ??Subroutine248_0 & 0xFFFF
// 3573       buf += 2;
// 3574     }
??CrossCallReturnLabel_622:
        MOV       R4,A
        CLR       A
        XCH       A,R4
        MOV       R5,A
        MOV       A,?V0
        ADD       A,R4
        CLR       A
        ADDC      A,R5
        MOV       ?V1,A
        LCALL     ?Subroutine118 & 0xFFFF
??CrossCallReturnLabel_197:
        MOV       A,?V0
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V1
        LCALL     ?Subroutine155 & 0xFFFF
??CrossCallReturnLabel_561:
        JNC       ??ZDO_ParseSimpleDescBuf_12
        INC       R7
??ZDO_ParseSimpleDescBuf_12:
        INC       R2
??ZDO_ParseSimpleDescBuf_10:
        MOV       A,R2
        CLR       C
        SUBB      A,?V2
        JC        ??ZDO_ParseSimpleDescBuf_11
// 3575   }
// 3576   return 0;
??ZDO_ParseSimpleDescBuf_7:
        MOV       R1,#0x0
??ZDO_ParseSimpleDescBuf_9:
        LJMP      ??Subroutine201_0 & 0xFFFF
// 3577 }
          CFI EndBlock cfiBlock1436

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine118:
          CFI Block cfiCond1437 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_196
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1438 Using cfiCommon0
          CFI (cfiCond1438) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1438) Conditional ??CrossCallReturnLabel_197
          CFI (cfiCond1438) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1438) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1438) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1438) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1438) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1438) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1438) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1438) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1438) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1438) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1438) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1438) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1438) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1438) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1438) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1438) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1438) CFA_SP SP+-2
          CFI (cfiCond1438) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1439 Using cfiCommon1
          CFI (cfiPicker1439) NoFunction
          CFI (cfiPicker1439) Picker
        MOV       A,R2
        ADD       A,0xE0 /* A   */
        MOV       R4,A
        CLR       A
        RLC       A
        MOV       R5,A
        MOV       A,R0
        ADD       A,R4
        MOV       DPL,A
        MOV       A,R1
        ADDC      A,R5
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1437
          CFI EndBlock cfiCond1438
          CFI EndBlock cfiPicker1439

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine111:
          CFI Block cfiCond1440 Using cfiCommon0
          CFI Function ZDO_ParseNodeDescRsp
          CFI Conditional ??CrossCallReturnLabel_618
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1441 Using cfiCommon0
          CFI (cfiCond1441) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1441) Conditional ??CrossCallReturnLabel_619
          CFI (cfiCond1441) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1441) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1441) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1441) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1441) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1441) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1441) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1441) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1441) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1441) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1441) CFA_SP SP+-2
          CFI (cfiCond1441) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1442 Using cfiCommon1
          CFI (cfiPicker1442) NoFunction
          CFI (cfiPicker1442) Picker
        INC       DPTR
          CFI EndBlock cfiCond1440
          CFI EndBlock cfiCond1441
          CFI EndBlock cfiPicker1442
        REQUIRE ??Subroutine247_0
        ; // Fall through to label ??Subroutine247_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine247_0:
          CFI Block cfiCond1443 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_616
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1444 Using cfiCommon0
          CFI (cfiCond1444) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1444) Conditional ??CrossCallReturnLabel_617
          CFI (cfiCond1444) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1444) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1444) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1444) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1444) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1444) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1444) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1444) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1444) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1444) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1444) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1444) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1444) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1444) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1444) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1444) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1444) CFA_SP SP+-2
          CFI (cfiCond1444) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1445 Using cfiCommon0
          CFI (cfiCond1445) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1445) Conditional ??CrossCallReturnLabel_618
          CFI (cfiCond1445) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1445) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1445) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1445) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1445) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1445) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1445) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1445) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1445) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1445) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1445) CFA_SP SP+-2
          CFI (cfiCond1445) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1446 Using cfiCommon0
          CFI (cfiCond1446) Function ZDO_ParseNodeDescRsp
          CFI (cfiCond1446) Conditional ??CrossCallReturnLabel_619
          CFI (cfiCond1446) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1446) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1446) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1446) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1446) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1446) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1446) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1446) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1446) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1446) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1446) CFA_SP SP+-2
          CFI (cfiCond1446) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1447 Using cfiCommon1
          CFI (cfiPicker1447) NoFunction
          CFI (cfiPicker1447) Picker
        MOVX      A,@DPTR
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond1443
          CFI EndBlock cfiCond1444
          CFI EndBlock cfiCond1445
          CFI EndBlock cfiCond1446
          CFI EndBlock cfiPicker1447

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine93:
          CFI Block cfiCond1448 Using cfiCommon0
          CFI Function ZDO_AnyClusterMatches
          CFI Conditional ??CrossCallReturnLabel_623
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1449 Using cfiCommon0
          CFI (cfiCond1449) Function ZDO_ParseEPListRsp
          CFI (cfiCond1449) Conditional ??CrossCallReturnLabel_624
          CFI (cfiCond1449) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1449) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1449) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1449) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1449) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1449) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1449) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1449) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1449) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1449) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1449) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1449) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1449) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1449) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1449) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1449) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1449) CFA_SP SP+-2
          CFI (cfiCond1449) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1450 Using cfiCommon1
          CFI (cfiPicker1450) NoFunction
          CFI (cfiPicker1450) Picker
        MOV       DPH,A
          CFI EndBlock cfiCond1448
          CFI EndBlock cfiCond1449
          CFI EndBlock cfiPicker1450
        REQUIRE ??Subroutine248_0
        ; // Fall through to label ??Subroutine248_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine248_0:
          CFI Block cfiCond1451 Using cfiCommon0
          CFI Function ZDO_ConvertOTAClusters
          CFI Conditional ??CrossCallReturnLabel_621
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1452 Using cfiCommon0
          CFI (cfiCond1452) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1452) Conditional ??CrossCallReturnLabel_620
          CFI (cfiCond1452) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1452) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1452) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1452) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1452) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1452) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1452) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1452) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1452) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1452) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1452) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1452) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1452) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1452) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1452) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1452) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1452) CFA_SP SP+-2
          CFI (cfiCond1452) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1453 Using cfiCommon0
          CFI (cfiCond1453) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1453) Conditional ??CrossCallReturnLabel_622
          CFI (cfiCond1453) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1453) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1453) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1453) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1453) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1453) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1453) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1453) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1453) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1453) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1453) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1453) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1453) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1453) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1453) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1453) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1453) CFA_SP SP+-2
          CFI (cfiCond1453) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1454 Using cfiCommon0
          CFI (cfiCond1454) Function ZDO_AnyClusterMatches
          CFI (cfiCond1454) Conditional ??CrossCallReturnLabel_623
          CFI (cfiCond1454) R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1454) VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1454) V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1454) V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1454) V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1454) V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1454) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1454) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1454) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1454) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1454) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1454) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1454) CFA_SP SP+-2
          CFI (cfiCond1454) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1455 Using cfiCommon0
          CFI (cfiCond1455) Function ZDO_ParseEPListRsp
          CFI (cfiCond1455) Conditional ??CrossCallReturnLabel_624
          CFI (cfiCond1455) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1455) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1455) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1455) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1455) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1455) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1455) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1455) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1455) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1455) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1455) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1455) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1455) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1455) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1455) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1455) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1455) CFA_SP SP+-2
          CFI (cfiCond1455) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1456 Using cfiCommon1
          CFI (cfiPicker1456) NoFunction
          CFI (cfiPicker1456) Picker
        MOVX      A,@DPTR
        MOV       ?V0,A
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1451
          CFI EndBlock cfiCond1452
          CFI EndBlock cfiCond1453
          CFI EndBlock cfiCond1454
          CFI EndBlock cfiCond1455
          CFI EndBlock cfiPicker1456

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine88:
          CFI Block cfiCond1457 Using cfiCommon0
          CFI Function ZDO_ParseSimpleDescBuf
          CFI Conditional ??CrossCallReturnLabel_626
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1458 Using cfiCommon0
          CFI (cfiCond1458) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1458) Conditional ??CrossCallReturnLabel_627
          CFI (cfiCond1458) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1458) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1458) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1458) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1458) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1458) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1458) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1458) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1458) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1458) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1458) CFA_SP SP+-2
          CFI (cfiCond1458) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1459 Using cfiCommon1
          CFI (cfiPicker1459) NoFunction
          CFI (cfiPicker1459) Picker
        MOV       R2,A
          CFI EndBlock cfiCond1457
          CFI EndBlock cfiCond1458
          CFI EndBlock cfiPicker1459
        REQUIRE ??Subroutine249_0
        ; // Fall through to label ??Subroutine249_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine249_0:
          CFI Block cfiCond1460 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_625
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1461 Using cfiCommon0
          CFI (cfiCond1461) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1461) Conditional ??CrossCallReturnLabel_626
          CFI (cfiCond1461) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1461) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1461) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1461) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1461) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1461) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1461) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1461) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1461) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1461) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1461) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1461) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1461) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1461) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1461) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1461) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1461) CFA_SP SP+-2
          CFI (cfiCond1461) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1462 Using cfiCommon0
          CFI (cfiCond1462) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1462) Conditional ??CrossCallReturnLabel_627
          CFI (cfiCond1462) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1462) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1462) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1462) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1462) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1462) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1462) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1462) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1462) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1462) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1462) CFA_SP SP+-2
          CFI (cfiCond1462) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1463 Using cfiCommon1
          CFI (cfiPicker1463) NoFunction
          CFI (cfiPicker1463) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        MOV       DPL,R4
        MOV       DPH,R5
        RET
          CFI EndBlock cfiCond1460
          CFI EndBlock cfiCond1461
          CFI EndBlock cfiCond1462
          CFI EndBlock cfiPicker1463

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine76:
          CFI Block cfiCond1464 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_128
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1465 Using cfiCommon0
          CFI (cfiCond1465) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1465) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond1465) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1465) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1465) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1465) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1465) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1465) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1465) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1465) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1465) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1465) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1465) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1465) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1465) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1465) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1465) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1465) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1465) CFA_SP SP+-2
          CFI (cfiCond1465) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1466 Using cfiCommon1
          CFI (cfiPicker1466) NoFunction
          CFI (cfiPicker1466) Picker
        LCALL     ?Subroutine169 & 0xFFFF
??CrossCallReturnLabel_577:
        MOV       DPL,R4
        MOV       DPH,R5
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1464
          CFI EndBlock cfiCond1465
          CFI EndBlock cfiPicker1466

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine30:
          CFI Block cfiCond1467 Using cfiCommon0
          CFI Function ZDO_ParseMgmtLqiRsp
          CFI Conditional ??CrossCallReturnLabel_48
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1468 Using cfiCommon0
          CFI (cfiCond1468) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1468) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond1468) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1468) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1468) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1468) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1468) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1468) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1468) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1468) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1468) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1468) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1468) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1468) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1468) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1468) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1468) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1468) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1468) CFA_SP SP+-2
          CFI (cfiCond1468) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1469 Using cfiCommon1
          CFI (cfiPicker1469) NoFunction
          CFI (cfiPicker1469) Picker
        LCALL     ?Subroutine151 & 0xFFFF
??CrossCallReturnLabel_629:
        RET
          CFI EndBlock cfiCond1467
          CFI EndBlock cfiCond1468
          CFI EndBlock cfiPicker1469

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine151:
          CFI Block cfiCond1470 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1471 Using cfiCommon0
          CFI (cfiCond1471) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1471) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_5
          CFI (cfiCond1471) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1471) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1471) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1471) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1471) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1471) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1471) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1471) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1471) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1471) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1471) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1471) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1471) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1471) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1471) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1471) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1471) CFA_SP SP+-4
          CFI (cfiCond1471) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1472 Using cfiCommon0
          CFI (cfiCond1472) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1472) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_48
          CFI (cfiCond1472) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1472) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1472) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1472) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1472) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1472) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1472) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1472) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1472) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1472) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1472) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1472) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1472) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1472) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1472) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1472) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1472) CFA_SP SP+-4
          CFI (cfiCond1472) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1473 Using cfiCommon0
          CFI (cfiCond1473) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1473) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_49
          CFI (cfiCond1473) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1473) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1473) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1473) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1473) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1473) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1473) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1473) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1473) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1473) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1473) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1473) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1473) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1473) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1473) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1473) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1473) CFA_SP SP+-4
          CFI (cfiCond1473) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1474 Using cfiCommon1
          CFI (cfiPicker1474) NoFunction
          CFI (cfiPicker1474) Picker
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
          CFI EndBlock cfiCond1470
          CFI EndBlock cfiCond1471
          CFI EndBlock cfiCond1472
          CFI EndBlock cfiCond1473
          CFI EndBlock cfiPicker1474
        REQUIRE ??Subroutine250_0
        ; // Fall through to label ??Subroutine250_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine250_0:
          CFI Block cfiCond1475 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_81
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1476 Using cfiCommon0
          CFI (cfiCond1476) Function ZDO_ParseMgmtRtgRsp
          CFI (cfiCond1476) Conditional ??CrossCallReturnLabel_630, ??CrossCallReturnLabel_82
          CFI (cfiCond1476) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1476) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1476) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1476) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1476) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1476) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1476) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1476) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1476) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1476) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1476) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1476) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1476) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1476) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1476) CFA_SP SP+-4
          CFI (cfiCond1476) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1477 Using cfiCommon0
          CFI (cfiCond1477) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1477) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_4
          CFI (cfiCond1477) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1477) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1477) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1477) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1477) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1477) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1477) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1477) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1477) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1477) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1477) CFA_SP SP+-4
          CFI (cfiCond1477) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1478 Using cfiCommon0
          CFI (cfiCond1478) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1478) Conditional ??CrossCallReturnLabel_628, ??CrossCallReturnLabel_5
          CFI (cfiCond1478) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1478) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1478) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1478) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1478) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1478) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1478) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1478) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1478) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1478) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1478) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1478) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1478) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1478) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1478) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1478) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1478) CFA_SP SP+-4
          CFI (cfiCond1478) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1479 Using cfiCommon0
          CFI (cfiCond1479) Function ZDO_ParseMgmtLqiRsp
          CFI (cfiCond1479) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_48
          CFI (cfiCond1479) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1479) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1479) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1479) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1479) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1479) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1479) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1479) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1479) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1479) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1479) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1479) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1479) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1479) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1479) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1479) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1479) CFA_SP SP+-4
          CFI (cfiCond1479) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1480 Using cfiCommon0
          CFI (cfiCond1480) Function ZDO_ParseSimpleDescBuf
          CFI (cfiCond1480) Conditional ??CrossCallReturnLabel_629, ??CrossCallReturnLabel_49
          CFI (cfiCond1480) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1480) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1480) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1480) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1480) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1480) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1480) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1480) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1480) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1480) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1480) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1480) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1480) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1480) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1480) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1480) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1480) CFA_SP SP+-4
          CFI (cfiCond1480) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiPicker1481 Using cfiCommon1
          CFI (cfiPicker1481) NoFunction
          CFI (cfiPicker1481) Picker
        LCALL     ?Subroutine196 & 0xFFFF
??CrossCallReturnLabel_632:
        INC       DPTR
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1475
          CFI EndBlock cfiCond1476
          CFI EndBlock cfiCond1477
          CFI EndBlock cfiCond1478
          CFI EndBlock cfiCond1479
          CFI EndBlock cfiCond1480
          CFI EndBlock cfiPicker1481
// 3578 
// 3579 /*********************************************************************
// 3580  * @fn          ZDO_ParseDeviceAnnce
// 3581  *
// 3582  * @brief       Parse a Device Announce message.
// 3583  *
// 3584  * @param       inMsg - Incoming message
// 3585  * @param       pAnnce - place to put the parsed information
// 3586  *
// 3587  * @return      none
// 3588  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3589 void ZDO_ParseDeviceAnnce( zdoIncomingMsg_t *inMsg, ZDO_DeviceAnnce_t *pAnnce )
ZDO_ParseDeviceAnnce:
          CFI Block cfiBlock1482 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
        CODE
// 3590 {
        FUNCALL ZDO_ParseDeviceAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        MOV       ?V0,R4
        MOV       ?V1,R5
// 3591   uint8 *msg;
// 3592 
// 3593   // Parse incoming message
// 3594   msg = inMsg->asdu;
        LCALL     ?Subroutine65 & 0xFFFF
// 3595   pAnnce->nwkAddr = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_608:
        LCALL     ?Subroutine88 & 0xFFFF
??CrossCallReturnLabel_627:
        LCALL     ??Subroutine237_0 & 0xFFFF
// 3596   msg += 2;
??CrossCallReturnLabel_557:
        JNC       ??ZDO_ParseDeviceAnnce_0
        INC       R7
// 3597   osal_cpyExtAddr( pAnnce->extAddr, msg );
??ZDO_ParseDeviceAnnce_0:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       A,?V0
        ADD       A,#0x2
        MOV       R2,A
        CLR       A
        ADDC      A,?V1
        MOV       R3,A
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3598   msg += Z_EXTADDR_LEN;
// 3599   pAnnce->capabilities = *msg;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_140:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      @DPTR,A
// 3600 }
        LJMP      ??Subroutine203_0 & 0xFFFF
          CFI EndBlock cfiBlock1482
// 3601 
// 3602 /*********************************************************************
// 3603  * @fn          ZDO_ParseParentAnnce
// 3604  *
// 3605  * @brief       Parse Parent Announce and Parent Announce Rsp messages,
// 3606  *              both messages have the same payload.
// 3607  *
// 3608  * @param       inMsg - Incoming message
// 3609  *
// 3610  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3611  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3612  *          by the calling function [osal_mem_free()].
// 3613  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3614 ZDO_ParentAnnce_t *ZDO_ParseParentAnnce( zdoIncomingMsg_t *inMsg )
ZDO_ParseParentAnnce:
          CFI Block cfiBlock1483 Using cfiCommon0
          CFI Function ZDO_ParseParentAnnce
        CODE
// 3615 {
        FUNCALL ZDO_ParseParentAnnce, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseParentAnnce, sAddrExtCpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseParentAnnce, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 14, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 14, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 0
// 3616   ZDO_ParentAnnce_t *pRcvdMsg;
// 3617   uint8 *msg;
// 3618   uint8 numChildren;
// 3619 
// 3620   msg = inMsg->asdu;
        LCALL     ??Subroutine251_0 & 0xFFFF
??CrossCallReturnLabel_639:
        MOV       DPH,A
        LCALL     ?Subroutine114 & 0xFFFF
// 3621   if ( inMsg->clusterID == Parent_annce_rsp)
??CrossCallReturnLabel_183:
        MOV       A,R2
        ADD       A,#0xc
        MOV       DPL,A
        CLR       A
        ADDC      A,R3
        MOV       DPH,A
        MOVX      A,@DPTR
        XRL       A,#0x1f
        JNZ       ??ZDO_ParseParentAnnce_0
        INC       DPTR
        MOVX      A,@DPTR
        XRL       A,#0x80
??ZDO_ParseParentAnnce_0:
        JNZ       ??ZDO_ParseParentAnnce_1
// 3622   {
// 3623     *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3624   }
// 3625   numChildren = *msg++;
??ZDO_ParseParentAnnce_1:
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       ?V3,A
        INC       DPTR
        MOV       R6,DPL
        MOV       R7,DPH
// 3626 
// 3627   // Allocate a buffer big enough to handle the list
// 3628   pRcvdMsg = (ZDO_ParentAnnce_t *)osal_mem_alloc(
// 3629              (sizeof(ZDO_ParentAnnce_t) + (numChildren * sizeof(ZDO_ChildInfo_t))));
        ; Setup parameters for call to function osal_mem_alloc
        MOV       B,#0xc
        MUL       AB
        MOV       R1,B
        ADD       A,#0x1
        MOV       R2,A
        CLR       A
        ADDC      A,R1
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       ?V4,R2
        MOV       ?V5,R3
// 3630 
// 3631   if ( pRcvdMsg )
        MOV       A,R2
        ORL       A,?V5
        JZ        ??ZDO_ParseParentAnnce_2
// 3632   {
// 3633     uint8 x;
// 3634     ZDO_ChildInfo_t *pList = pRcvdMsg->childInfo;
        MOV       DPL,R2
        MOV       DPH,R3
        INC       DPTR
        MOV       ?V0,DPL
        MOV       ?V1,DPH
// 3635 
// 3636     pRcvdMsg->numOfChildren = numChildren;
        MOV       DPL,R2
        MOV       DPH,R3
        MOV       A,?V3
        MOVX      @DPTR,A
// 3637 
// 3638     for ( x = 0; x < numChildren; x++ )
        MOV       ?V2,#0x0
        SJMP      ??ZDO_ParseParentAnnce_3
// 3639     {
// 3640       osal_cpyExtAddr( pList->extAddr, msg );
??ZDO_ParseParentAnnce_4:
        ; Setup parameters for call to function sAddrExtCpy
        MOV       A,R6
        MOV       R4,A
        MOV       A,R7
        MOV       R5,A
        MOV       R2,?V0
        MOV       R3,?V1
        LCALL     `??sAddrExtCpy::?relay`; Banked call to: sAddrExtCpy
// 3641       msg += Z_EXTADDR_LEN;
        MOV       A,R6
        ADD       A,#0x8
        MOV       R6,A
        JNC       ??ZDO_ParseParentAnnce_5
        INC       R7
// 3642 
// 3643       pList->age = osal_build_uint32( msg, 4 );
??ZDO_ParseParentAnnce_5:
        ; Setup parameters for call to function osal_build_uint32
        MOV       R1,#0x4
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
        MOV       A,R4
        MOV       R2,A
        MOV       A,R5
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ?XSTORE_R0123
// 3644       msg += 4;
        MOV       A,R6
        ADD       A,#0x4
        MOV       R6,A
        JNC       ??ZDO_ParseParentAnnce_6
        INC       R7
// 3645 
// 3646       pList++;
??ZDO_ParseParentAnnce_6:
        MOV       A,?V0
        ADD       A,#0xc
        MOV       ?V0,A
        JNC       ??ZDO_ParseParentAnnce_7
        INC       ?V1
// 3647     }
??ZDO_ParseParentAnnce_7:
        INC       ?V2
??ZDO_ParseParentAnnce_3:
        MOV       A,?V2
        CLR       C
        SUBB      A,?V3
        JC        ??ZDO_ParseParentAnnce_4
// 3648   }
// 3649 
// 3650   return ( pRcvdMsg );
??ZDO_ParseParentAnnce_2:
        MOV       R2,?V4
        MOV       R3,?V5
        LJMP      ??Subroutine222_0 & 0xFFFF
// 3651 }
          CFI EndBlock cfiBlock1483

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine123:
          CFI Block cfiCond1484 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_634
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1485 Using cfiCommon0
          CFI (cfiCond1485) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1485) Conditional ??CrossCallReturnLabel_635
          CFI (cfiCond1485) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1485) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1485) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1485) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1485) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1485) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1485) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1485) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1485) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1485) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1485) CFA_SP SP+-2
          CFI (cfiCond1485) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1486 Using cfiCommon1
          CFI (cfiPicker1486) NoFunction
          CFI (cfiPicker1486) Picker
        MOV       ?V0,R4
        MOV       ?V1,R5
          CFI EndBlock cfiCond1484
          CFI EndBlock cfiCond1485
          CFI EndBlock cfiPicker1486
        REQUIRE ??Subroutine251_0
        ; // Fall through to label ??Subroutine251_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine251_0:
          CFI Block cfiCond1487 Using cfiCommon0
          CFI Function ZDO_ParsePowerDescRsp
          CFI Conditional ??CrossCallReturnLabel_636
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1488 Using cfiCommon0
          CFI (cfiCond1488) Function ZDO_ParseEPListRsp
          CFI (cfiCond1488) Conditional ??CrossCallReturnLabel_637
          CFI (cfiCond1488) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1488) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1488) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1488) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1488) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1488) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1488) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1488) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1488) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1488) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1488) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1488) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1488) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1488) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1488) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1488) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1488) CFA_SP SP+-2
          CFI (cfiCond1488) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1489 Using cfiCommon0
          CFI (cfiCond1489) Function ZDO_ParseUserDescRsp
          CFI (cfiCond1489) Conditional ??CrossCallReturnLabel_638
          CFI (cfiCond1489) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1489) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1489) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1489) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1489) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1489) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1489) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1489) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1489) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1489) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1489) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1489) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1489) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1489) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1489) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1489) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1489) CFA_SP SP+-2
          CFI (cfiCond1489) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1490 Using cfiCommon0
          CFI (cfiCond1490) Function ZDO_ParseParentAnnce
          CFI (cfiCond1490) Conditional ??CrossCallReturnLabel_639
          CFI (cfiCond1490) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1490) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1490) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1490) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1490) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1490) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1490) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1490) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1490) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1490) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1490) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1490) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1490) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1490) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1490) CFA_SP SP+-2
          CFI (cfiCond1490) CFA_XSP16 add(XSP16, 14)
          CFI Block cfiCond1491 Using cfiCommon0
          CFI (cfiCond1491) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1491) Conditional ??CrossCallReturnLabel_634
          CFI (cfiCond1491) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1491) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1491) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1491) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1491) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1491) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1491) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1491) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1491) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1491) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1491) CFA_SP SP+-2
          CFI (cfiCond1491) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1492 Using cfiCommon0
          CFI (cfiCond1492) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1492) Conditional ??CrossCallReturnLabel_635
          CFI (cfiCond1492) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1492) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1492) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1492) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1492) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1492) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1492) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1492) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1492) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1492) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1492) CFA_SP SP+-2
          CFI (cfiCond1492) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1493 Using cfiCommon1
          CFI (cfiPicker1493) NoFunction
          CFI (cfiPicker1493) Picker
        LCALL     ?Subroutine183 & 0xFFFF
??CrossCallReturnLabel_647:
        ADDC      A,R3
        RET
          CFI EndBlock cfiCond1487
          CFI EndBlock cfiCond1488
          CFI EndBlock cfiCond1489
          CFI EndBlock cfiCond1490
          CFI EndBlock cfiCond1491
          CFI EndBlock cfiCond1492
          CFI EndBlock cfiPicker1493
// 3652 
// 3653 /*********************************************************************
// 3654  * @fn          ZDO_ParseMgmtNwkUpdateNotify
// 3655  *
// 3656  * @brief       This function handles parsing of the incoming Management
// 3657  *              Network Update notify.
// 3658  *
// 3659  * @param       inMsg - incoming message (request)
// 3660  *
// 3661  * @return      a pointer to parsed response structure (NULL if not allocated).
// 3662  *          This structure was allocated using osal_mem_alloc, so it must be freed
// 3663  *          by the calling function [osal_mem_free()].
// 3664  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3665 ZDO_MgmtNwkUpdateNotify_t *ZDO_ParseMgmtNwkUpdateNotify( zdoIncomingMsg_t *inMsg )
ZDO_ParseMgmtNwkUpdateNotify:
          CFI Block cfiBlock1494 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
        CODE
// 3666 {
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_mem_alloc
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 22, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 22, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        FUNCALL ZDO_ParseMgmtNwkUpdateNotify, osal_memcpy
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 25, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 25, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        REQUIRE ?V2
        REQUIRE ?V3
        REQUIRE ?V4
        REQUIRE ?V5
        MOV       A,#-0xe
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 14)
        ; Saved register size: 14
        ; Auto size: 8
        MOV       A,#-0x8
        LCALL     ?ALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
// 3667   uint8 status;
// 3668   uint32 scannedChannels = 0;
        MOV       ?V0,#0x0
        MOV       ?V1,#0x0
        MOV       ?V2,#0x0
        MOV       ?V3,#0x0
// 3669   uint16 totalTransmissions = 0;
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        MOVX      @DPTR,A
        INC       DPTR
        MOVX      @DPTR,A
// 3670   uint16 transmissionFailures = 0;
        MOV       ?V4,A
        MOV       ?V5,A
// 3671   uint8 listCount = 0;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        CLR       A
        LCALL     ?Subroutine32 & 0xFFFF
// 3672   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_51:
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        LCALL     ?Subroutine13 & 0xFFFF
// 3673   ZDO_MgmtNwkUpdateNotify_t *pRsp;
// 3674 
// 3675   status = *msg++;
??CrossCallReturnLabel_444:
        LCALL     ??Subroutine212_0 & 0xFFFF
??CrossCallReturnLabel_368:
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_13:
        ADD       A,#0x1
        LCALL     ?Subroutine31 & 0xFFFF
// 3676   if ( status == ZSuccess )
??CrossCallReturnLabel_426:
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JNZ       ??CrossCallReturnLabel_427
// 3677   {
// 3678     scannedChannels = osal_build_uint32( msg, 4 );
        ; Setup parameters for call to function osal_build_uint32
        MOV       R1,#0x4
        LCALL     ?Subroutine99 & 0xFFFF
??CrossCallReturnLabel_495:
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       ?V0,R2
        MOV       ?V1,R3
        MOV       ?V2,R4
        MOV       ?V3,R5
// 3679     msg += 4;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        MOVX      A,@DPTR
        ADD       A,#0x4
        LCALL     ?Subroutine8 & 0xFFFF
// 3680     totalTransmissions = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_0:
        MOV       R1,A
        MOV       A,R2
        MOV       R0,A
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine219_0 & 0xFFFF
// 3681     msg += 2;
??CrossCallReturnLabel_445:
        ADD       A,#0x2
        LCALL     ?Subroutine8 & 0xFFFF
// 3682     transmissionFailures = BUILD_UINT16( msg[0], msg[1] );
??CrossCallReturnLabel_1:
        MOV       R0,A
        CLR       A
        XCH       A,R0
        MOV       R1,A
        MOV       A,R2
        ADD       A,R0
        MOV       ?V4,A
        CLR       A
        ADDC      A,R1
        MOV       ?V5,A
// 3683     msg += 2;
// 3684     listCount = *msg++;
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine86 & 0xFFFF
// 3685   }
??CrossCallReturnLabel_655:
        INC       DPTR
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        POP       A
          CFI CFA_SP SP+0
        LCALL     ?Subroutine14 & 0xFFFF
??CrossCallReturnLabel_14:
        ADD       A,#0x3
        LCALL     ?Subroutine31 & 0xFFFF
// 3686 
// 3687   pRsp = (ZDO_MgmtNwkUpdateNotify_t *)osal_mem_alloc( sizeof ( ZDO_MgmtNwkUpdateNotify_t ) + listCount );
??CrossCallReturnLabel_427:
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        MOV       R6,A
        ; Setup parameters for call to function osal_mem_alloc
        ADD       A,#0xa
        MOV       R2,A
        CLR       A
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_mem_alloc::?relay`; Banked call to: osal_mem_alloc
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine18 & 0xFFFF
// 3688 
// 3689   if ( pRsp )
??CrossCallReturnLabel_23:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine213_0 & 0xFFFF
??CrossCallReturnLabel_397:
        JNZ       $+5
        LJMP      ??ZDO_ParseMgmtNwkUpdateNotify_0 & 0xFFFF
// 3690   {
// 3691     pRsp->status = status;
        MOV       A,#0x5
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine252_0 & 0xFFFF
??CrossCallReturnLabel_650:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3692     pRsp->scannedChannels = scannedChannels;
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine86 & 0xFFFF
??CrossCallReturnLabel_656:
        MOV       R0,#?V0
        LCALL     ?L_MOV_TO_X
// 3693     pRsp->totalTransmissions = totalTransmissions;
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine91 & 0xFFFF
??CrossCallReturnLabel_153:
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine112 & 0xFFFF
??CrossCallReturnLabel_177:
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        LCALL     ??Subroutine215_0 & 0xFFFF
// 3694     pRsp->transmissionFailures = transmissionFailures;
??CrossCallReturnLabel_424:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine256_0 & 0xFFFF
??CrossCallReturnLabel_666:
        LCALL     ?Subroutine138 & 0xFFFF
??CrossCallReturnLabel_236:
        MOV       A,?V4
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,?V5
        MOVX      @DPTR,A
// 3695     pRsp->listCount = listCount;
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        PUSH      A
          CFI CFA_SP SP+-1
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ?Subroutine80 & 0xFFFF
??CrossCallReturnLabel_135:
        POP       A
          CFI CFA_SP SP+0
        MOVX      @DPTR,A
// 3696 
// 3697     // Allocate a buffer big enough to handle the list.
// 3698     if ( listCount > 0 )
        MOV       A,#0x2
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        JZ        ??ZDO_ParseMgmtNwkUpdateNotify_0
// 3699     {
// 3700       osal_memcpy( pRsp->energyValues, msg, listCount );
        ; Setup parameters for call to function osal_memcpy
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine61 & 0xFFFF
// 3701     }
// 3702   }
??CrossCallReturnLabel_105:
        LCALL     ?PUSH_XSTACK_I_THREE
          CFI CFA_XSP16 add(XSP16, 25)
        MOV       A,R6
        MOV       R4,A
        MOV       R5,#0x0
        MOV       A,#0x6
        LCALL     ?XSTACK_DISP0_8
        MOVX      A,@DPTR
        ADD       A,#0xa
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R3,A
        LCALL     `??osal_memcpy::?relay`; Banked call to: osal_memcpy
        MOV       A,#0x3
        LCALL     ?DEALLOC_XSTACK8
          CFI CFA_XSP16 add(XSP16, 22)
// 3703 
// 3704   return ( pRsp );
??ZDO_ParseMgmtNwkUpdateNotify_0:
        MOV       A,#0x3
        LCALL     ?XSTACK_DISP0_8
        LCALL     ??Subroutine224_0 & 0xFFFF
??CrossCallReturnLabel_487:
        MOV       A,#0x8
        LJMP      ?Subroutine5 & 0xFFFF
// 3705 }
          CFI EndBlock cfiBlock1494

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine138:
          CFI Block cfiCond1495 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_235
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1496 Using cfiCommon0
          CFI (cfiCond1496) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1496) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond1496) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1496) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1496) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1496) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1496) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1496) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1496) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1496) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1496) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1496) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1496) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1496) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1496) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1496) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1496) CFA_SP SP+-2
          CFI (cfiCond1496) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1497 Using cfiCommon1
          CFI (cfiPicker1497) NoFunction
          CFI (cfiPicker1497) Picker
        ADD       A,#0x7
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1495
          CFI EndBlock cfiCond1496
          CFI EndBlock cfiPicker1497

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine112:
          CFI Block cfiCond1498 Using cfiCommon0
          CFI Function ZDO_ParseServerDiscRsp
          CFI Conditional ??CrossCallReturnLabel_176
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 9)
          CFI Block cfiCond1499 Using cfiCommon0
          CFI (cfiCond1499) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1499) Conditional ??CrossCallReturnLabel_177
          CFI (cfiCond1499) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1499) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1499) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1499) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1499) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1499) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1499) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1499) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1499) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1499) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1499) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1499) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1499) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1499) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1499) CFA_SP SP+-2
          CFI (cfiCond1499) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1500 Using cfiCommon1
          CFI (cfiPicker1500) NoFunction
          CFI (cfiPicker1500) Picker
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R2
        RET
          CFI EndBlock cfiCond1498
          CFI EndBlock cfiCond1499
          CFI EndBlock cfiPicker1500

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine94:
          CFI Block cfiCond1501 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_651
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1502 Using cfiCommon0
          CFI (cfiCond1502) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1502) Conditional ??CrossCallReturnLabel_652
          CFI (cfiCond1502) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1502) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1502) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1502) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1502) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1502) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1502) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1502) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1502) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1502) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1502) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1502) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1502) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1502) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1502) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1502) CFA_SP SP+-2
          CFI (cfiCond1502) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker1503 Using cfiCommon1
          CFI (cfiPicker1503) NoFunction
          CFI (cfiPicker1503) Picker
        MOV       R0,A
          CFI EndBlock cfiCond1501
          CFI EndBlock cfiCond1502
          CFI EndBlock cfiPicker1503
        REQUIRE ??Subroutine252_0
        ; // Fall through to label ??Subroutine252_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine252_0:
          CFI Block cfiCond1504 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_650
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1505 Using cfiCommon0
          CFI (cfiCond1505) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1505) Conditional ??CrossCallReturnLabel_651
          CFI (cfiCond1505) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1505) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1505) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1505) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1505) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1505) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1505) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1505) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1505) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1505) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1505) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1505) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1505) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1505) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1505) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1505) CFA_SP SP+-2
          CFI (cfiCond1505) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1506 Using cfiCommon0
          CFI (cfiCond1506) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1506) Conditional ??CrossCallReturnLabel_652
          CFI (cfiCond1506) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1506) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1506) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1506) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1506) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1506) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1506) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1506) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1506) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1506) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1506) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1506) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1506) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1506) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1506) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1506) CFA_SP SP+-2
          CFI (cfiCond1506) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker1507 Using cfiCommon1
          CFI (cfiPicker1507) NoFunction
          CFI (cfiPicker1507) Picker
        INC       DPTR
          CFI EndBlock cfiCond1504
          CFI EndBlock cfiCond1505
          CFI EndBlock cfiCond1506
          CFI EndBlock cfiPicker1507
        REQUIRE ??Subroutine253_0
        ; // Fall through to label ??Subroutine253_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine253_0:
          CFI Block cfiCond1508 Using cfiCommon0
          CFI Function ZDO_ProcessDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_648
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond1509 Using cfiCommon0
          CFI (cfiCond1509) Function ZDO_ProcessDeviceAnnce
          CFI (cfiCond1509) Conditional ??CrossCallReturnLabel_649
          CFI (cfiCond1509) R6 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1509) VB load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1509) V0 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1509) V1 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1509) V2 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1509) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1509) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1509) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1509) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1509) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1509) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1509) CFA_SP SP+-2
          CFI (cfiCond1509) CFA_XSP16 add(XSP16, 51)
          CFI Block cfiCond1510 Using cfiCommon0
          CFI (cfiCond1510) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1510) Conditional ??CrossCallReturnLabel_650
          CFI (cfiCond1510) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1510) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1510) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1510) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1510) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1510) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1510) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1510) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1510) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1510) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1510) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1510) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1510) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1510) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1510) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1511 Using cfiCommon0
          CFI (cfiCond1511) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1511) Conditional ??CrossCallReturnLabel_651
          CFI (cfiCond1511) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1511) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1511) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1511) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1511) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1511) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1511) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1511) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1511) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1511) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1511) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1511) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1511) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1511) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1511) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1511) CFA_SP SP+-2
          CFI (cfiCond1511) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1512 Using cfiCommon0
          CFI (cfiCond1512) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1512) Conditional ??CrossCallReturnLabel_652
          CFI (cfiCond1512) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1512) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1512) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1512) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1512) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1512) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1512) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1512) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1512) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1512) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1512) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1512) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1512) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1512) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1512) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1512) CFA_SP SP+-2
          CFI (cfiCond1512) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiPicker1513 Using cfiCommon1
          CFI (cfiPicker1513) NoFunction
          CFI (cfiPicker1513) Picker
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        RET
          CFI EndBlock cfiCond1508
          CFI EndBlock cfiCond1509
          CFI EndBlock cfiCond1510
          CFI EndBlock cfiCond1511
          CFI EndBlock cfiCond1512
          CFI EndBlock cfiPicker1513

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine91:
          CFI Block cfiCond1514 Using cfiCommon0
          CFI Function ZDMatchSendState
          CFI Conditional ??CrossCallReturnLabel_151
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1515 Using cfiCommon0
          CFI (cfiCond1515) Function ZDMatchSendState
          CFI (cfiCond1515) Conditional ??CrossCallReturnLabel_152
          CFI (cfiCond1515) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1515) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1515) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1515) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1515) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1515) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1515) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1515) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1515) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1515) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1515) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1515) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1515) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1515) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1515) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1515) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1515) CFA_SP SP+-2
          CFI (cfiCond1515) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1516 Using cfiCommon0
          CFI (cfiCond1516) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1516) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond1516) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1516) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1516) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1516) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1516) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1516) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1516) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1516) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1516) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1516) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1516) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1516) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1516) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1516) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1516) CFA_SP SP+-2
          CFI (cfiCond1516) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1517 Using cfiCommon1
          CFI (cfiPicker1517) NoFunction
          CFI (cfiPicker1517) Picker
        LCALL     ?Subroutine172 & 0xFFFF
??CrossCallReturnLabel_512:
        MOV       A,#0x3
        RET
          CFI EndBlock cfiCond1514
          CFI EndBlock cfiCond1515
          CFI EndBlock cfiCond1516
          CFI EndBlock cfiPicker1517

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine86:
          CFI Block cfiCond1518 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_654
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1519 Using cfiCommon0
          CFI (cfiCond1519) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1519) Conditional ??CrossCallReturnLabel_655
          CFI (cfiCond1519) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1519) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1519) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1519) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1519) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1519) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1519) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1519) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1519) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1519) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1519) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1519) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1519) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1519) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1519) CFA_SP SP+-2
          CFI (cfiCond1519) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1520 Using cfiCommon0
          CFI (cfiCond1520) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1520) Conditional ??CrossCallReturnLabel_656
          CFI (cfiCond1520) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1520) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1520) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1520) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1520) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1520) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1520) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1520) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1520) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1520) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1520) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1520) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1520) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1520) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1520) CFA_SP SP+-2
          CFI (cfiCond1520) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1521 Using cfiCommon1
          CFI (cfiPicker1521) NoFunction
          CFI (cfiPicker1521) Picker
        MOVX      A,@DPTR
        MOV       R0,A
          CFI EndBlock cfiCond1518
          CFI EndBlock cfiCond1519
          CFI EndBlock cfiCond1520
          CFI EndBlock cfiPicker1521
        REQUIRE ??Subroutine254_0
        ; // Fall through to label ??Subroutine254_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine254_0:
          CFI Block cfiCond1522 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_653
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1523 Using cfiCommon0
          CFI (cfiCond1523) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1523) Conditional ??CrossCallReturnLabel_654
          CFI (cfiCond1523) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1523) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1523) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1523) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1523) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1523) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1523) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1523) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1523) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1523) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1523) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1523) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1523) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1523) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1523) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1523) CFA_SP SP+-2
          CFI (cfiCond1523) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1524 Using cfiCommon0
          CFI (cfiCond1524) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1524) Conditional ??CrossCallReturnLabel_655
          CFI (cfiCond1524) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1524) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1524) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1524) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1524) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1524) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1524) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1524) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1524) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1524) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1524) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1524) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1524) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1524) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1524) CFA_SP SP+-2
          CFI (cfiCond1524) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1525 Using cfiCommon0
          CFI (cfiCond1525) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1525) Conditional ??CrossCallReturnLabel_656
          CFI (cfiCond1525) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1525) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1525) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1525) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1525) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1525) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1525) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1525) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1525) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1525) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1525) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1525) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1525) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1525) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1525) CFA_SP SP+-2
          CFI (cfiCond1525) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1526 Using cfiCommon1
          CFI (cfiPicker1526) NoFunction
          CFI (cfiPicker1526) Picker
        LCALL     ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_659:
        RET
          CFI EndBlock cfiCond1522
          CFI EndBlock cfiCond1523
          CFI EndBlock cfiCond1524
          CFI EndBlock cfiCond1525
          CFI EndBlock cfiPicker1526

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine176:
          CFI Block cfiCond1527 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_509
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1528 Using cfiCommon0
          CFI (cfiCond1528) Function ZDMatchSendState
          CFI (cfiCond1528) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_510
          CFI (cfiCond1528) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1528) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1528) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1528) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1528) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1528) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1528) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1528) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1528) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1528) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1528) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1528) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1528) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1528) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1528) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1528) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1528) CFA_SP SP+-4
          CFI (cfiCond1528) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1529 Using cfiCommon0
          CFI (cfiCond1529) Function ZDO_ProcessParentAnnce
          CFI (cfiCond1529) Conditional ??CrossCallReturnLabel_658, ??CrossCallReturnLabel_508
          CFI (cfiCond1529) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1529) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1529) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1529) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1529) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1529) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1529) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1529) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1529) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1529) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1529) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1529) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1529) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1529) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1529) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1529) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1529) CFA_SP SP+-4
          CFI (cfiCond1529) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1530 Using cfiCommon0
          CFI (cfiCond1530) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1530) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_654
          CFI (cfiCond1530) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1530) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1530) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1530) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1530) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1530) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1530) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1530) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1530) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1530) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1530) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1530) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1530) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1530) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1530) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1530) CFA_SP SP+-4
          CFI (cfiCond1530) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1531 Using cfiCommon0
          CFI (cfiCond1531) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1531) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_655
          CFI (cfiCond1531) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1531) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1531) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1531) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1531) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1531) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1531) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1531) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1531) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1531) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1531) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1531) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1531) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1531) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1531) CFA_SP SP+-4
          CFI (cfiCond1531) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1532 Using cfiCommon0
          CFI (cfiCond1532) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1532) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_656
          CFI (cfiCond1532) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1532) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1532) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1532) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1532) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1532) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1532) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1532) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1532) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1532) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1532) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1532) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1532) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1532) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1532) CFA_SP SP+-4
          CFI (cfiCond1532) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1533 Using cfiCommon0
          CFI (cfiCond1533) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1533) Conditional ??CrossCallReturnLabel_659, ??CrossCallReturnLabel_653
          CFI (cfiCond1533) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1533) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1533) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1533) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1533) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1533) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1533) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1533) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1533) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1533) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1533) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1533) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1533) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1533) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1533) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1533) CFA_SP SP+-4
          CFI (cfiCond1533) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1534 Using cfiCommon0
          CFI (cfiCond1534) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1534) Conditional ??CrossCallReturnLabel_657, ??CrossCallReturnLabel_0
          CFI (cfiCond1534) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1534) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1534) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1534) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1534) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1534) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1534) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1534) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1534) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1534) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1534) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1534) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1534) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1534) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1534) CFA_SP SP+-4
          CFI (cfiCond1534) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1535 Using cfiCommon0
          CFI (cfiCond1535) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1535) Conditional ??CrossCallReturnLabel_657, ??CrossCallReturnLabel_1
          CFI (cfiCond1535) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1535) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1535) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1535) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1535) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1535) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1535) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1535) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1535) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1535) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1535) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1535) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1535) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1535) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1535) CFA_SP SP+-4
          CFI (cfiCond1535) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1536 Using cfiCommon1
          CFI (cfiPicker1536) NoFunction
          CFI (cfiPicker1536) Picker
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPH,A
        MOV       DPL,R0
        INC       DPTR
        RET
          CFI EndBlock cfiCond1527
          CFI EndBlock cfiCond1528
          CFI EndBlock cfiCond1529
          CFI EndBlock cfiCond1530
          CFI EndBlock cfiCond1531
          CFI EndBlock cfiCond1532
          CFI EndBlock cfiCond1533
          CFI EndBlock cfiCond1534
          CFI EndBlock cfiCond1535
          CFI EndBlock cfiPicker1536

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine82:
          CFI Block cfiCond1537 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_685
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1538 Using cfiCommon0
          CFI (cfiCond1538) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1538) Conditional ??CrossCallReturnLabel_686
          CFI (cfiCond1538) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1538) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1538) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1538) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1538) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1538) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1538) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1538) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1538) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1538) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1538) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1538) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1538) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1538) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1538) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1538) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1538) CFA_SP SP+-2
          CFI (cfiCond1538) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker1539 Using cfiCommon1
          CFI (cfiPicker1539) NoFunction
          CFI (cfiPicker1539) Picker
        LCALL     ?Subroutine184 & 0xFFFF
??CrossCallReturnLabel_540:
        MOV       R4,A
          CFI EndBlock cfiCond1537
          CFI EndBlock cfiCond1538
          CFI EndBlock cfiPicker1539
        REQUIRE ??Subroutine255_0
        ; // Fall through to label ??Subroutine255_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine255_0:
          CFI Block cfiCond1540 Using cfiCommon0
          CFI Function ZDO_MatchEndDeviceBind
          CFI Conditional ??CrossCallReturnLabel_667
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1541 Using cfiCommon0
          CFI (cfiCond1541) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1541) Conditional ??CrossCallReturnLabel_668
          CFI (cfiCond1541) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1541) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1541) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1541) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1541) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1541) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1541) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1541) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1541) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1541) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1541) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1541) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1541) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1541) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1541) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1541) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1541) CFA_SP SP+-2
          CFI (cfiCond1541) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1542 Using cfiCommon0
          CFI (cfiCond1542) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1542) Conditional ??CrossCallReturnLabel_669
          CFI (cfiCond1542) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1542) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1542) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1542) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1542) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1542) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1542) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1542) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1542) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1542) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1542) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1542) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1542) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1542) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1542) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1542) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1542) CFA_SP SP+-2
          CFI (cfiCond1542) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1543 Using cfiCommon0
          CFI (cfiCond1543) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1543) Conditional ??CrossCallReturnLabel_670
          CFI (cfiCond1543) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1543) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1543) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1543) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1543) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1543) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1543) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1543) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1543) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1543) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1543) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1543) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1543) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1543) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1543) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1543) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1543) CFA_SP SP+-2
          CFI (cfiCond1543) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1544 Using cfiCommon0
          CFI (cfiCond1544) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1544) Conditional ??CrossCallReturnLabel_671
          CFI (cfiCond1544) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1544) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1544) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1544) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1544) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1544) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1544) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1544) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1544) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1544) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1544) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1544) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1544) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1544) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1544) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1544) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1544) CFA_SP SP+-2
          CFI (cfiCond1544) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1545 Using cfiCommon0
          CFI (cfiCond1545) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1545) Conditional ??CrossCallReturnLabel_672
          CFI (cfiCond1545) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1545) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1545) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1545) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1545) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1545) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1545) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1545) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1545) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1545) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1545) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1545) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1545) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1545) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1545) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1545) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1545) CFA_SP SP+-2
          CFI (cfiCond1545) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1546 Using cfiCommon0
          CFI (cfiCond1546) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1546) Conditional ??CrossCallReturnLabel_673
          CFI (cfiCond1546) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1546) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1546) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1546) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1546) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1546) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1546) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1546) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1546) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1546) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1546) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1546) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1546) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1546) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1546) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1546) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1546) CFA_SP SP+-2
          CFI (cfiCond1546) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1547 Using cfiCommon0
          CFI (cfiCond1547) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1547) Conditional ??CrossCallReturnLabel_674
          CFI (cfiCond1547) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1547) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1547) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1547) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1547) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1547) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1547) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1547) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1547) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1547) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1547) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1547) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1547) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1547) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1547) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1547) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1547) CFA_SP SP+-2
          CFI (cfiCond1547) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1548 Using cfiCommon0
          CFI (cfiCond1548) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1548) Conditional ??CrossCallReturnLabel_675
          CFI (cfiCond1548) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1548) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1548) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1548) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1548) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1548) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1548) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1548) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1548) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1548) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1548) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1548) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1548) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1548) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1548) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1548) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1548) CFA_SP SP+-2
          CFI (cfiCond1548) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1549 Using cfiCommon0
          CFI (cfiCond1549) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1549) Conditional ??CrossCallReturnLabel_676
          CFI (cfiCond1549) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1549) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1549) CFA_SP SP+-7
          CFI Block cfiCond1550 Using cfiCommon0
          CFI (cfiCond1550) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1550) Conditional ??CrossCallReturnLabel_677
          CFI (cfiCond1550) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1550) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1550) CFA_SP SP+-7
          CFI Block cfiCond1551 Using cfiCommon0
          CFI (cfiCond1551) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1551) Conditional ??CrossCallReturnLabel_678
          CFI (cfiCond1551) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1551) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1551) CFA_SP SP+-7
          CFI Block cfiCond1552 Using cfiCommon0
          CFI (cfiCond1552) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1552) Conditional ??CrossCallReturnLabel_679
          CFI (cfiCond1552) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1552) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1552) CFA_SP SP+-7
          CFI Block cfiCond1553 Using cfiCommon0
          CFI (cfiCond1553) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1553) Conditional ??CrossCallReturnLabel_680
          CFI (cfiCond1553) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1553) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1553) CFA_SP SP+-7
          CFI Block cfiCond1554 Using cfiCommon0
          CFI (cfiCond1554) Function ZDMatchSendState
          CFI (cfiCond1554) Conditional ??CrossCallReturnLabel_681
          CFI (cfiCond1554) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1554) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1554) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1554) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1554) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1554) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1554) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1554) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1554) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1554) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1554) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1554) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1554) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1554) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1554) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1554) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1554) CFA_SP SP+-2
          CFI (cfiCond1554) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1555 Using cfiCommon0
          CFI (cfiCond1555) Function ZDMatchSendState
          CFI (cfiCond1555) Conditional ??CrossCallReturnLabel_682
          CFI (cfiCond1555) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1555) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1555) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1555) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1555) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1555) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1555) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1555) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1555) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1555) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1555) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1555) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1555) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1555) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1555) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1555) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1555) CFA_SP SP+-2
          CFI (cfiCond1555) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1556 Using cfiCommon0
          CFI (cfiCond1556) Function ZDMatchSendState
          CFI (cfiCond1556) Conditional ??CrossCallReturnLabel_683
          CFI (cfiCond1556) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1556) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1556) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1556) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1556) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1556) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1556) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1556) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1556) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1556) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1556) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1556) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1556) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1556) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1556) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1556) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1556) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1557 Using cfiCommon0
          CFI (cfiCond1557) Function ZDMatchSendState
          CFI (cfiCond1557) Conditional ??CrossCallReturnLabel_684
          CFI (cfiCond1557) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1557) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1557) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1557) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1557) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1557) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1557) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1557) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1557) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1557) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1557) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1557) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1557) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1557) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1557) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1557) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1557) CFA_SP SP+-2
          CFI (cfiCond1557) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1558 Using cfiCommon0
          CFI (cfiCond1558) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1558) Conditional ??CrossCallReturnLabel_685
          CFI (cfiCond1558) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1558) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1558) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1558) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1558) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1558) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1558) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1558) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1558) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1558) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1558) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1558) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1558) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1558) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1558) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1558) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1558) CFA_SP SP+-2
          CFI (cfiCond1558) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1559 Using cfiCommon0
          CFI (cfiCond1559) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1559) Conditional ??CrossCallReturnLabel_686
          CFI (cfiCond1559) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1559) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1559) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1559) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1559) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1559) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1559) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1559) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1559) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1559) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1559) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1559) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1559) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1559) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1559) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1559) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1559) CFA_SP SP+-2
          CFI (cfiCond1559) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker1560 Using cfiCommon1
          CFI (cfiPicker1560) NoFunction
          CFI (cfiPicker1560) Picker
        MOV       DPTR,#matchED
          CFI EndBlock cfiCond1540
          CFI EndBlock cfiCond1541
          CFI EndBlock cfiCond1542
          CFI EndBlock cfiCond1543
          CFI EndBlock cfiCond1544
          CFI EndBlock cfiCond1545
          CFI EndBlock cfiCond1546
          CFI EndBlock cfiCond1547
          CFI EndBlock cfiCond1548
          CFI EndBlock cfiCond1549
          CFI EndBlock cfiCond1550
          CFI EndBlock cfiCond1551
          CFI EndBlock cfiCond1552
          CFI EndBlock cfiCond1553
          CFI EndBlock cfiCond1554
          CFI EndBlock cfiCond1555
          CFI EndBlock cfiCond1556
          CFI EndBlock cfiCond1557
          CFI EndBlock cfiCond1558
          CFI EndBlock cfiCond1559
          CFI EndBlock cfiPicker1560
        REQUIRE ??Subroutine256_0
        ; // Fall through to label ??Subroutine256_0

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
??Subroutine256_0:
          CFI Block cfiCond1561 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_660
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1562 Using cfiCommon0
          CFI (cfiCond1562) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1562) Conditional ??CrossCallReturnLabel_661
          CFI (cfiCond1562) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1562) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1562) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1562) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1562) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1562) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1562) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1562) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1562) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1562) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1562) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1562) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1562) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1562) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1562) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1562) CFA_SP SP+-2
          CFI (cfiCond1562) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1563 Using cfiCommon0
          CFI (cfiCond1563) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1563) Conditional ??CrossCallReturnLabel_662
          CFI (cfiCond1563) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1563) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1563) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1563) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1563) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1563) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1563) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1563) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1563) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1563) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1563) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1563) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1563) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1563) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1563) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1563) CFA_SP SP+-2
          CFI (cfiCond1563) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1564 Using cfiCommon0
          CFI (cfiCond1564) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1564) Conditional ??CrossCallReturnLabel_663
          CFI (cfiCond1564) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1564) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1564) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1564) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1564) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1564) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1564) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1564) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1564) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1564) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1564) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1564) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1564) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1564) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1564) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1564) CFA_SP SP+-2
          CFI (cfiCond1564) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1565 Using cfiCommon0
          CFI (cfiCond1565) Function ZDO_EndDeviceTimeoutCB
          CFI (cfiCond1565) Conditional ??CrossCallReturnLabel_664
          CFI (cfiCond1565) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1565) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1565) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1565) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1565) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1565) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1565) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1565) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1565) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1565) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1565) CFA_SP SP+-2
          CFI (cfiCond1565) CFA_XSP16 add(XSP16, 12)
          CFI Block cfiCond1566 Using cfiCommon0
          CFI (cfiCond1566) Function ZDMatchSendState
          CFI (cfiCond1566) Conditional ??CrossCallReturnLabel_665
          CFI (cfiCond1566) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1566) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1566) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1566) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1566) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1566) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1566) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1566) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1566) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1566) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1566) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1566) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1566) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1566) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1566) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1566) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1566) CFA_SP SP+-2
          CFI (cfiCond1566) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1567 Using cfiCommon0
          CFI (cfiCond1567) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1567) Conditional ??CrossCallReturnLabel_666
          CFI (cfiCond1567) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1567) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1567) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1567) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1567) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1567) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1567) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1567) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1567) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1567) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1567) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1567) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1567) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1567) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1567) CFA_SP SP+-2
          CFI (cfiCond1567) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1568 Using cfiCommon0
          CFI (cfiCond1568) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1568) Conditional ??CrossCallReturnLabel_667
          CFI (cfiCond1568) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1568) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1568) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1568) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1568) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1568) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1568) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1568) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1568) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1568) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1568) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1568) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1568) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1568) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1568) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1568) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1568) CFA_SP SP+-2
          CFI (cfiCond1568) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1569 Using cfiCommon0
          CFI (cfiCond1569) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1569) Conditional ??CrossCallReturnLabel_668
          CFI (cfiCond1569) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1569) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1569) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1569) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1569) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1569) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1569) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1569) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1569) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1569) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1569) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1569) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1569) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1569) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1569) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1569) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1569) CFA_SP SP+-2
          CFI (cfiCond1569) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1570 Using cfiCommon0
          CFI (cfiCond1570) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1570) Conditional ??CrossCallReturnLabel_669
          CFI (cfiCond1570) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1570) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1570) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1570) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1570) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1570) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1570) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1570) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1570) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1570) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1570) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1570) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1570) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1570) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1570) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1570) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1570) CFA_SP SP+-2
          CFI (cfiCond1570) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1571 Using cfiCommon0
          CFI (cfiCond1571) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1571) Conditional ??CrossCallReturnLabel_670
          CFI (cfiCond1571) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1571) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1571) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1571) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1571) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1571) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1571) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1571) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1571) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1571) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1571) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1571) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1571) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1571) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1571) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1571) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1571) CFA_SP SP+-2
          CFI (cfiCond1571) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1572 Using cfiCommon0
          CFI (cfiCond1572) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1572) Conditional ??CrossCallReturnLabel_671
          CFI (cfiCond1572) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1572) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1572) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1572) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1572) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1572) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1572) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1572) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1572) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1572) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1572) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1572) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1572) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1572) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1572) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1572) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1572) CFA_SP SP+-2
          CFI (cfiCond1572) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1573 Using cfiCommon0
          CFI (cfiCond1573) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1573) Conditional ??CrossCallReturnLabel_672
          CFI (cfiCond1573) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1573) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1573) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1573) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1573) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1573) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1573) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1573) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1573) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1573) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1573) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1573) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1573) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1573) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1573) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1573) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1573) CFA_SP SP+-2
          CFI (cfiCond1573) CFA_XSP16 add(XSP16, 28)
          CFI Block cfiCond1574 Using cfiCommon0
          CFI (cfiCond1574) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1574) Conditional ??CrossCallReturnLabel_673
          CFI (cfiCond1574) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1574) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1574) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1574) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1574) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1574) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1574) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1574) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1574) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1574) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1574) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1574) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1574) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1574) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1574) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1574) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1574) CFA_SP SP+-2
          CFI (cfiCond1574) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1575 Using cfiCommon0
          CFI (cfiCond1575) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1575) Conditional ??CrossCallReturnLabel_674
          CFI (cfiCond1575) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1575) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1575) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1575) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1575) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1575) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1575) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1575) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1575) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1575) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1575) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1575) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1575) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1575) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1575) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1575) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1575) CFA_SP SP+-2
          CFI (cfiCond1575) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1576 Using cfiCommon0
          CFI (cfiCond1576) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1576) Conditional ??CrossCallReturnLabel_675
          CFI (cfiCond1576) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1576) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1576) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1576) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1576) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1576) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1576) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1576) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1576) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1576) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1576) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1576) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1576) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1576) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1576) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1576) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1576) CFA_SP SP+-2
          CFI (cfiCond1576) CFA_XSP16 add(XSP16, 26)
          CFI Block cfiCond1577 Using cfiCommon0
          CFI (cfiCond1577) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1577) Conditional ??CrossCallReturnLabel_676
          CFI (cfiCond1577) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1577) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1577) CFA_SP SP+-7
          CFI Block cfiCond1578 Using cfiCommon0
          CFI (cfiCond1578) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1578) Conditional ??CrossCallReturnLabel_677
          CFI (cfiCond1578) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1578) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1578) CFA_SP SP+-7
          CFI Block cfiCond1579 Using cfiCommon0
          CFI (cfiCond1579) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1579) Conditional ??CrossCallReturnLabel_678
          CFI (cfiCond1579) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1579) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1579) CFA_SP SP+-7
          CFI Block cfiCond1580 Using cfiCommon0
          CFI (cfiCond1580) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1580) Conditional ??CrossCallReturnLabel_679
          CFI (cfiCond1580) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1580) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1580) CFA_SP SP+-7
          CFI Block cfiCond1581 Using cfiCommon0
          CFI (cfiCond1581) Function ZDO_RemoveMatchMemory
          CFI (cfiCond1581) Conditional ??CrossCallReturnLabel_680
          CFI (cfiCond1581) DPL0 Frame(CFA_SP, 4)
          CFI (cfiCond1581) DPH0 Frame(CFA_SP, 5)
          CFI (cfiCond1581) CFA_SP SP+-7
          CFI Block cfiCond1582 Using cfiCommon0
          CFI (cfiCond1582) Function ZDMatchSendState
          CFI (cfiCond1582) Conditional ??CrossCallReturnLabel_681
          CFI (cfiCond1582) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1582) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1582) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1582) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1582) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1582) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1582) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1582) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1582) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1582) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1582) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1582) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1582) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1582) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1582) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1582) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1582) CFA_SP SP+-2
          CFI (cfiCond1582) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1583 Using cfiCommon0
          CFI (cfiCond1583) Function ZDMatchSendState
          CFI (cfiCond1583) Conditional ??CrossCallReturnLabel_682
          CFI (cfiCond1583) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1583) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1583) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1583) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1583) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1583) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1583) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1583) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1583) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1583) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1583) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1583) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1583) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1583) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1583) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1583) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1583) CFA_SP SP+-2
          CFI (cfiCond1583) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1584 Using cfiCommon0
          CFI (cfiCond1584) Function ZDMatchSendState
          CFI (cfiCond1584) Conditional ??CrossCallReturnLabel_683
          CFI (cfiCond1584) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1584) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1584) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1584) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1584) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1584) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1584) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1584) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1584) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1584) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1584) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1584) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1584) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1584) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1584) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1584) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1584) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1585 Using cfiCommon0
          CFI (cfiCond1585) Function ZDMatchSendState
          CFI (cfiCond1585) Conditional ??CrossCallReturnLabel_684
          CFI (cfiCond1585) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1585) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1585) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1585) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1585) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1585) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1585) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1585) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1585) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1585) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1585) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1585) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1585) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1585) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1585) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1585) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1585) CFA_SP SP+-2
          CFI (cfiCond1585) CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1586 Using cfiCommon0
          CFI (cfiCond1586) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1586) Conditional ??CrossCallReturnLabel_685
          CFI (cfiCond1586) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1586) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1586) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1586) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1586) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1586) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1586) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1586) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1586) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1586) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1586) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1586) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1586) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1586) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1586) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1586) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1586) CFA_SP SP+-2
          CFI (cfiCond1586) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiCond1587 Using cfiCommon0
          CFI (cfiCond1587) Function ZDO_MatchEndDeviceBind
          CFI (cfiCond1587) Conditional ??CrossCallReturnLabel_686
          CFI (cfiCond1587) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1587) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1587) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1587) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1587) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1587) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1587) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1587) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1587) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1587) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1587) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1587) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1587) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1587) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1587) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1587) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1587) CFA_SP SP+-2
          CFI (cfiCond1587) CFA_XSP16 add(XSP16, 30)
          CFI Block cfiPicker1588 Using cfiCommon1
          CFI (cfiPicker1588) NoFunction
          CFI (cfiPicker1588) Picker
        LCALL     ??Subroutine227_0 & 0xFFFF
??CrossCallReturnLabel_694:
        RET
          CFI EndBlock cfiCond1561
          CFI EndBlock cfiCond1562
          CFI EndBlock cfiCond1563
          CFI EndBlock cfiCond1564
          CFI EndBlock cfiCond1565
          CFI EndBlock cfiCond1566
          CFI EndBlock cfiCond1567
          CFI EndBlock cfiCond1568
          CFI EndBlock cfiCond1569
          CFI EndBlock cfiCond1570
          CFI EndBlock cfiCond1571
          CFI EndBlock cfiCond1572
          CFI EndBlock cfiCond1573
          CFI EndBlock cfiCond1574
          CFI EndBlock cfiCond1575
          CFI EndBlock cfiCond1576
          CFI EndBlock cfiCond1577
          CFI EndBlock cfiCond1578
          CFI EndBlock cfiCond1579
          CFI EndBlock cfiCond1580
          CFI EndBlock cfiCond1581
          CFI EndBlock cfiCond1582
          CFI EndBlock cfiCond1583
          CFI EndBlock cfiCond1584
          CFI EndBlock cfiCond1585
          CFI EndBlock cfiCond1586
          CFI EndBlock cfiCond1587
          CFI EndBlock cfiPicker1588

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine80:
          CFI Block cfiCond1589 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1590 Using cfiCommon0
          CFI (cfiCond1590) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1590) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond1590) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1590) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1590) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1590) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1590) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1590) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1590) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1590) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1590) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1590) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1590) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1590) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1590) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1590) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1590) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1591 Using cfiCommon1
          CFI (cfiPicker1591) NoFunction
          CFI (cfiPicker1591) Picker
        LCALL     ?Subroutine165 & 0xFFFF
??CrossCallReturnLabel_286:
        RET
          CFI EndBlock cfiCond1589
          CFI EndBlock cfiCond1590
          CFI EndBlock cfiPicker1591

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine165:
          CFI Block cfiCond1592 Using cfiCommon0
          CFI Function ZDO_ProcessParentAnnce
          CFI Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_116
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 37)
          CFI Block cfiCond1593 Using cfiCommon0
          CFI (cfiCond1593) Function ZDO_ProcessParentAnnceRsp
          CFI (cfiCond1593) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_117
          CFI (cfiCond1593) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1593) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1593) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1593) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1593) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1593) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1593) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1593) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1593) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1593) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1593) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1593) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1593) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1593) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1593) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1593) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1593) CFA_SP SP+-4
          CFI (cfiCond1593) CFA_XSP16 add(XSP16, 20)
          CFI Block cfiCond1594 Using cfiCommon0
          CFI (cfiCond1594) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1594) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_134
          CFI (cfiCond1594) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1594) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1594) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1594) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1594) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1594) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1594) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1594) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1594) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1594) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1594) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1594) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1594) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1594) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1594) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1594) CFA_SP SP+-4
          CFI (cfiCond1594) CFA_XSP16 add(XSP16, 36)
          CFI Block cfiCond1595 Using cfiCommon0
          CFI (cfiCond1595) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1595) Conditional ??CrossCallReturnLabel_286, ??CrossCallReturnLabel_135
          CFI (cfiCond1595) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1595) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1595) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1595) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1595) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1595) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1595) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1595) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1595) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1595) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1595) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1595) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1595) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1595) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1595) CFA_SP SP+-5
          CFI (cfiCond1595) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1596 Using cfiCommon1
          CFI (cfiPicker1596) NoFunction
          CFI (cfiPicker1596) Picker
        LCALL     ?Subroutine193 & 0xFFFF
??CrossCallReturnLabel_696:
        ADD       A,#0x9
        MOV       DPL,A
        CLR       A
        ADDC      A,R0
        MOV       DPH,A
        RET
          CFI EndBlock cfiCond1592
          CFI EndBlock cfiCond1593
          CFI EndBlock cfiCond1594
          CFI EndBlock cfiCond1595
          CFI EndBlock cfiPicker1596

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine61:
          CFI Block cfiCond1597 Using cfiCommon0
          CFI Function ZDO_ProcessMatchDescReq
          CFI Conditional ??CrossCallReturnLabel_103
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1598 Using cfiCommon0
          CFI (cfiCond1598) Function ZDO_ProcessMatchDescReq
          CFI (cfiCond1598) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond1598) R6 load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1598) VB load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1598) V0 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1598) V1 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1598) V2 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1598) V3 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1598) V4 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1598) V5 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1598) V6 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1598) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1598) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1598) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1598) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1598) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1598) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1598) CFA_SP SP+-2
          CFI (cfiCond1598) CFA_XSP16 add(XSP16, 34)
          CFI Block cfiCond1599 Using cfiCommon0
          CFI (cfiCond1599) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1599) Conditional ??CrossCallReturnLabel_105
          CFI (cfiCond1599) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1599) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1599) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1599) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1599) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1599) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1599) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1599) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1599) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1599) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1599) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1599) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1599) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1599) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1599) CFA_SP SP+-2
          CFI (cfiCond1599) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1600 Using cfiCommon1
          CFI (cfiPicker1600) NoFunction
          CFI (cfiPicker1600) Picker
        LCALL     ?Subroutine170 & 0xFFFF
??CrossCallReturnLabel_529:
        MOV       ?V2,#0x0
        MOV       R0,#?V0
        RET
          CFI EndBlock cfiCond1597
          CFI EndBlock cfiCond1598
          CFI EndBlock cfiCond1599
          CFI EndBlock cfiPicker1600

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine32:
          CFI Block cfiCond1601 Using cfiCommon0
          CFI Function ZDO_ParseEndDeviceBindReq
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1602 Using cfiCommon0
          CFI (cfiCond1602) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1602) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond1602) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1602) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1602) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1602) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1602) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1602) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1602) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1602) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1602) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1602) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1602) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1602) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1602) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1602) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1602) CFA_SP SP+-2
          CFI (cfiCond1602) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1603 Using cfiCommon1
          CFI (cfiPicker1603) NoFunction
          CFI (cfiPicker1603) Picker
        MOVX      @DPTR,A
        LCALL     ?Subroutine182 & 0xFFFF
??CrossCallReturnLabel_302:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1601
          CFI EndBlock cfiCond1602
          CFI EndBlock cfiPicker1603

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine8:
          CFI Block cfiCond1604 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateNotify
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 22)
          CFI Block cfiCond1605 Using cfiCommon0
          CFI (cfiCond1605) Function ZDO_ParseMgmtNwkUpdateNotify
          CFI (cfiCond1605) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond1605) R6 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1605) VB load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1605) V0 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1605) V1 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1605) V2 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1605) V3 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1605) V4 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1605) V5 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1605) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1605) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1605) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1605) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1605) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1605) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1605) CFA_SP SP+-2
          CFI (cfiCond1605) CFA_XSP16 add(XSP16, 22)
          CFI Block cfiPicker1606 Using cfiCommon1
          CFI (cfiPicker1606) NoFunction
          CFI (cfiPicker1606) Picker
        MOV       R0,A
        INC       DPTR
        MOVX      A,@DPTR
        ADDC      A,#0x0
        MOV       R1,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine149 & 0xFFFF
??CrossCallReturnLabel_448:
        LCALL     ?Subroutine194 & 0xFFFF
??CrossCallReturnLabel_376:
        MOV       R2,A
        MOV       DPL,?XSP + 0
        MOV       DPH,?XSP + 1
        LCALL     ?Subroutine176 & 0xFFFF
??CrossCallReturnLabel_657:
        MOVX      A,@DPTR
        RET
          CFI EndBlock cfiCond1604
          CFI EndBlock cfiCond1605
          CFI EndBlock cfiPicker1606
// 3706 
// 3707 /*********************************************************************
// 3708  * @fn          ZDO_ParseMgmtNwkUpdateReq
// 3709  *
// 3710  * @brief       This function handles parsing the incoming Management
// 3711  *              Network Update request and starts the request (if needed).
// 3712  *
// 3713  * @param       inMsg - incoming message (request)
// 3714  * @param       pReq - pointer to place to parse message to
// 3715  *
// 3716  * @return      none
// 3717  */

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
// 3718 void ZDO_ParseMgmtNwkUpdateReq( zdoIncomingMsg_t *inMsg, ZDO_MgmtNwkUpdateReq_t *pReq )
ZDO_ParseMgmtNwkUpdateReq:
          CFI Block cfiBlock1607 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
        CODE
// 3719 {
        FUNCALL ZDO_ParseMgmtNwkUpdateReq, osal_build_uint32
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 10, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 10, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        REQUIRE ?V0
        REQUIRE ?V1
        MOV       A,#-0xa
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 10)
        ; Saved register size: 10
        ; Auto size: 0
        LCALL     ?Subroutine123 & 0xFFFF
// 3720   uint8 *msg = inMsg->asdu;
??CrossCallReturnLabel_635:
        LCALL     ?Subroutine89 & 0xFFFF
// 3721 
// 3722   pReq->channelMask = osal_build_uint32( msg, 4 );
??CrossCallReturnLabel_147:
        LCALL     `??osal_build_uint32::?relay`; Banked call to: osal_build_uint32
        MOV       A,R2
        MOV       R0,A
        MOV       A,R3
        MOV       R1,A
        MOV       A,R4
        MOV       R2,A
        MOV       A,R5
        MOV       R3,A
        MOV       DPL,?V0
        MOV       DPH,?V1
        LCALL     ?XSTORE_R0123
// 3723   msg += 4;
// 3724   pReq->scanDuration = *msg++;
        MOV       DPL,R6
        MOV       DPH,R7
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R2,A
        MOV       A,?V0
        ADD       A,#0x4
        MOV       R0,A
        CLR       A
        ADDC      A,?V1
        MOV       R1,A
        MOV       A,R2
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      @DPTR,A
// 3725 
// 3726   if ( pReq->scanDuration <= 0x05 )
        CLR       C
        SUBB      A,#0x6
        JNC       ??ZDO_ParseMgmtNwkUpdateReq_0
// 3727   {
// 3728     // Request is to scan over channelMask
// 3729     pReq->scanCount = *msg;
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine191 & 0xFFFF
// 3730   }
??CrossCallReturnLabel_318:
        SJMP      ??ZDO_ParseMgmtNwkUpdateReq_1
// 3731   else if ( ( pReq->scanDuration == 0xFE ) || ( pReq->scanDuration == 0xFF ) )
??ZDO_ParseMgmtNwkUpdateReq_0:
        MOV       A,#-0x2
        XRL       A,R2
        JZ        ??ZDO_ParseMgmtNwkUpdateReq_2
        MOV       A,#-0x1
        XRL       A,R2
        JNZ       ??ZDO_ParseMgmtNwkUpdateReq_3
// 3732   {
// 3733     // Request is to change Channel (0xFE) or apsChannelMask and NwkManagerAddr (0xFF)
// 3734     pReq->nwkUpdateId = *msg++;
??ZDO_ParseMgmtNwkUpdateReq_2:
        MOV       DPL,R6
        MOV       DPH,R7
        LCALL     ?Subroutine84 & 0xFFFF
??CrossCallReturnLabel_141:
        MOVX      @DPTR,A
        MOV       A,R6
        ADD       A,#0x6
        MOV       R6,A
        JNC       ??ZDO_ParseMgmtNwkUpdateReq_4
        INC       R7
// 3735 
// 3736     if ( pReq->scanDuration == 0xFF )
??ZDO_ParseMgmtNwkUpdateReq_4:
        MOV       DPL,R0
        MOV       DPH,R1
        MOVX      A,@DPTR
        CPL       A
        JNZ       ??ZDO_ParseMgmtNwkUpdateReq_3
// 3737     {
// 3738       pReq->nwkManagerAddr = BUILD_UINT16( msg[0], msg[1] );
        LCALL     ?Subroutine63 & 0xFFFF
// 3739     }
// 3740   }
??CrossCallReturnLabel_109:
        MOVX      @DPTR,A
        INC       DPTR
        MOV       A,R1
??ZDO_ParseMgmtNwkUpdateReq_1:
        MOVX      @DPTR,A
// 3741 }
??ZDO_ParseMgmtNwkUpdateReq_3:
        LJMP      ??Subroutine203_0 & 0xFFFF
          CFI EndBlock cfiBlock1607

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine89:
          CFI Block cfiCond1608 Using cfiCommon0
          CFI Function ZDO_ProcessMgmtNwkDiscReq
          CFI Conditional ??CrossCallReturnLabel_146
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 17)
          CFI Block cfiCond1609 Using cfiCommon0
          CFI (cfiCond1609) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1609) Conditional ??CrossCallReturnLabel_147
          CFI (cfiCond1609) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1609) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1609) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1609) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1609) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1609) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1609) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1609) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1609) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1609) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1609) CFA_SP SP+-2
          CFI (cfiCond1609) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1610 Using cfiCommon1
          CFI (cfiPicker1610) NoFunction
          CFI (cfiPicker1610) Picker
        LCALL     ?Subroutine174 & 0xFFFF
??CrossCallReturnLabel_457:
        ; Setup parameters for call to function osal_build_uint32
        ; Setup parameters for call to function osal_build_uint32
        MOV       R1,#0x4
        MOV       A,R6
        MOV       R2,A
        MOV       A,R7
        MOV       R3,A
        RET
          CFI EndBlock cfiCond1608
          CFI EndBlock cfiCond1609
          CFI EndBlock cfiPicker1610

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine84:
          CFI Block cfiCond1611 Using cfiCommon0
          CFI Function ZDO_ParseDeviceAnnce
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1612 Using cfiCommon0
          CFI (cfiCond1612) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1612) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond1612) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1612) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1612) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1612) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1612) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1612) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1612) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1612) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1612) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1612) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1612) CFA_SP SP+-2
          CFI (cfiCond1612) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1613 Using cfiCommon1
          CFI (cfiPicker1613) NoFunction
          CFI (cfiPicker1613) Picker
        LCALL     ?Subroutine168 & 0xFFFF
??CrossCallReturnLabel_290:
        RET
          CFI EndBlock cfiCond1611
          CFI EndBlock cfiCond1612
          CFI EndBlock cfiPicker1613

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine168:
          CFI Block cfiCond1614 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_614
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1615 Using cfiCommon0
          CFI (cfiCond1615) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1615) Conditional ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_615
          CFI (cfiCond1615) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1615) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1615) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1615) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1615) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1615) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1615) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1615) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1615) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1615) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1615) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1615) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1615) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1615) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1615) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1615) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1615) CFA_SP SP+-4
          CFI (cfiCond1615) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1616 Using cfiCommon0
          CFI (cfiCond1616) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1616) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_140
          CFI (cfiCond1616) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1616) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1616) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1616) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1616) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1616) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1616) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1616) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1616) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1616) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1616) CFA_SP SP+-4
          CFI (cfiCond1616) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1617 Using cfiCommon0
          CFI (cfiCond1617) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1617) Conditional ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_141
          CFI (cfiCond1617) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1617) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1617) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1617) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1617) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1617) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1617) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1617) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1617) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1617) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1617) CFA_SP SP+-4
          CFI (cfiCond1617) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1618 Using cfiCommon1
          CFI (cfiPicker1618) NoFunction
          CFI (cfiPicker1618) Picker
        LCALL     ?Subroutine191 & 0xFFFF
??CrossCallReturnLabel_319:
        INC       DPTR
        RET
          CFI EndBlock cfiCond1614
          CFI EndBlock cfiCond1615
          CFI EndBlock cfiCond1616
          CFI EndBlock cfiCond1617
          CFI EndBlock cfiPicker1618

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine191:
          CFI Block cfiCond1619 Using cfiCommon0
          CFI Function ZDO_ParseMgmtNwkUpdateReq
          CFI Conditional ??CrossCallReturnLabel_318
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1620 Using cfiCommon0
          CFI (cfiCond1620) Function ZDO_ParseBindUnbindReq
          CFI (cfiCond1620) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_614
          CFI (cfiCond1620) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1620) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1620) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1620) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1620) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1620) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1620) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1620) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1620) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1620) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1620) CFA_SP SP+-6
          CFI (cfiCond1620) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1621 Using cfiCommon0
          CFI (cfiCond1621) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1621) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_289, ??CrossCallReturnLabel_615
          CFI (cfiCond1621) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1621) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1621) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1621) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1621) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1621) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1621) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1621) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1621) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1621) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1621) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1621) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1621) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1621) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1621) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1621) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1621) CFA_SP SP+-6
          CFI (cfiCond1621) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1622 Using cfiCommon0
          CFI (cfiCond1622) Function ZDO_ParseDeviceAnnce
          CFI (cfiCond1622) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_140
          CFI (cfiCond1622) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1622) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1622) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1622) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1622) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1622) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1622) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1622) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1622) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1622) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1622) CFA_SP SP+-6
          CFI (cfiCond1622) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1623 Using cfiCommon0
          CFI (cfiCond1623) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1623) Conditional ??CrossCallReturnLabel_319, ??CrossCallReturnLabel_290, ??CrossCallReturnLabel_141
          CFI (cfiCond1623) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1623) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1623) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1623) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1623) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1623) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1623) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1623) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1623) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1623) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1623) CFA_SP SP+-6
          CFI (cfiCond1623) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1624 Using cfiCommon1
          CFI (cfiPicker1624) NoFunction
          CFI (cfiPicker1624) Picker
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        MOVX      A,@DPTR
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1619
          CFI EndBlock cfiCond1620
          CFI EndBlock cfiCond1621
          CFI EndBlock cfiCond1622
          CFI EndBlock cfiCond1623
          CFI EndBlock cfiPicker1624

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine63:
          CFI Block cfiCond1625 Using cfiCommon0
          CFI Function ZDO_ParseMgmNwkDiscRsp
          CFI Conditional ??CrossCallReturnLabel_108
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-2
          CFI CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1626 Using cfiCommon0
          CFI (cfiCond1626) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1626) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond1626) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1626) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1626) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1626) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1626) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1626) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1626) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1626) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1626) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1626) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1626) CFA_SP SP+-2
          CFI (cfiCond1626) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1627 Using cfiCommon1
          CFI (cfiPicker1627) NoFunction
          CFI (cfiPicker1627) Picker
        LCALL     ?Subroutine162 & 0xFFFF
??CrossCallReturnLabel_280:
        RET
          CFI EndBlock cfiCond1625
          CFI EndBlock cfiCond1626
          CFI EndBlock cfiPicker1627

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine162:
          CFI Block cfiCond1628 Using cfiCommon0
          CFI Function ZDO_ParseBindUnbindReq
          CFI Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_4
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI CFA_SP SP+-4
          CFI CFA_XSP16 add(XSP16, 10)
          CFI Block cfiCond1629 Using cfiCommon0
          CFI (cfiCond1629) Function ZDO_ParseMgmtBindRsp
          CFI (cfiCond1629) Conditional ??CrossCallReturnLabel_279, ??CrossCallReturnLabel_5
          CFI (cfiCond1629) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1629) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1629) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1629) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1629) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1629) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1629) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1629) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1629) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1629) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1629) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1629) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1629) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1629) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1629) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1629) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1629) CFA_SP SP+-4
          CFI (cfiCond1629) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1630 Using cfiCommon0
          CFI (cfiCond1630) Function ZDO_ParseMgmNwkDiscRsp
          CFI (cfiCond1630) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_108
          CFI (cfiCond1630) R6 load(1, XDATA, add(CFA_XSP16, literal(-16)))
          CFI (cfiCond1630) VB load(1, XDATA, add(CFA_XSP16, literal(-15)))
          CFI (cfiCond1630) V0 load(1, XDATA, add(CFA_XSP16, literal(-14)))
          CFI (cfiCond1630) V1 load(1, XDATA, add(CFA_XSP16, literal(-13)))
          CFI (cfiCond1630) V2 load(1, XDATA, add(CFA_XSP16, literal(-12)))
          CFI (cfiCond1630) V3 load(1, XDATA, add(CFA_XSP16, literal(-11)))
          CFI (cfiCond1630) V4 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1630) V5 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1630) V6 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1630) V7 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1630) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1630) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1630) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1630) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1630) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1630) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1630) CFA_SP SP+-4
          CFI (cfiCond1630) CFA_XSP16 add(XSP16, 16)
          CFI Block cfiCond1631 Using cfiCommon0
          CFI (cfiCond1631) Function ZDO_ParseMgmtNwkUpdateReq
          CFI (cfiCond1631) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_109
          CFI (cfiCond1631) R6 load(1, XDATA, add(CFA_XSP16, literal(-10)))
          CFI (cfiCond1631) VB load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI (cfiCond1631) V0 load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI (cfiCond1631) V1 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI (cfiCond1631) R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI (cfiCond1631) ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI (cfiCond1631) ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI (cfiCond1631) ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI (cfiCond1631) DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI (cfiCond1631) DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI (cfiCond1631) CFA_SP SP+-4
          CFI (cfiCond1631) CFA_XSP16 add(XSP16, 10)
          CFI Block cfiPicker1632 Using cfiCommon1
          CFI (cfiPicker1632) NoFunction
          CFI (cfiPicker1632) Picker
        MOV       DPL,R6
        MOV       DPH,R7
        MOVX      A,@DPTR
        MOV       R2,A
        INC       DPTR
        MOVX      A,@DPTR
        MOV       R1,A
        MOV       A,R2
        MOV       DPL,?V0
        MOV       DPH,?V1
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        INC       DPTR
        RET
          CFI EndBlock cfiCond1628
          CFI EndBlock cfiCond1629
          CFI EndBlock cfiCond1630
          CFI EndBlock cfiCond1631
          CFI EndBlock cfiPicker1632

        RSEG XDATA_ID:CODE:NOROOT(0)
`?<Initializer for zdpExternalStateTaskID>`:
        DATA16
        DW -1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_Init::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_Init

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_StartDevice::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_StartDevice

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??zdoSendStateChangeMsg::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    zdoSendStateChangeMsg

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateNwkStatus::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateNwkStatus

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CompareClusterLists::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CompareClusterLists

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_AnyClusterMatches::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_AnyClusterMatches

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessNodeDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessNodeDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessNodeDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessPowerDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessPowerDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessSimpleDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessSimpleDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessActiveEPReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessActiveEPReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ConvertOTAClusters::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ConvertOTAClusters

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMatchDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMatchDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_UpdateAddrManager::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_UpdateAddrManager

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessServerDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessServerDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLqiReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLqiReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtNwkDiscReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtNwkDiscReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtRtgReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtRtgReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtDirectJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtDirectJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtLeaveReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtLeaveReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessMgmtPermitJoinReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessMgmtPermitJoinReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??NLME_PermitJoiningTimeout::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    NLME_PermitJoiningTimeout

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessUserDescSet::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessUserDescSet

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ProcessParentAnnceRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ProcessParentAnnceRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_BuildSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_BuildSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_MatchEndDeviceBind::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_MatchEndDeviceBind

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_RemoveMatchMemory::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_RemoveMatchMemory

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_CopyMatchInfo::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_CopyMatchInfo

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDMatchSendState::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDMatchSendState

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_EndDeviceBindMatchTimeoutCB::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_EndDeviceBindMatchTimeoutCB

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEndDeviceBindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEndDeviceBindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseBindUnbindReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseBindUnbindReq

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseAddrRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseAddrRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseNodeDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseNodeDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParsePowerDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParsePowerDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseEPListRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseEPListRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseServerDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseServerDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtLqiRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtLqiRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmNwkDiscRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmNwkDiscRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtRtgRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtRtgRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtBindRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtBindRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseUserDescRsp::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseUserDescRsp

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseSimpleDescBuf::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseSimpleDescBuf

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseDeviceAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseDeviceAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseParentAnnce::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseParentAnnce

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateNotify::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateNotify

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??ZDO_ParseMgmtNwkUpdateReq::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    ZDO_ParseMgmtNwkUpdateReq

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA8
`?<Constant {255, 255, 255, 255, 255, 255, 255,`:
        DB 255
        DB 255
        DB 255
        DB 255
        DB 255
        DB 255
        DB 255
        DB 255

        RSEG XDATA_ROM_C:CONST:REORDER:NOROOT(0)
        DATA32
__Constant_3e8:
        DD 1000

        END
// 3742 
// 3743 /*********************************************************************
// 3744 *********************************************************************/
// 
// 13 685 bytes in segment BANKED_CODE
//    330 bytes in segment BANK_RELAYS
//      2 bytes in segment XDATA_I
//      2 bytes in segment XDATA_ID
//     12 bytes in segment XDATA_ROM_C
//     60 bytes in segment XDATA_Z
// 
//    332 bytes of CODE     memory
//      8 bytes of CONST    memory (+ 4 bytes shared)
// 13 685 bytes of HUGECODE memory
//     62 bytes of XDATA    memory
//
//Errors: none
//Warnings: none
