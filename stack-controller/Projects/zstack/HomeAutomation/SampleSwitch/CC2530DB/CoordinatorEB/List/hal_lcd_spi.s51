///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V10.10.1.4655 for 8051              22/Nov/2023  15:42:41
// Copyright 2004-2017 IAR Systems AB.
// Standalone license - IAR Embedded Workbench for 8051
//
//    Core               =  plain
//    Code model         =  banked
//    Data model         =  large
//    Calling convention =  xdata reentrant
//    Constant location  =  data_rom
//    Dptr setup         =  1,16
//                          
//    Source file        =  
//        D:\fuzzing-coordinator-response-collection\Components\hal\target\CC2530EB\HW_LCD\HAL_LCD_SPI\hal_lcd_spi.c
//    Command line       =  
//        -f C:\Users\ADMINI~1\AppData\Local\Temp\EWA06A.tmp
//        (D:\fuzzing-coordinator-response-collection\Components\hal\target\CC2530EB\HW_LCD\HAL_LCD_SPI\hal_lcd_spi.c
//        -D SECURE=1 -D TC_LINKKEY_JOIN -D NV_INIT -D NV_RESTORE -D
//        MULTICAST_ENABLED=FALSE -D ZCL_READ -D ZCL_DISCOVER -D ZCL_WRITE -D
//        ZCL_BASIC -D ZCL_IDENTIFY -D ISR_KEYINTERRUPT -D HAL_UART=TRUE -D
//        HAL_LCD=FALSE -D ZCL_ON_OFF -D INT_HEAP_LEN=2800 -D
//        HAL_UART_DMA_RX_MAX=256 -D HAL_UART_DMA_TX_MAX=256 -lC
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List
//        -lA
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List
//        --diag_suppress Pe001,Pa010 -o
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\Obj
//        -e --debug --core=plain --dptr=16,1 --data_model=large
//        --code_model=banked --calling_convention=xdata_reentrant
//        --place_constants=data_rom --nr_virtual_regs 8 -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wCoord.cfg
//        (-DCPU32MHZ -DROOT=__near_func -DMAC_CFG_APP_PENDING_QUEUE=TRUE
//        -DMAC_CFG_TX_DATA_MAX=5 -DMAC_CFG_TX_MAX=8 -DMAC_CFG_RX_MAX=5
//        -DZDO_COORDINATOR -DRTR_NWK) -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wConfig.cfg
//        (-DZIGBEEPRO -DSECURE=1 -DZG_SECURE_DYNAMIC=0 -DREFLECTOR
//        -DDEFAULT_CHANLIST=0x00000800 -DZDAPP_CONFIG_PAN_ID=0xFFFF
//        -DNWK_START_DELAY=100 -DEXTENDED_JOINING_RANDOM_MASK=0x007F
//        -DBEACON_REQUEST_DELAY=100 -DBEACON_REQ_DELAY_MASK=0x00FF
//        -DLINK_STATUS_JITTER_MASK=0x007F -DROUTE_EXPIRY_TIME=30
//        -DAPSC_ACK_WAIT_DURATION_POLLED=3000 -DNWK_INDIRECT_MSG_TIMEOUT=7
//        -DMAX_RREQ_ENTRIES=8 -DAPSC_MAX_FRAME_RETRIES=3
//        -DNWK_MAX_DATA_RETRIES=2 -DMAX_POLL_FAILURE_RETRIES=2 -DMAX_BCAST=9
//        -DAPS_MAX_GROUPS=16 -DMAX_RTG_ENTRIES=40 -DNWK_MAX_BINDING_ENTRIES=4
//        -DMAX_BINDING_CLUSTER_IDS=4 "-DDEFAULT_KEY={0x00, 0x01, 0x02, 0x03,
//        0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E,
//        0x0F}" -DMAC_MAX_FRAME_SIZE=116 -DZDNWKMGR_MIN_TRANSMISSIONS=20
//        "-DCONST=const __code" -DGENERIC=__generic -DRFD_RCVC_ALWAYS_ON=FALSE
//        -DPOLL_RATE=1000 -DQUEUED_POLL_RATE=100 -DRESPONSE_POLL_RATE=100
//        -DREJOIN_POLL_RATE=440 -DREJOIN_BACKOFF=900000 -DREJOIN_SCAN=900000
//        -DENABLE_LED4_DISABLE_S1) -f
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\Tools\CC2530DB\f8wZCL.cfg
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\Source\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\Source\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\ZMain\TI2530DB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\high_level\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mac\low_level\srf04\single_chip\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\mt\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\osal\include\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\saddr\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\services\sdata\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\af\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\bdb\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\gp\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\nwk\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sapi\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sec\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\sys\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zcl\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\stack\zdo\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\zmac\f8w\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\Common\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\SPI\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\Font\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_LCD_SPI\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_OLED\
//        -I
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\..\..\..\..\..\Components\hal\target\CC2530EB\HW_LCD\HAL_TFT\
//        -Ohz --require_prototypes)
//    Locale             =  Chinese (Simplified)_China.936
//    List file          =  
//        D:\fuzzing-coordinator-response-collection\Projects\zstack\HomeAutomation\SampleSwitch\CC2530DB\CoordinatorEB\List\hal_lcd_spi.s51
//
///////////////////////////////////////////////////////////////////////////////

        NAME hal_lcd_spi

        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__calling_convention", "xdata_reentrant"
        RTMODEL "__code_model", "banked"
        RTMODEL "__core", "plain"
        RTMODEL "__data_model", "large"
        RTMODEL "__dptr_size", "16"
        RTMODEL "__extended_stack", "disabled"
        RTMODEL "__location_for_constants", "data"
        RTMODEL "__number_of_dptrs", "1"
        RTMODEL "__register_banks", "*"
        RTMODEL "__rt_version", "1"

        RSEG DOVERLAY:DATA:NOROOT(0)
        RSEG IOVERLAY:IDATA:NOROOT(0)
        RSEG ISTACK:IDATA:NOROOT(0)
        RSEG PSTACK:XDATA:NOROOT(0)
        RSEG XSTACK:XDATA:NOROOT(0)

        EXTERN ?BANKED_ENTER_XDATA
        EXTERN ?BANKED_LEAVE_XDATA
        EXTERN ?BDISPATCH
        EXTERN ?BRET

        PUBLIC `??halLcdSpiInit::?relay`
        FUNCTION `??halLcdSpiInit::?relay`,0203H
        FUNCTION `??halLcdSpiTxByte::?relay`,0203H
        PUBLIC `??halLcdSpiTxCmd::?relay`
        FUNCTION `??halLcdSpiTxCmd::?relay`,0203H
        PUBLIC `??halLcdSpiTxData::?relay`
        FUNCTION `??halLcdSpiTxData::?relay`,0203H
        PUBWEAK P1DIR
        PUBWEAK P1INP
        PUBWEAK P1SEL
        PUBWEAK P2DIR
        PUBWEAK P2INP
        PUBWEAK P2SEL
        PUBWEAK _A_P1
        PUBWEAK _A_P2
        PUBLIC halLcdSpiInit
        FUNCTION halLcdSpiInit,0203H
        ARGFRAME XSTACK, 0, STACK
        FUNCTION halLcdSpiTxByte,0203H
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        PUBLIC halLcdSpiTxCmd
        FUNCTION halLcdSpiTxCmd,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        PUBLIC halLcdSpiTxData
        FUNCTION halLcdSpiTxData,021203H
        ARGFRAME XSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        
          CFI Names cfiNames0
          CFI StackFrame CFA_SP SP IDATA
          CFI StackFrame CFA_PSP16 PSP16 XDATA
          CFI StackFrame CFA_XSP16 XSP16 XDATA
          CFI StaticOverlayFrame CFA_IOVERLAY IOVERLAY
          CFI StaticOverlayFrame CFA_DOVERLAY DOVERLAY
          CFI Resource `PSW.CY`:1, `B.BR0`:1, `B.BR1`:1, `B.BR2`:1, `B.BR3`:1
          CFI Resource `B.BR4`:1, `B.BR5`:1, `B.BR6`:1, `B.BR7`:1, `VB.BR8`:1
          CFI Resource `VB.BR9`:1, `VB.BR10`:1, `VB.BR11`:1, `VB.BR12`:1
          CFI Resource `VB.BR13`:1, `VB.BR14`:1, `VB.BR15`:1, VB:8, B:8, A:8
          CFI Resource PSW:8, DPL0:8, DPH0:8, R0:8, R1:8, R2:8, R3:8, R4:8, R5:8
          CFI Resource R6:8, R7:8, V0:8, V1:8, V2:8, V3:8, V4:8, V5:8, V6:8, V7:8
          CFI Resource SP:8, PSPH:8, PSPL:8, PSP16:16, XSPH:8, XSPL:8, XSP16:16
          CFI VirtualResource ?RET:24
          CFI Resource ?BRET_EXT:8
          CFI VirtualResource ?RET_HIGH:8, ?RET_LOW:8
          CFI ResourceParts PSP16 PSPH, PSPL
          CFI ResourceParts XSP16 XSPH, XSPL
          CFI ResourceParts ?RET ?BRET_EXT, ?RET_HIGH, ?RET_LOW
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign -1
          CFI ReturnAddress ?RET CODE
          CFI CFA_DOVERLAY Used
          CFI CFA_IOVERLAY Used
          CFI CFA_SP SP+-3
          CFI CFA_PSP16 PSP16+0
          CFI CFA_XSP16 XSP16+0
          CFI `PSW.CY` SameValue
          CFI `B.BR0` SameValue
          CFI `B.BR1` SameValue
          CFI `B.BR2` SameValue
          CFI `B.BR3` SameValue
          CFI `B.BR4` SameValue
          CFI `B.BR5` SameValue
          CFI `B.BR6` SameValue
          CFI `B.BR7` SameValue
          CFI `VB.BR8` SameValue
          CFI `VB.BR9` SameValue
          CFI `VB.BR10` SameValue
          CFI `VB.BR11` SameValue
          CFI `VB.BR12` SameValue
          CFI `VB.BR13` SameValue
          CFI `VB.BR14` SameValue
          CFI `VB.BR15` SameValue
          CFI VB SameValue
          CFI B Undefined
          CFI A Undefined
          CFI PSW SameValue
          CFI DPL0 SameValue
          CFI DPH0 SameValue
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 Undefined
          CFI R5 Undefined
          CFI R6 SameValue
          CFI R7 SameValue
          CFI V0 SameValue
          CFI V1 SameValue
          CFI V2 SameValue
          CFI V3 SameValue
          CFI V4 SameValue
          CFI V5 SameValue
          CFI V6 SameValue
          CFI V7 SameValue
          CFI PSPH Undefined
          CFI PSPL Undefined
          CFI XSPH Undefined
          CFI XSPL Undefined
          CFI ?RET Concat
          CFI ?BRET_EXT Frame(CFA_SP, 3)
          CFI ?RET_HIGH Frame(CFA_SP, 2)
          CFI ?RET_LOW Frame(CFA_SP, 1)
          CFI EndCommon cfiCommon0
        
halLcdSpiInit       SYMBOL "halLcdSpiInit"
`??halLcdSpiInit::?relay` SYMBOL "?relay", halLcdSpiInit
halLcdSpiTxCmd      SYMBOL "halLcdSpiTxCmd"
`??halLcdSpiTxCmd::?relay` SYMBOL "?relay", halLcdSpiTxCmd
halLcdSpiTxData     SYMBOL "halLcdSpiTxData"
`??halLcdSpiTxData::?relay` SYMBOL "?relay", halLcdSpiTxData

// D:\fuzzing-coordinator-response-collection\Components\hal\target\CC2530EB\HW_LCD\HAL_LCD_SPI\hal_lcd_spi.c
//    1 /**
//    2  * Copyright (c) 2020~2022 iotlucker.com, All Rights Reserved.
//    3  *
//    4  * @Official Store: https://shop233815998.taobao.com
//    5  * @Official Website & Online document: http://www.iotlucker.com
//    6  * @WeChat Official Accounts: shanxuefang_iot
//    7  * @Support: 1915912696@qq.com
//    8  */
//    9 #include "hal_lcd_spi.h"

        ASEGN SFR_AN:DATA:NOROOT,090H
// union <unnamed> volatile __sfr _A_P1
_A_P1:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0a0H
// union <unnamed> volatile __sfr _A_P2
_A_P2:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f4H
// unsigned char volatile __sfr P1SEL
P1SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f5H
// unsigned char volatile __sfr P2SEL
P2SEL:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f6H
// unsigned char volatile __sfr P1INP
P1INP:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0f7H
// unsigned char volatile __sfr P2INP
P2INP:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0feH
// unsigned char volatile __sfr P1DIR
P1DIR:
        DATA8
        DS 1

        ASEGN SFR_AN:DATA:NOROOT,0ffH
// unsigned char volatile __sfr P2DIR
P2DIR:
        DATA8
        DS 1
//   10 #include <stdarg.h>
//   11 
//   12 static void halLcdSpiTxByte(uint8 b);
//   13 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   14 void halLcdSpiInit(void)
halLcdSpiInit:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function halLcdSpiInit
        CODE
//   15 {
        ; Saved register size: 0
        ; Auto size: 0
//   16 #ifdef HAL_LCD_SPI_SW
//   17     SW_SPI_INIT_CLK(HAL_LCD_SPI_SCK_PORT, HAL_LCD_SPI_SCK_PIN,SPI_CPOL_HIGH);
        ORL       0xfe,#0x20
        ANL       0xf4,#0xdf
        SETB      0x90.5
//   18     SW_SPI_INIT_MOSI(HAL_LCD_SPI_SDA_PORT, HAL_LCD_SPI_SDA_PIN);
        ORL       0xfe,#0x40
        ANL       0xf4,#0xbf
//   19 #else
//   20     HwSPICfg_t cfg = {
//   21         .alternate = HW_SPI1_ALT2,
//   22         .bitOrder  = HW_SPI_BITORDER_MSB,
//   23         .CPOL      = HW_SPI_CPOL_HIGH,
//   24         .CPHA      = HW_SPI_CPHA_SECOND,
//   25     };
//   26     
//   27     HwSPIInit(&cfg);
//   28 #endif
//   29     
//   30     SPI_CS_INIT(HAL_LCD_SPI_CS_PORT, HAL_LCD_SPI_CS_PIN);
        ORL       0xff,#0x1
        ANL       0xf5,#0xfe
        SETB      0xa0.0
//   31     SPI_GPIO_OUTPUT(HAL_LCD_SPI_DC_PORT, HAL_LCD_SPI_DC_PIN);
        ORL       0xfe,#0x10
        ANL       0xf4,#0xef
//   32     SPI_GPIO_OUTPUT(HAL_LCD_SPI_RST_PORT, HAL_LCD_SPI_RST_PIN);
        ORL       0xfe,#0x1
        ANL       0xf4,#0xfe
//   33 }
        LJMP      ?BRET
          CFI EndBlock cfiBlock0
        REQUIRE P1DIR
        REQUIRE P1SEL
        REQUIRE P1INP
        REQUIRE P2INP
        REQUIRE _A_P1
        REQUIRE P2DIR
        REQUIRE P2SEL
        REQUIRE _A_P2
//   34 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   35 void halLcdSpiTxCmd(uint8 cmd)
halLcdSpiTxCmd:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function halLcdSpiTxCmd
        CODE
//   36 {
        FUNCALL halLcdSpiTxCmd, halLcdSpiTxByte
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   37     SPI_CS_SELECT(HAL_LCD_SPI_CS_PORT, HAL_LCD_SPI_CS_PIN);
        CLR       0xa0.0
//   38   
//   39     SPI_GPIO_CLEAR(HAL_LCD_SPI_DC_PORT, HAL_LCD_SPI_DC_PIN);
        CLR       0x90.4
//   40     halLcdSpiTxByte(cmd);
          CFI EndBlock cfiBlock1
        ; Setup parameters for call to function halLcdSpiTxByte
        REQUIRE ?Subroutine0
        REQUIRE _A_P2
        REQUIRE _A_P1
        ; // Fall through to label ?Subroutine0
//   41     
//   42     SPI_CS_RELEASE(HAL_LCD_SPI_CS_PORT, HAL_LCD_SPI_CS_PIN);
//   43 }

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
?Subroutine0:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI NoFunction
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
        LCALL     `??halLcdSpiTxByte::?relay`; Banked call to: halLcdSpiTxByte
        SETB      0xa0.0
        MOV       R7,#0x1
        LJMP      ?BANKED_LEAVE_XDATA
          CFI EndBlock cfiBlock2
//   44 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   45 void halLcdSpiTxData(uint8 dat)
halLcdSpiTxData:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function halLcdSpiTxData
        CODE
//   46 {
        FUNCALL halLcdSpiTxData, halLcdSpiTxByte
        LOCFRAME ISTACK, 0, STACK
        LOCFRAME PSTACK, 0, STACK
        LOCFRAME XSTACK, 9, STACK
        LOCFRAME IOVERLAY, 0, STATIC
        LOCFRAME DOVERLAY, 0, STATIC
        ARGFRAME ISTACK, 0, STACK
        ARGFRAME PSTACK, 0, STACK
        ARGFRAME XSTACK, 9, STACK
        ARGFRAME IOVERLAY, 0, STATIC
        ARGFRAME DOVERLAY, 0, STATIC
        MOV       A,#-0x9
        LCALL     ?BANKED_ENTER_XDATA
          CFI DPH0 load(1, XDATA, add(CFA_XSP16, literal(-1)))
          CFI DPL0 load(1, XDATA, add(CFA_XSP16, literal(-2)))
          CFI ?BRET_EXT load(1, XDATA, add(CFA_XSP16, literal(-3)))
          CFI ?RET_HIGH load(1, XDATA, add(CFA_XSP16, literal(-4)))
          CFI ?RET_LOW load(1, XDATA, add(CFA_XSP16, literal(-5)))
          CFI R7 load(1, XDATA, add(CFA_XSP16, literal(-6)))
          CFI V0 load(1, XDATA, add(CFA_XSP16, literal(-7)))
          CFI VB load(1, XDATA, add(CFA_XSP16, literal(-8)))
          CFI R6 load(1, XDATA, add(CFA_XSP16, literal(-9)))
          CFI CFA_SP SP+0
          CFI CFA_XSP16 add(XSP16, 9)
        ; Saved register size: 9
        ; Auto size: 0
//   47     SPI_CS_SELECT(HAL_LCD_SPI_CS_PORT, HAL_LCD_SPI_CS_PIN);
        CLR       0xa0.0
//   48     
//   49     SPI_GPIO_SET(HAL_LCD_SPI_DC_PORT, HAL_LCD_SPI_DC_PIN);
        SETB      0x90.4
//   50     halLcdSpiTxByte(dat);
        ; Setup parameters for call to function halLcdSpiTxByte
        SJMP      ?Subroutine0
          CFI EndBlock cfiBlock3
        REQUIRE _A_P2
        REQUIRE _A_P1
//   51     
//   52     SPI_CS_RELEASE(HAL_LCD_SPI_CS_PORT, HAL_LCD_SPI_CS_PIN);
//   53 }
//   54 

        RSEG BANKED_CODE:HUGECODE:NOROOT(0)
//   55 static void halLcdSpiTxByte(uint8 b)
halLcdSpiTxByte:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function halLcdSpiTxByte
        CODE
//   56 {
        ; Saved register size: 0
        ; Auto size: 0
//   57 #ifdef HAL_LCD_SPI_SW
//   58       SwSPITxByte(HAL_LCD_SPI_SCK_PORT, HAL_LCD_SPI_SCK_PIN,
//   59                   HAL_LCD_SPI_SDA_PORT, HAL_LCD_SPI_SDA_PIN,
//   60                   SPI_BITORDER_MSB,
//   61                   SPI_CPOL_HIGH, HW_SPI_CPHA_SECOND,
//   62                   b);
        MOV       R0,#0x8
??halLcdSpiTxByte_0:
        CLR       0x90.5
        MOV       A,R1
        MOV       C,0xE0 /* A   */.7
        JC        ??halLcdSpiTxByte_1
        CLR       0x90.6
        SJMP      ??halLcdSpiTxByte_2
??halLcdSpiTxByte_1:
        SETB      0x90.6
??halLcdSpiTxByte_2:
        CLR       C
        RLC       A
        MOV       R1,A
        SETB      0x90.5
        DEC       R0
        MOV       A,R0
        JNZ       ??halLcdSpiTxByte_0
//   63 #else
//   64       HwSPITxByte(HW_SPI1_ALT2, b);
//   65 #endif 
//   66 }
        LJMP      ?BRET
          CFI EndBlock cfiBlock4
        REQUIRE _A_P1

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??halLcdSpiInit::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    halLcdSpiInit

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??halLcdSpiTxCmd::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    halLcdSpiTxCmd

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??halLcdSpiTxData::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    halLcdSpiTxData

        RSEG BANK_RELAYS:CODE:REORDER:NOROOT(0)
`??halLcdSpiTxByte::?relay`:
        CODE
        LCALL   ?BDISPATCH
        DATA24
        DC24    halLcdSpiTxByte

        END
// 
// 94 bytes in segment BANKED_CODE
// 24 bytes in segment BANK_RELAYS
//  8 bytes in segment SFR_AN
// 
// 24 bytes of CODE     memory
//  0 bytes of DATA     memory (+ 8 bytes shared)
// 94 bytes of HUGECODE memory
//
//Errors: none
//Warnings: none
